/*******************************************************************************
 * KFOnlineLobbyDingo generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFOnlineLobbyDingo extends TWOnlineLobby within onlinesubsystemdingo
    native;

var OnlineSubsystem OnlineSubsystem;

function bool Initialize()
{
    OnlineSubsystem.GameInterface.AddCreateOnlineGameCompleteDelegate(OnCreateOnlineGameComplete);
    OnlineSubsystem.GameInterface.AddMultiplayerSessionChangeDelegate(OnMultiplayerSessionChange);
    return true;
}

event EmitUIMessage(string Message)
{
    Class'WorldInfo'.static.GetWorldInfo().GetALocalPlayerController().ClientMessage(Message);
}

event EmitJoinMessage(string Message)
{
    Class'WorldInfo'.static.GetWorldInfo().GetALocalPlayerController().JoinPlayfabServer(true, Message);
}

// Export UKFOnlineLobbyDingo::execLobbyJoinGame(FFrame&, void* const)
native function bool LobbyJoinGame(optional string ServerIP);

// Export UKFOnlineLobbyDingo::execLobbyJoinServer(FFrame&, void* const)
native function bool LobbyJoinServer(string ServerIP);

// Export UKFOnlineLobbyDingo::execSetServerPassword(FFrame&, void* const)
native function SetServerPassword(string Password);

// Export UKFOnlineLobbyDingo::execGetLobbyURLString(FFrame&, void* const)
native function string GetLobbyURLString();

// Export UKFOnlineLobbyDingo::execIsInLobby(FFrame&, void* const)
native function bool IsInLobby();

// Export UKFOnlineLobbyDingo::execIsLobbyOwner(FFrame&, void* const)
native function bool IsLobbyOwner();

// Export UKFOnlineLobbyDingo::execGetLobbyAdmin(FFrame&, void* const)
native function bool GetLobbyAdmin(UniqueNetId LobbyId, out UniqueNetId AdminId);

// Export UKFOnlineLobbyDingo::execGetMyId(FFrame&, void* const)
native function UniqueNetId GetMyId();

// Export UKFOnlineLobbyDingo::execGetFriendNickname(FFrame&, void* const)
native function string GetFriendNickname(UniqueNetId FriendId, optional bool IncludeSelf)
{
    IncludeSelf = true;                
}

// Export UKFOnlineLobbyDingo::execSetLobbyData(FFrame&, void* const)
native function SetLobbyData(string Key, string Value);

// Export UKFOnlineLobbyDingo::execGetLobbyData(FFrame&, void* const)
native function string GetLobbyData(int LobbyIndex, string Key);

// Export UKFOnlineLobbyDingo::execSetVisibility(FFrame&, void* const)
native function bool SetVisibility(int VisibilityIndex);

// Export UKFOnlineLobbyDingo::execShowLobbyInviteInterface(FFrame&, void* const)
native function ShowLobbyInviteInterface(string InviteMessage);

// Export UKFOnlineLobbyDingo::execSendInviteToUsers(FFrame&, void* const)
native function bool SendInviteToUsers(array<string> MembersToInvite, string InviteMessage);

// Export UKFOnlineLobbyDingo::execLobbyMessage(FFrame&, void* const)
native function bool LobbyMessage(string Message);

// Export UKFOnlineLobbyDingo::execGetCurrentLobby(FFrame&, void* const)
native function bool GetCurrentLobby(out ActiveLobbyInfo LobbyInfo);

// Export UKFOnlineLobbyDingo::execGetCurrentPartySize(FFrame&, void* const)
native function int GetCurrentPartySize();

// Export UKFOnlineLobbyDingo::execGetCurrentLobbyId(FFrame&, void* const)
native function UniqueNetId GetCurrentLobbyId();

// Export UKFOnlineLobbyDingo::execGetLobbyFromCommandline(FFrame&, void* const)
native function bool GetLobbyFromCommandline(out UniqueNetId LobbyId, optional bool bMarkAsJoined)
{
    bMarkAsJoined = true;                
}

// Export UKFOnlineLobbyDingo::execLobbyInvite(FFrame&, void* const)
native function LobbyInvite(UniqueNetId LobbyId, UniqueNetId FriendId, bool bAccepted);

// Export UKFOnlineLobbyDingo::execMakeLobby(FFrame&, void* const)
native function bool MakeLobby(int MaxPlayers, Engine.TWOnlineLobby.ELobbyVisibility Type);

// Export UKFOnlineLobbyDingo::execQuitLobby(FFrame&, void* const)
native function bool QuitLobby();

// Export UKFOnlineLobbyDingo::execOnMultiplayerSessionChange(FFrame&, void* const)
native function OnMultiplayerSessionChange(name SessionName, SessionUpdateInfo SessionChanges);

// Export UKFOnlineLobbyDingo::execOnCreateOnlineGameComplete(FFrame&, void* const)
native function OnCreateOnlineGameComplete(name SessionName, bool bWasSuccessful);
