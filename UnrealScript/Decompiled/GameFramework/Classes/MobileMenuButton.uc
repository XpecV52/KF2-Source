/*******************************************************************************
 * MobileMenuButton generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class MobileMenuButton extends MobileMenuObject;

var Texture2D Images[2];
var UVCoords ImagesUVs[2];
var LinearColor ImageColor;
var string Caption;
var LinearColor CaptionColor;

function InitMenuObject(MobilePlayerInput PlayerInput, MobileMenuScene Scene, int ScreenWidth, int ScreenHeight, bool bIsFirstInitialization)
{
    local int I;

    super.InitMenuObject(PlayerInput, Scene, ScreenWidth, ScreenHeight, bIsFirstInitialization);
    I = 0;
    J0x43:

    if(I < 2)
    {
        if(!ImagesUVs[I].bCustomCoords && Images[I] != none)
        {
            ImagesUVs[I].U = 0;
            ImagesUVs[I].V = 0;
            ImagesUVs[I].UL = float(Images[I].SizeX);
            ImagesUVs[I].VL = float(Images[I].SizeY);
        }
        ++ I;
        goto J0x43;
    }
}

function RenderObject(Canvas Canvas, float DeltaTime)
{
    local int Idx;
    local LinearColor DrawColor;

    Idx = ((bIsTouched || bIsHighlighted) ? 1 : 0);
    SetCanvasPos(Canvas);
    DrawColor = ImageColor;
    DrawColor.A *= (Opacity * OwnerScene.Opacity);
    Canvas.DrawTile(Images[Idx], Width, Height, ImagesUVs[Idx].U, ImagesUVs[Idx].V, ImagesUVs[Idx].UL, ImagesUVs[Idx].VL, DrawColor);
    RenderCaption(Canvas);
}

function RenderCaption(Canvas Canvas)
{
    local float UL, VL;

    if(Caption != "")
    {
        Canvas.Font = OwnerScene.SceneCaptionFont;
        Canvas.TextSize(Caption, UL, VL);
        SetCanvasPos(Canvas, (Width / float(2)) - (UL / float(2)), (Height / float(2)) - (VL / float(2)));
        Canvas.DrawColor.R = byte(CaptionColor.R * 255);
        Canvas.DrawColor.G = byte(CaptionColor.G * 255);
        Canvas.DrawColor.B = byte(CaptionColor.B * 255);
        Canvas.DrawColor.A = byte(CaptionColor.A * 255);
        Canvas.DrawText(Caption);
    }
}

defaultproperties
{
    ImageColor=(R=1,G=1,B=1,A=1)
    CaptionColor=(R=0,G=0,B=0,A=1)
    bIsActive=true
}