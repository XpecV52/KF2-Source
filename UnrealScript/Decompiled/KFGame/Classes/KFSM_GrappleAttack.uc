/*******************************************************************************
 * KFSM_GrappleAttack generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFSM_GrappleAttack extends KFSM_InteractionPawnLeader
    native(SpecialMoves);

var array<name> GrappleAnims;
var bool bStopFullBodyWhenMoveEnds;
var byte LastVariant;

static function byte PackSMFlags()
{
    return byte(Rand(default.GrappleAnims.Length));
}

function SpecialMoveStarted(bool bForced, name PrevMove)
{
    super.SpecialMoveStarted(bForced, PrevMove);
    PlayGrappleAnim();
}

function StartInteraction()
{
    local KFAIDirector AIDirector;

    if(((Follower != none) && KFPOwner != none) && KFPOwner.MyKFAIC != none)
    {
        AIDirector = KFPOwner.MyKFAIC.MyAIDirector;
        if(KFAIController_Monster(KFPOwner.MyKFAIC) != none)
        {
            KFAIController_Monster(KFPOwner.MyKFAIC).bCompletedInitialGrabAttack = true;
        }
        if((Follower != none) && KFWeapon(Follower.Weapon) != none)
        {
            KFWeapon(Follower.Weapon).ZedGrabGrenadeTossCooldown = Follower.WorldInfo.TimeSeconds + 0.35;
        }
        if(((Follower != none) && Follower.Controller != none) && KFPlayerController(Follower.Controller) != none)
        {
            KFPlayerController(Follower.Controller).ForceLookAtPawn = KFPOwner;
            KFPlayerController(Follower.Controller).bLockToForceLookAtPawn = true;
        }
        if(AIDirector != none)
        {
            AIDirector.NotifyPawnGrabbed(Follower, KFPOwner);
        }
    }
}

function bool CanInteractWithPawn(KFPawn OtherPawn)
{
    return (((OtherPawn.IsAliveAndWell() && !KFPOwner.IsSameTeam(OtherPawn)) && OtherPawn.Physics != 2) && !OtherPawn.IsDoingSpecialMove()) && super.CanInteractWithPawn(OtherPawn);
}

function PlayGrappleAnim()
{
    LastVariant = KFPOwner.SpecialMoveFlags;
    PlaySpecialMoveAnim(GrappleAnims[LastVariant], 0);
}

function AnimEndNotify(AnimNodeSequence SeqNode, float PlayedTime, float ExcessTime)
{
    local byte Variant;

    if((KFPOwner != none) && KFPOwner.Role == ROLE_Authority)
    {
        Variant = byte(Rand(default.GrappleAnims.Length));
        J0x52:

        if(Variant == LastVariant)
        {
            Variant = byte(Rand(default.GrappleAnims.Length));
            goto J0x52;
        }
        KFPOwner.SpecialMoveFlags = Variant;
        KFPOwner.ReplicatedSpecialMove.Flags = Variant;
        SpecialMoveFlagsUpdated();
    }
}

function SpecialMoveFlagsUpdated()
{
    PlayGrappleAnim();
}

function OnFollowerLeavingSpecialMove()
{
    KFPOwner.EndSpecialMove();
}

function SpecialMoveEnded(name PrevMove, name NextMove)
{
    if(bStopFullBodyWhenMoveEnds)
    {
        KFPOwner.StopBodyAnim(0, 0.2);
    }
    KFPOwner.ZeroMovementVariables();
    if((Follower != none) && Follower.Role == ROLE_Authority)
    {
        if(Follower.IsDoingSpecialMove(FollowerSpecialMove))
        {
            Follower.EndSpecialMove(FollowerSpecialMove);
        }
    }
    super.SpecialMoveEnded(PrevMove, NextMove);
}

function NotifyOwnerTakeHit(class<KFDamageType> DamageType, Vector HitLoc, Vector HitDir, Controller InstigatedBy)
{
    if(((InstigatedBy != none) && KFPOwner != none) && InstigatedBy.GetTeamNum() == KFPOwner.GetTeamNum())
    {
        return;
    }
    KFPOwner.EndSpecialMove();
    if(KFPOwner.CanDoSpecialMove(5) && DamageType.default.StumblePower > 0)
    {
        KFPOwner.DoSpecialMove(5,,, Class'KFSM_Stumble'.static.PackBodyHitSMFlags(KFPOwner, HitDir));
    }
}

defaultproperties
{
    GrappleAnims(0)=Grab_Attack_V1
    GrappleAnims(1)=Grab_Attack_V2
    GrappleAnims(2)=Grab_Attack_V3
    bStopFullBodyWhenMoveEnds=true
    FollowerSpecialMove=ESpecialMove.SM_GrappleVictim
    bAlignPawns=true
    bStopAlignFollowerRotationAtGoal=true
    AlignDistance=92
    AlignFollowerInterpSpeed=22
    bDisableMovement=true
    Handle=SM_GrappleAttack
}