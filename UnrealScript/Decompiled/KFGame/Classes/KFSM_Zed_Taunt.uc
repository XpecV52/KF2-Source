/*******************************************************************************
 * KFSM_Zed_Taunt generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFSM_Zed_Taunt extends KFSM_PlaySingleAnim;

enum ETauntType
{
    TAUNT_Standard,
    TAUNT_EnemyKilled,
    TAUNT_Enraged,
    TAUNT_MAX
};

var byte CurrentTauntType;

static function byte PackSMFlags(KFPawn P, byte InTauntType)
{
    local byte Variant;
    local KFPawnAnimInfo PAI;

    PAI = P.PawnAnimInfo;
    Variant = 255;
    switch(InTauntType)
    {
        case 2:
            if(PAI.TauntEnragedAnims.Length > 0)
            {
                Variant = byte(Rand(PAI.TauntEnragedAnims.Length));
            }
            break;
        case 1:
            if(PAI.TauntKillAnims.Length > 0)
            {
                Variant = byte(Rand(PAI.TauntKillAnims.Length));
            }
            break;
        case 0:
            if(PAI.TauntAnims.Length > 0)
            {
                Variant = byte(Rand(PAI.TauntAnims.Length));
            }
            break;
        default:
            break;
    }
    if(Variant != 255)
    {
        return byte(InTauntType + (Variant << 4));        
    }
    else
    {
        return 255;
    }
}

function PlayAnimation()
{
    local byte Variant;

    CurrentTauntType = byte(KFPOwner.SpecialMoveFlags & 15);
    Variant = byte(KFPOwner.SpecialMoveFlags >> 4);
    switch(CurrentTauntType)
    {
        case 2:
            AnimName = KFPOwner.PawnAnimInfo.TauntEnragedAnims[Variant];
            break;
        case 1:
            AnimName = KFPOwner.PawnAnimInfo.TauntKillAnims[Variant];
            break;
        default:
            AnimName = KFPOwner.PawnAnimInfo.TauntAnims[Variant];
            break;
            break;
    }
    if(AIOwner != none)
    {
        AIOwner.AILog_Internal((((string(GetFuncName()) $ " ") $ string(self)) $ " chose taunt animation ") $ string(AnimName), 'AIController');
    }
    PlaySpecialMoveAnim(AnimName, AnimStance, BlendInTime, BlendOutTime, 1);
}

function SpecialMoveEnded(name PrevMove, name NextMove)
{
    if(KFPOwner.BodyStanceNodes[AnimStance].bIsPlayingCustomAnim)
    {
        KFPOwner.StopBodyAnim(AnimStance, 0.2);
    }
    if(AIOwner != none)
    {
        AIOwner.AIZeroMovementVariables();
    }
    super.SpecialMoveEnded(PrevMove, NextMove);
}

defaultproperties
{
    bDisablesWeaponFiring=true
    bDisableMovement=true
    Handle=KFSM_Taunt
}