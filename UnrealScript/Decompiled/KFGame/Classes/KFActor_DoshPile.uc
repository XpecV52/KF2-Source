/*******************************************************************************
 * KFActor_DoshPile generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFActor_DoshPile extends StaticMeshActor
    hidecategories(Navigation);

var float DoshPileMax;
var export editinline ParticleSystemComponent ExplodeOutEffect;
var(Projectile) ParticleSystem ExplodeOutTemplate;
var export editinline ParticleSystemComponent ExplodeInEffect;
var(Projectile) ParticleSystem ExplodeInTemplate;
var float LastPercent;
var int MaterialSlot;
var float ExplodeDelay;
var bool bDelayActive;
var bool bCreatedMic;
var int PileIndexID;

function SetValue(float Percentfilled)
{
    if(PileIndexID != 0)
    {
        SetHidden(Percentfilled < 1);
        return;
    }
    if(!bDelayActive)
    {
        if(!bCreatedMic)
        {
            StaticMeshComponent.CreateAndSetMaterialInstanceConstant(MaterialSlot);
            bCreatedMic = true;
        }
        MaterialInstanceConstant(StaticMeshComponent.GetMaterial(MaterialSlot)).SetScalarParameterValue('Perc', Percentfilled);
        LastPercent = Percentfilled;
    }
}

simulated function Destroyed()
{
    if(ExplodeOutEffect != none)
    {
        DetachComponent(ExplodeOutEffect);
        WorldInfo.MyEmitterPool.OnParticleSystemFinished(ExplodeOutEffect);
        ExplodeOutEffect = none;
    }
    if(ExplodeInEffect != none)
    {
        DetachComponent(ExplodeInEffect);
        WorldInfo.MyEmitterPool.OnParticleSystemFinished(ExplodeInEffect);
        ExplodeInEffect = none;
    }
}

function ExplodeIn()
{
    bDelayActive = false;
    SetValue(1);
}

function ExplodeOut()
{
    bDelayActive = false;
    SetValue(0);
}

simulated function OnExplodeParticleSystemFinished(ParticleSystemComponent PSC)
{
    if((PSC == ExplodeInEffect) && ExplodeInEffect != none)
    {
        ExplodeInEffect = none;        
    }
    else
    {
        if((PSC == ExplodeOutEffect) && ExplodeInEffect != none)
        {
            ExplodeOutEffect = none;
        }
    }
    DetachComponent(PSC);
    WorldInfo.MyEmitterPool.OnParticleSystemFinished(PSC);
}

function SpawnCompleteParticleEffects(optional bool bExplodIn)
{
    bExplodIn = true;
    if(bDelayActive)
    {
        return;
    }
    bDelayActive = true;
    if(bExplodIn)
    {
        ExplodeInEffect = WorldInfo.MyEmitterPool.SpawnEmitterCustomLifetime(ExplodeInTemplate);
        if(ExplodeInEffect != none)
        {
            ExplodeInEffect.__OnSystemFinished__Delegate = OnExplodeParticleSystemFinished;
            ExplodeInEffect.SetAbsolute(false, false, false);
            ExplodeInEffect.SetLODLevel(((WorldInfo.bDropDetail) ? 1 : 0));
            ExplodeInEffect.bUpdateComponentInTick = true;
            AttachComponent(ExplodeInEffect);            
        }
        else
        {
            LogInternal("Explode in effect failed to spawn. Is this setup correctly?");
        }
        SetTimer(ExplodeDelay, false, 'ExplodeIn');        
    }
    else
    {
        ExplodeOutEffect = WorldInfo.MyEmitterPool.SpawnEmitterCustomLifetime(ExplodeOutTemplate);
        if(ExplodeOutEffect != none)
        {
            ExplodeOutEffect.__OnSystemFinished__Delegate = OnExplodeParticleSystemFinished;
            ExplodeOutEffect.SetAbsolute(false, false, false);
            ExplodeOutEffect.SetLODLevel(((WorldInfo.bDropDetail) ? 1 : 0));
            ExplodeOutEffect.bUpdateComponentInTick = true;
            AttachComponent(ExplodeOutEffect);            
        }
        else
        {
            LogInternal("Explode out effect not spawned.  Is this setup correctly?");
        }
        SetTimer(ExplodeDelay, false, 'ExplodeOut');
    }
    PlayDoshPileExplodeSound();
}

function PlayDoshPileExplodeSound()
{
    local KFPlayerController KFPC;

    foreach LocalPlayerControllers(Class'KFPlayerController', KFPC)
    {
        if(KFPC.MyGFxManager != none)
        {
            KFPC.MyGFxManager.PlaySoundFromTheme(Class'KFGFxMenu_DoshVault'.default.PileDisappearEventName, Class'KFGFxMenu_DoshVault'.default.DoshVaultSoundThemeName);
        }        
    }    
}

function SpawnFillingParticleEffects();

defaultproperties
{
    DoshPileMax=1000000
    ExplodeOutTemplate=ParticleSystem'FX_Environmental_EMIT_THREE.FX_Dosh_Vault_Disappear_01'
    ExplodeInTemplate=ParticleSystem'FX_Environmental_EMIT_THREE.FX_Dosh_Vault_Appear_01'
    LastPercent=-1
    MaterialSlot=1
    ExplodeDelay=1
    begin object name=StaticMeshComponent0 class=StaticMeshComponent
        StaticMesh=StaticMesh'econ_dosh_mesh.Econ_Dosh_Pallet_SM'
        ReplacementPrimitive=none
    object end
    // Reference: StaticMeshComponent'Default__KFActor_DoshPile.StaticMeshComponent0'
    StaticMeshComponent=StaticMeshComponent0
    begin object name=StaticMeshComponent0 class=StaticMeshComponent
        StaticMesh=StaticMesh'econ_dosh_mesh.Econ_Dosh_Pallet_SM'
        ReplacementPrimitive=none
    object end
    // Reference: StaticMeshComponent'Default__KFActor_DoshPile.StaticMeshComponent0'
    Components(0)=StaticMeshComponent0
    bStatic=false
    begin object name=StaticMeshComponent0 class=StaticMeshComponent
        StaticMesh=StaticMesh'econ_dosh_mesh.Econ_Dosh_Pallet_SM'
        ReplacementPrimitive=none
    object end
    // Reference: StaticMeshComponent'Default__KFActor_DoshPile.StaticMeshComponent0'
    CollisionComponent=StaticMeshComponent0
}