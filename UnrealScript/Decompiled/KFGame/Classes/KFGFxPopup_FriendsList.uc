/*******************************************************************************
 * KFGFxPopup_FriendsList generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFGFxPopup_FriendsList extends KFGFxObject_Popup within GFxMoviePlayer;

var OnlineSubsystemSteamworks OnlineSub;
var KFOnlineLobbySteamworks SteamworksLobby;

function InitializePopup(KFGFxMoviePlayer_Manager InManager)
{
    super.InitializePopup(InManager);
    OnlineSub = OnlineSubsystemSteamworks(Class'GameEngine'.static.GetOnlineSubsystem());
    SteamworksLobby = KFOnlineLobbySteamworks(OnlineSub.GetLobbyInterface());
    setLocalizedText();
    setOtherFirendsTitleVisibility();
    fillFriendsListPopup();
    SetupLinkVisibility();
    OnlineSub.TriggerRefreshFriendsList();
}

function setLocalizedText()
{
    local GFxObject LocalizedStringsObject;

    LocalizedStringsObject = Outer.CreateObject("Object");
    LocalizedStringsObject.SetString("titleText", Class'KFCommon_LocalizedStrings'.default.FriendsListPopupTitleString);
    LocalizedStringsObject.SetString("friendName", Class'KFCommon_LocalizedStrings'.default.FriendsListPopupFriendString);
    LocalizedStringsObject.SetString("friendsBlockTitleText", Class'KFCommon_LocalizedStrings'.default.FriendsListPopupFriendsString);
    LocalizedStringsObject.SetString("otherFriendsBlockTitleText", Class'KFCommon_LocalizedStrings'.default.FriendsListPopupOtherFriendsString);
    LocalizedStringsObject.SetString("linkText", Class'KFCommon_LocalizedStrings'.default.FriendsListPopupLinkButonString);
    SetObject("setTextLocalized", LocalizedStringsObject);
}

function SetupLinkVisibility()
{
    if(OnlineSub.IsLoggedInOnOtherPlatform())
    {
        SetBool("showLink", false);
    }
}

function setOtherFirendsTitleVisibility()
{
    if(Class'WorldInfo'.static.IsEOSBuild())
    {
        GetObject("otherFriendsTitle").SetVisible(false);
    }
}

function fillFriendsListPopup()
{
    local array<OnlineFriend> FriendsList, FriendsFromOtherPlatformList;
    local GFxObject FriendDataObject, OtherFriendDataObject;
    local int I, index1, index2;

    OnlineSub.GetFriendsList(0, FriendsList);
    OnlineSub.GetFriendsListFromOtherPlatform(0, FriendsFromOtherPlatformList);
    FriendDataObject = Outer.CreateArray();
    OtherFriendDataObject = Outer.CreateArray();
    index1 = 0;
    I = 0;
    J0xC0:

    if(I < FriendsList.Length)
    {
        friendsListLog(FriendsList[I]);
        FriendDataObject.SetElementObject(++ index1, CreateFriendItem(FriendsList[I]));
        ++ I;
        goto J0xC0;
    }
    index2 = 0;
    I = 0;
    J0x160:

    if(I < FriendsFromOtherPlatformList.Length)
    {
        friendsListLog(FriendsFromOtherPlatformList[I]);
        OtherFriendDataObject.SetElementObject(++ index2, CreateFriendItem(FriendsFromOtherPlatformList[I]));
        ++ I;
        goto J0x160;
    }
    SetObject("fillFriendsList", FriendDataObject);
    SetObject("fillOtherFriendsList", OtherFriendDataObject);
    GetObject("friendsTitle").GetObject("btnPlus").SetVisible(FriendsList.Length == 0);
    GetObject("friendsTitle").GetObject("btnMinus").SetVisible(FriendsList.Length != 0);
    GetObject("otherFriendsTitle").GetObject("btnPlus").SetVisible(FriendsFromOtherPlatformList.Length == 0);
    GetObject("otherFriendsTitle").GetObject("btnMinus").SetVisible(FriendsFromOtherPlatformList.Length != 0);
}

function GFxObject CreateFriendItem(OnlineFriend Friend)
{
    local GFxObject DataObject;
    local KFPlayerController KFPC;
    local string AvatarPath;
    local int I;
    local UniqueNetId ZeroId;

    KFPC = KFPlayerController(Outer.GetPC());
    DataObject = Outer.CreateObject("Object");
    if(Friend.UniqueId != ZeroId)
    {
        AvatarPath = "";
        I = 0;
        J0xAD:

        if(I < 10)
        {
            AvatarPath = KFPC.GetSteamAvatar(Friend.UniqueId);
            if(AvatarPath != "")
            {
                goto J0x123;
            }
            ++ I;
            goto J0xAD;
        }
    }
    J0x123:

    LogInternal("avatarURL:" @ AvatarPath);
    DataObject.SetString("friendName", Friend.NickName);
    DataObject.SetString("friendUid", Class'OnlineSubsystem'.static.UniqueNetIdToString(Friend.UniqueId));
    DataObject.SetBool("sendInvite", false);
    DataObject.SetString("profileImageSource", "img://" $ AvatarPath);
    return DataObject;
}

function string getAvatarPath(UniqueNetId FriendId, KFPlayerController KFPC)
{
    local string AvatarPath;
    local int I;
    local UniqueNetId ZeroId;

    if(FriendId != ZeroId)
    {
        AvatarPath = "";
        I = 0;
        J0x35:

        if(I < 10)
        {
            AvatarPath = KFPC.GetSteamAvatar(FriendId);
            if(AvatarPath != "")
            {
                return AvatarPath;
            }
            ++ I;
            goto J0x35;
        }
    }
    return "";
}

function OnFriendsChange()
{
    fillFriendsListPopup();
}

function OnLoginOnOtherPlatformDoneAndFriendsReady()
{
    fillFriendsListPopup();
    SetupLinkVisibility();
}

function Callback_BtnBackClick()
{
    ClosePopUp();
}

function Callback_SendInviteToSelectedFriend(string Uid)
{
    local UniqueNetId FriendUID;

    LogInternal((string(GetFuncName()) @ "Uid:") @ Uid);
    Class'OnlineSubsystem'.static.StringToUniqueNetId(Uid, FriendUID);
    if(SteamworksLobby != none)
    {
        SteamworksLobby.InviteFriendToLobbyByUid(FriendUID.Uid);
    }
}

function Callback_BtnLinkClick()
{
    LogInternal(string(GetFuncName()));
    OnlineSub.LoginOnOtherPlatform();
}

function friendsListLog(OnlineFriend Friend)
{
    LogInternal("**********FRIEND**********");
    LogInternal("Name:" @ Friend.NickName);
    LogInternal("UniqueId:" @ Class'OnlineSubsystem'.static.UniqueNetIdToString(Friend.UniqueId));
    LogInternal("bIsOnline:" @ string(Friend.bIsOnline));
    LogInternal("bIsPlaying:" @ string(Friend.bIsPlaying));
    LogInternal("bIsPlayingThisGame:" @ string(Friend.bIsPlayingThisGame));
    LogInternal("bIsJoinable:" @ string(Friend.bIsJoinable));
    LogInternal("bHaveInvited:" @ string(Friend.bHaveInvited));
    LogInternal("bHasInvitedYou:" @ string(Friend.bHasInvitedYou));
}

function Callback_Log(string Text)
{
    LogInternal("---From Popup" @ Text);
}

function sendFakeData()
{
    local int I;
    local GFxObject DataObject1, itemDataObject1, DataObject2, itemDataObject2;

    DataObject1 = Outer.CreateArray();
    DataObject2 = Outer.CreateArray();
    I = 0;
    J0x5D:

    if(I < 12)
    {
        itemDataObject1 = Outer.CreateObject("Object");
        itemDataObject1.SetString("friendName", "Nick_" $ string(I));
        itemDataObject1.SetBool("sendInvite", false);
        itemDataObject1.SetString("profileImageSource", "img://");
        itemDataObject2 = Outer.CreateObject("Object");
        itemDataObject2.SetString("friendName", "OtherNick_" $ string(I));
        itemDataObject2.SetBool("sendInvite", false);
        itemDataObject2.SetString("profileImageSource", "img://");
        DataObject1.SetElementObject(I, itemDataObject1);
        DataObject2.SetElementObject(I, itemDataObject2);
        ++ I;
        goto J0x5D;
    }
    SetObject("fillFriendsList", DataObject1);
    SetObject("fillOtherFriendsList", DataObject2);
}
