/*******************************************************************************
 * KFSeqAct_Objective generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFSeqAct_Objective extends SequenceAction
    native
    forcescriptorder(true)
    hidecategories(Object);

enum EObjectiveDifficulty<OD_Easy.DisplayName=EASY|OD_Medium.DisplayName=MEDIUM|OD_Hard.DisplayName=HARD>
{
    OD_Easy,
    OD_Medium,
    OD_Hard,
    OD_MAX
};

struct native ObjDifficultySetup
{
    /** Difficulty */
    var() KFSeqAct_Objective.EObjectiveDifficulty Difficulty;
    /** Difficulty */
    var() int TimeLimit<ClampMin=0>;
    /** The amount of time players have to complete the objective */
    var() float SpawnCurveIntensity<ClampMin=0.0|ClampMax=1.0>;
    /** An override to the games spawning curve to allow spawning intensity control during the objective gameplay */
    var() int DoshReward<ClampMin=0>;
    /** The total amount of dosh the team receives for the objective. */
    var() int PerkReward<ClampMin=0>;

    structdefaultproperties
    {
        Difficulty=EObjectiveDifficulty.OD_Easy
        TimeLimit=0
        SpawnCurveIntensity=0
        DoshReward=0
        PerkReward=0
    }
};

var() array<ObjDifficultySetup> ObjectiveDifficulties;
var() class<KFObjective> ObjectiveClass;
var() KFObjectiveVolume StartVolume;

event InitObj(KFObjective SpawnedObjective)
{
    local byte ObjDifficulty;

    ObjDifficulty = byte(Rand(ObjectiveDifficulties.Length));
    SpawnedObjective.StartVolume = StartVolume;
    SpawnedObjective.ObjectiveDifficulty = ObjectiveDifficulties[ObjDifficulty].Difficulty;
    SpawnedObjective.TimeLimit = ObjectiveDifficulties[ObjDifficulty].TimeLimit;
    SpawnedObjective.SpawnCurveIntensity = ObjectiveDifficulties[ObjDifficulty].SpawnCurveIntensity;
    SpawnedObjective.DoshReward = ObjectiveDifficulties[ObjDifficulty].DoshReward;
    SpawnedObjective.PerkReward = ObjectiveDifficulties[ObjDifficulty].PerkReward;
    SpawnedObjective.Initialize();
}

defaultproperties
{
    InputLinks(0)=(LinkDesc="Enable Objective",bHasImpulse=false,QueuedActivations=0,bDisabled=false,bDisabledPIE=false,LinkedOp=none,DrawY=0,bHidden=false,ActivateDelay=0,bMoving=false,bClampedMax=false,bClampedMin=false,OverrideDelta=0)
    ObjName="Enable Objective"
    ObjCategory="Objective"
}