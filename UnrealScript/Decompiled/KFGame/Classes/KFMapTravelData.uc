/*******************************************************************************
 * KFMapTravelData generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFMapTravelData extends Object
    abstract
    native;

struct native sPersistentPlayerData
{
    var UniqueNetId PlayerID;
    var int TeamIndex;
    var int Dosh;
    var int Kills;
    var int Deaths;
    var int DamageDealt;

    structdefaultproperties
    {
        PlayerID=(Uid=none)
        TeamIndex=-1
        Dosh=-1
        Kills=-1
        Deaths=-1
        DamageDealt=-1
    }
};

var private string LastGameMap;
var private float LastTravelTime;
var private array<sPersistentPlayerData> PlayerData;
var private array<int> TeamScores;
var private int RoundCount;
var private int SurvivorDeaths;
var private int BossDamageDone;
var private int BossSurvivorDamageTaken;

// Export UKFMapTravelData::execSetLastGameMap(FFrame&, void* const)
native static final function SetLastGameMap(string MapName);

// Export UKFMapTravelData::execGetLastGameMap(FFrame&, void* const)
native static final function string GetLastGameMap();

// Export UKFMapTravelData::execSetLastTravelTime(FFrame&, void* const)
native static final function SetLastTravelTime(float Time);

// Export UKFMapTravelData::execGetLastTravelTime(FFrame&, void* const)
native static final function float GetLastTravelTime();

// Export UKFMapTravelData::execAddPlayer(FFrame&, void* const)
native static final function AddPlayer(UniqueNetId PlayerNetId, optional int TeamIndex, optional int Dosh, optional int Kills, optional int Deaths, optional int DamageDealt)
{
    Dosh = -1;
    Kills = -1;
    Deaths = -1;
    DamageDealt = -1;                                
}

// Export UKFMapTravelData::execRemovePlayer(FFrame&, void* const)
native static final function RemovePlayer(UniqueNetId PlayerNetId);

// Export UKFMapTravelData::execGetPlayer(FFrame&, void* const)
native static final function sPersistentPlayerData GetPlayer(UniqueNetId PlayerNetId);

// Export UKFMapTravelData::execClearPlayerData(FFrame&, void* const)
native static final function ClearPlayerData();

// Export UKFMapTravelData::execSetTeamScore(FFrame&, void* const)
native static final function SetTeamScore(int TeamIndex, int TeamScore);

// Export UKFMapTravelData::execGetTeamScore(FFrame&, void* const)
native static final function int GetTeamScore(int TeamIndex);

// Export UKFMapTravelData::execSetRoundCount(FFrame&, void* const)
native static final function SetRoundCount(int RoundNum);

// Export UKFMapTravelData::execGetRoundCount(FFrame&, void* const)
native static final function int GetRoundCount();

// Export UKFMapTravelData::execSetSurvivorDeaths(FFrame&, void* const)
native static final function SetSurvivorDeaths(int Deaths);

// Export UKFMapTravelData::execGetSurvivorDeaths(FFrame&, void* const)
native static final function int GetSurvivorDeaths();

// Export UKFMapTravelData::execSetBossDamageDone(FFrame&, void* const)
native static final function SetBossDamageDone(int Dmg);

// Export UKFMapTravelData::execGetBossDamageDone(FFrame&, void* const)
native static final function int GetBossDamageDone();

// Export UKFMapTravelData::execSetBossSurvivorDamageTaken(FFrame&, void* const)
native static final function SetBossSurvivorDamageTaken(int Dmg);

// Export UKFMapTravelData::execGetBossSurvivorDamageTaken(FFrame&, void* const)
native static final function int GetBossSurvivorDamageTaken();

// Export UKFMapTravelData::execClearAllMapTravelData(FFrame&, void* const)
native static function ClearAllMapTravelData();

defaultproperties
{
    SurvivorDeaths=-1
    BossDamageDone=-1
    BossSurvivorDamageTaken=-1
}