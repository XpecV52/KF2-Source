/*******************************************************************************
 * KFSM_DoorMeleeAttack generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFSM_DoorMeleeAttack extends KFSM_MeleeAttack
    native(SpecialMoves);

function SpecialMoveStarted(bool bForced, name PrevMove)
{
    local KFPawn_Monster KFPM;

    bUseRootMotion = false;
    UnpackSpecialMoveFlags();
    KFPM = KFPawn_Monster(KFPOwner);
    if(((KFPM != none) && KFPM.bCanCloak) && KFPM.bIsCloaking)
    {
        KFPM.SetCloaked(false);
    }
    super(KFSM_PlaySingleAnim).SpecialMoveStarted(bForced, PrevMove);
}

static function byte PackSMFlags(KFPawn_Monster P, optional name AttackName, optional bool bForce)
{
    if(((P != none) && P.PawnAnimInfo != none) && P.PawnAnimInfo.DoorAttacks.Length > 0)
    {
        return byte(Rand(P.PawnAnimInfo.DoorAttacks.Length));
    }
    return 255;
}

function UnpackSpecialMoveFlags()
{
    AnimName = KFPOwner.PawnAnimInfo.DoorAttacks[KFPOwner.SpecialMoveFlags];
}

protected function bool InternalCanDoSpecialMove()
{
    if((AIOwner != none) && AIOwner.DoorEnemy != none)
    {
        if(KFPOwner.IsAliveAndWell() && KFPOwner.Physics != 2)
        {
            return true;
        }
    }
    return false;
}

defaultproperties
{
    bCanBeInterrupted=true
    Handle=KFSM_DoorMeleeAttack
}