/*******************************************************************************
 * KFUIDataStore_GameResource generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFUIDataStore_GameResource extends UIDataStore_GameResource
    transient
    native(UIPrivate)
    config(Game)
    hidecategories(Object,UIRoot);

static function KFMapSummary GetMapSummaryFromMapName(string MapName)
{
    local KFUIDataStore_GameResource GameResourceDS;
    local array<UIResourceDataProvider> MapProviders;
    local int ProviderIndex;

    GameResourceDS = KFUIDataStore_GameResource(Class'UIRoot'.static.StaticResolveDataStore(Class'KFUIDataStore_GameResource'.default.Tag));
    if(GameResourceDS != none)
    {
        if(GameResourceDS.GetResourceProviders('Maps', MapProviders))
        {
            ProviderIndex = GameResourceDS.FindProviderIndexByMapName(MapName, MapProviders);
            if(((ProviderIndex != -1) && ProviderIndex >= 0) && ProviderIndex < MapProviders.Length)
            {
                return KFMapSummary(MapProviders[ProviderIndex]);
            }
        }
    }
    return none;
}

static function int FindProviderIndexByMapName(string MapName, out array<UIResourceDataProvider> out_MapProviders)
{
    local int I;

    I = 0;
    J0x0B:

    if(I < out_MapProviders.Length)
    {
        if(Caps(KFMapSummary(out_MapProviders[I]).MapName) == Caps(MapName))
        {
            return I;
        }
        ++ I;
        goto J0x0B;
    }
    return -1;
}

static function string GetMapNameUsingProviderIndex(int ProviderIndex)
{
    local UIDataStore_GameResource GameResourceDS;
    local array<UIResourceDataProvider> MapProviders;
    local KFMapSummary MapData;

    GameResourceDS = UIDataStore_GameResource(Class'UIRoot'.static.StaticResolveDataStore(Class'KFUIDataStore_GameResource'.default.Tag));
    if(GameResourceDS != none)
    {
        if(GameResourceDS.GetResourceProviders('Maps', MapProviders))
        {
            if(((MapProviders.Length > 0) && ProviderIndex >= 0) && ProviderIndex < MapProviders.Length)
            {
                MapData = KFMapSummary(MapProviders[ProviderIndex]);
                return MapData.MapName;
            }
        }
    }
    return "";
}

// Export UKFUIDataStore_GameResource::execInitializeProvidersInternal(FFrame&, void* const)
private native final function InitializeProvidersInternal();

static function InitializeProviders()
{
    local KFUIDataStore_GameResource GameResourceDS;

    GameResourceDS = KFUIDataStore_GameResource(Class'UIRoot'.static.StaticResolveDataStore(Class'KFUIDataStore_GameResource'.default.Tag));
    if(GameResourceDS != none)
    {
        GameResourceDS.InitializeProvidersInternal();
    }
}
