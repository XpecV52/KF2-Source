/*******************************************************************************
 * KFVoiceInfo generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFVoiceInfo extends Object
    abstract;

const ACKINDEXSTART = 600;
const FRIENDLYFIREINDEXSTART = 700;
const GOTYOURBACKINDEXSTART = 800;
const NEEDOURFLAGINDEXSTART = 900;
const SNIPERINDEXINDEXSTART = 1000;
const LOCATIONUPDATEINDEXSTART = 1100;
const INPOSITIONINDEXSTART = 1200;
const ENEMYSTATUSINDEXSTART = 1300;
const KILLEDVEHICLEINDEXSTART = 1400;
const ENEMYFLAGCARRIERINDEXSTART = 1500;
const HOLDINGFLAGINDEXSTART = 1600;
const AREASECUREINDEXSTART = 1700;
const GOTOURFLAGINDEXSTART = 1900;
const NODECONSTRUCTEDINDEXSTART = 2000;

var array<SoundNodeWave> AckSounds;
var array<SoundNodeWave> FriendlyFireSounds;
var array<SoundNodeWave> GotYourBackSounds;
var array<SoundNodeWave> NeedOurFlagSounds;
var array<SoundNodeWave> SniperSounds;
var array<SoundNodeWave> InPositionSounds;
var array<SoundNodeWave> HaveFlagSounds;
var array<SoundNodeWave> AreaSecureSounds;
var SoundNodeWave IncomingSound;
var SoundNodeWave EnemyFlagCarrierSound;
var SoundNodeWave EnemyFlagCarrierHereSound;
var SoundNodeWave EnemyFlagCarrierHighSound;
var SoundNodeWave EnemyFlagCarrierLowSound;
var SoundNodeWave MidfieldSound;
var SoundNodeWave GotOurFlagSound;
var int LocationSpeechOffset;

static function int GetAckMessageIndex(Controller Sender, PlayerReplicationInfo Recipient, name MessageType)
{
    if(default.AckSounds.Length == 0)
    {
        return -1;
    }
    return 600 + Rand(default.AckSounds.Length);
}

static function int GetFriendlyFireMessageIndex(Controller Sender, PlayerReplicationInfo Recipient, name MessageType)
{
    if(((default.FriendlyFireSounds.Length == 0) || Recipient == none) || KFPlayerController(Recipient.Owner) == none)
    {
        return -1;
    }
    return 700 + Rand(default.FriendlyFireSounds.Length);
}

static function int GetGotYourBackMessageIndex(Controller Sender, PlayerReplicationInfo Recipient, name MessageType)
{
    if(default.GotYourBackSounds.Length == 0)
    {
        return -1;
    }
    return 800 + Rand(default.GotYourBackSounds.Length);
}

static function int GetNeedOurFlagMessageIndex(Controller Sender, PlayerReplicationInfo Recipient, name MessageType)
{
    if(default.NeedOurFlagSounds.Length == 0)
    {
        return -1;
    }
    return 900 + Rand(default.NeedOurFlagSounds.Length);
}
