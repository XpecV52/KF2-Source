/*******************************************************************************
 * KFGFxPostGameContainer_PlayerStats generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFGFxPostGameContainer_PlayerStats extends KFGFxObject_Container within GFxMoviePlayer;

var const localized string AchievementsString;
var const localized string ZedKillsString;
var const localized string TopWeaponsString;
var const localized string KnifeString;
var string PlayerStatsString;
var int ItemCount;

function Initialize(KFGFxObject_Menu NewParentMenu)
{
    super.Initialize(NewParentMenu);
    LocalizeText();
    SetPlayerStats();
}

function LocalizeText()
{
    local GFxObject TextObject;

    TextObject = Outer.CreateObject("Object");
    TextObject.SetString("achievement", AchievementsString);
    TextObject.SetString("playerStats", PlayerStatsString);
    TextObject.SetString("zedKills", ZedKillsString);
    TextObject.SetString("topWeapons", TopWeaponsString);
    SetObject("localizedText", TextObject);
}

function SetPlayerStats()
{
    local GFxObject ObjectArray, ObjectArrayAdvancedStats, ObjectTopWeaponsList;
    local KFPlayerReplicationInfo KFPRI;
    local KFPlayerController KFPC;
    local int I, TopWeaponCount;
    local array<WeaponDamage> TopWeaponList;
    local EphemeralMatchStats StatCollector;
    local string TempWeaponName, TempIconSource;

    ItemCount = 0;
    KFPRI = KFPlayerReplicationInfo(Outer.GetPC().PlayerReplicationInfo);
    KFPC = KFPlayerController(Outer.GetPC());
    if((KFPRI != none) && KFPC != none)
    {
        StatCollector = KFPC.MatchStats;
        ObjectArray = Outer.CreateArray();
        ObjectArrayAdvancedStats = Outer.CreateArray();
        ObjectTopWeaponsList = Outer.CreateArray();
        ObjectArray.SetElementObject(ItemCount, MakeTextObject("Total Dosh Earned:", string(Max(StatCollector.TotalDoshEarned, 0))));
        ObjectArray.SetElementObject(ItemCount, MakeTextObject("Total Kills:", string(KFPRI.Kills)));
        ObjectArray.SetElementObject(ItemCount, MakeTextObject("Large Zed Kills:", string(StatCollector.TotalLargeZedKills)));
        ObjectArray.SetElementObject(ItemCount, MakeTextObject("Assists:", string(KFPRI.Assists)));
        ObjectArray.SetElementObject(ItemCount, MakeTextObject("HeadShots:", string(StatCollector.TotalHeadShots)));
        ObjectArray.SetElementObject(ItemCount, MakeTextObject("Total Damage Dealt:", string(StatCollector.TotalDamageDealt)));
        StatCollector.GetTopWeapons(3, TopWeaponList);
        TopWeaponCount = 0;
        I = 0;
        J0x3D5:

        if(I < TopWeaponList.Length)
        {
            StatCollector.ResolveLocalizedWeaponNameAndIcon(TopWeaponList[I].DamageTypeID, TempWeaponName, TempIconSource);
            if(TopWeaponList[I].DamageTypeID == 3)
            {
                TempWeaponName = KnifeString;
            }
            ObjectTopWeaponsList.SetElementObject(TopWeaponCount, MakeWeaponObject(TempWeaponName, TempIconSource, TopWeaponList[I].DamageAmount, TopWeaponList[I].HeadShots, TopWeaponList[I].LargeZedKills));
            ++ TopWeaponCount;
            TempWeaponName = "";
            TempIconSource = "";
            ++ I;
            goto J0x3D5;
        }
        I = 0;
        J0x57A:

        if(I < StatCollector.ZedKillsArray.Length)
        {
            ObjectArrayAdvancedStats.SetElementObject(I, MakeZedKillObject(StatCollector.ZedKillsArray[I].MonsterClass, string(StatCollector.ZedKillsArray[I].KillCount)));
            ++ I;
            goto J0x57A;
        }
    }
    SetObject("topWeapons", ObjectTopWeaponsList);
    SetObject("playerGeneralStats", ObjectArray);
    SetObject("playerAdvancedStats", ObjectArrayAdvancedStats);
}

function GFxObject MakeTextObject(string PrimaryText, string SecondaryText)
{
    local GFxObject TempObject;

    TempObject = Outer.CreateObject("Object");
    TempObject.SetString("typeString", "STAT");
    TempObject.SetString("title", PrimaryText);
    TempObject.SetString("value", SecondaryText);
    ++ ItemCount;
    return TempObject;
}

function GFxObject MakeZedKillObject(class<KFPawn_Monster> MonsterClass, string SecondaryText)
{
    local GFxObject TempObject;
    local string MonsterName;

    MonsterName = Localize("Zeds", string(MonsterClass.Name), "KFGame");
    TempObject = Outer.CreateObject("Object");
    TempObject.SetString("typeString", "ZED_KILL");
    TempObject.SetString("title", MonsterName);
    TempObject.SetString("value", SecondaryText);
    TempObject.SetBool("bSkipAnim", true);
    ++ ItemCount;
    return TempObject;
}

function GFxObject MakeWeaponObject(string WeaponName, string WeaponIcon, int WeaponDamage, int HeadShotsWithWeapon, int LargeZedKillsWithWeapon)
{
    local GFxObject TempObject;

    TempObject = Outer.CreateObject("Object");
    TempObject.SetString("typeString", "TopWeapon");
    TempObject.SetString("weaponName", WeaponName);
    TempObject.SetString("weaponIcon", "img://" $ WeaponIcon);
    TempObject.SetString("damageText", "DAMAGE DEALT:");
    TempObject.SetString("headshotsText", "HEADSHOTS:");
    TempObject.SetString("largeZedText", "LARGE ZED KILLS:");
    TempObject.SetInt("damage", WeaponDamage);
    TempObject.SetInt("headshots", HeadShotsWithWeapon);
    TempObject.SetInt("largeZed", LargeZedKillsWithWeapon);
    return TempObject;
}

function GFxObject MakeAwardObject();

defaultproperties
{
    AchievementsString="Achievements"
    ZedKillsString="ZED KILLS"
    TopWeaponsString="TOP WEAPONS"
    KnifeString="Knife"
}