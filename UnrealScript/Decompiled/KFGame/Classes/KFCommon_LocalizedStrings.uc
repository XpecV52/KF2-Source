/*******************************************************************************
 * KFCommon_LocalizedStrings generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFCommon_LocalizedStrings extends Object;

var const localized array<localized string> DifficultyStrings;
var const localized array<localized string> LengthStrings;
var const localized array<localized string> ServerTypeStrings;
var const localized array<localized string> PermissionStrings;
var const localized array<localized string> ConsolePermissionStrings;
var const localized array<localized string> ModeStrings;
var const localized string TeamSwappedString;
var const localized string NoPreferenceString;
var const localized string OKString;
var const localized string ConfirmString;
var const localized string CancelString;
var const localized string BackString;
var const localized string PerkUpdateNoticeString;
var const localized string NoticeString;
var const localized string AcceptString;
var const localized string DeclineString;
var const localized string YesString;
var const localized string NoString;
var const localized string DisbandPartyString;
var const localized string LeaveCurrentMenuString;
var const localized string ZedString;
var const localized string HumanString;
var const localized string SpectatorString;
var const localized string UnableToSwitchTeamString;
var const localized string NoSwitchReasonString;
var const localized string TeamString;
var const localized string AllString;
var const localized string LoadingString;
var const localized string AutoTradeCompleteString;
var const localized string AutoFillCompleteString;
var const localized string WeaponUpgradeComepleteString;
var const localized string SecondaryWeaponPurchasedString;
var const localized string NoItemsPurchasedString;
var const localized string SetTakeoverServerPasswordTitle;
var const localized string FreeConsolePlayOverString;
var const localized string BuyGameString;

static function array<string> GetDifficultyStringsArray()
{
    return default.DifficultyStrings;
}

static function string GetDifficultyString(float GameDifficulty)
{
    local byte DifficultyIndex;

    DifficultyIndex = Class'KFGameDifficultyInfo'.static.GetDifficultyIndex(GameDifficulty);
    if((0 < default.DifficultyStrings.Length) && DifficultyIndex < default.DifficultyStrings.Length)
    {
        return default.DifficultyStrings[DifficultyIndex];
    }
    return default.NoPreferenceString;
}

static function array<string> GetLengthStringsArray()
{
    return default.LengthStrings;
}

static function string GetLengthString(float LengthIndex)
{
    if((0 < default.LengthStrings.Length) && LengthIndex < float(default.LengthStrings.Length))
    {
        return default.LengthStrings[int(LengthIndex)];
    }
    return default.NoPreferenceString;
}

static function string GetServerTypeString(float ServerTypeIndex)
{
    if((0 < default.ServerTypeStrings.Length) && ServerTypeIndex < float(default.ServerTypeStrings.Length))
    {
        return default.ServerTypeStrings[int(ServerTypeIndex)];
    }
    return default.NoPreferenceString;
}

static function string GetPermissionString(float PermissionIndex)
{
    if((0 < default.PermissionStrings.Length) && PermissionIndex < float(default.PermissionStrings.Length))
    {
        return default.PermissionStrings[int(PermissionIndex)];
    }
    return default.NoPreferenceString;
}

static function array<string> GetPermissionStringsArray(bool bConsoleBuild)
{
    if(bConsoleBuild)
    {
        return default.ConsolePermissionStrings;        
    }
    else
    {
        return default.PermissionStrings;
    }
}

static function array<string> GetGameModeStringsArray()
{
    return default.ModeStrings;
}

static function string GetGameModeString(int GameModeIndex)
{
    if(GameModeIndex == -1)
    {
        return default.NoPreferenceString;
    }
    if((0 < default.ModeStrings.Length) && GameModeIndex < default.ModeStrings.Length)
    {
        return default.ModeStrings[GameModeIndex];
    }
    return default.NoPreferenceString;
}

static function string GetFriendlyMapName(string MapName)
{
    local KFMapSummary MapData;

    MapData = Class'KFUIDataStore_GameResource'.static.GetMapSummaryFromMapName(MapName);
    if((MapData != none) && MapData.DisplayName != "")
    {
        return MapData.DisplayName;        
    }
    else
    {
        return MapName;
    }
}

defaultproperties
{
    DifficultyStrings(0)="Normal"
    DifficultyStrings(1)="Hard"
    DifficultyStrings(2)="Suicidal"
    DifficultyStrings(3)="Hell on Earth"
    LengthStrings(0)="Short (4 Waves)"
    LengthStrings(1)="Medium (7 Waves)"
    LengthStrings(2)="Long (10 Waves)"
    ServerTypeStrings(0)="Ranked"
    ServerTypeStrings(1)="Ranked - Stock"
    ServerTypeStrings(2)="Ranked - Custom"
    ServerTypeStrings(3)="Unranked"
    PermissionStrings(0)="Public"
    PermissionStrings(1)="Friends only"
    PermissionStrings(2)="Private-Password"
    ConsolePermissionStrings(0)="Public"
    ConsolePermissionStrings(1)="Invite Only"
    ModeStrings(0)="Survival"
    ModeStrings(1)="VS Survival"
    TeamSwappedString="You have been team swapped"
    NoPreferenceString="ANY"
    OKString="OK"
    ConfirmString="CONFIRM"
    CancelString="CANCEL"
    BackString="BACK"
    PerkUpdateNoticeString="Perk may be updated once per wave!"
    NoticeString="NOTICE!"
    AcceptString="Accept"
    DeclineString="Decline"
    YesString="YES"
    NoString="NO"
    DisbandPartyString="DISBAND PARTY"
    LeaveCurrentMenuString="Leave current menu?"
    ZedString="ZED"
    HumanString="SURVIVOR"
    SpectatorString="SPECTATOR"
    UnableToSwitchTeamString="Unable to Switch Teams"
    NoSwitchReasonString="Switching teams would upset team balance"
    TeamString="TEAM"
    AllString="ALL"
    LoadingString="Loading..."
    AutoTradeCompleteString="Auto Trade Complete: "
    AutoFillCompleteString="Autofilled Supplies"
    WeaponUpgradeComepleteString="Weapon Upgraded"
    SecondaryWeaponPurchasedString="Secondary Weapon Purchased"
    NoItemsPurchasedString="No Items Purchased"
    SetTakeoverServerPasswordTitle="Enter a new password to protect your game:"
    FreeConsolePlayOverString="Thanks for playing Killing Floor 2! The free event is over, but you can purchase the game and get more information by selecting the Store button below."
    BuyGameString="STORE"
}