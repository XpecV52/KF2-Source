/*******************************************************************************
 * KFGFxMoviePlayer_ScoreBoard generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFGFxMoviePlayer_ScoreBoard extends GFxMoviePlayer
    config(UI);

var KFGFxHUD_ScoreboardWidget ScoreboardWidget;
var KFGFxHUD_ScoreboardVersusWidget ZEDScoreboardWidget;
var const float UpdateInterval;
var protected float LastUpdateTime;
var SwfMovie MovieInfoStandard;
var SwfMovie MovieInfoVersus;

function Init(optional LocalPlayer LocPlay)
{
    LocalPlayerOwnerIndex = Class'Engine'.static.GetEngine().GamePlayers.Find(LocPlay;
    if(LocalPlayerOwnerIndex == -1)
    {
        LocalPlayerOwnerIndex = 0;
    }
    if(KFGameReplicationInfo(GetPC().WorldInfo.GRI) != none)
    {
        MovieInfo = GetMovieInfo();
        if(MovieInfo != none)
        {
            if(bAutoPlay)
            {
                Start();
                Advance(0);
            }
        }
    }
}

function SwfMovie GetMovieInfo()
{
    if(KFGameReplicationInfo(GetPC().WorldInfo.GRI).bVersusGame)
    {
        return MovieInfoVersus;
    }
    return MovieInfoStandard;
}

event bool WidgetInitialized(name WidgetName, name WidgetPath, GFxObject Widget)
{
    switch(WidgetName)
    {
        case 'ScoreboardWidgetMC':
            if(ScoreboardWidget == none)
            {
                ScoreboardWidget = KFGFxHUD_ScoreboardWidget(Widget);
                ScoreboardWidget.InitializeHUD();
                SetWidgetPathBinding(Widget, WidgetPath);
            }
            break;
        case 'ZEDScoreboardWidgetMC':
            if(ZEDScoreboardWidget == none)
            {
                ZEDScoreboardWidget = KFGFxHUD_ScoreboardVersusWidget(Widget);
                ZEDScoreboardWidget.InitializeHUD();
                SetWidgetPathBinding(Widget, WidgetPath);
            }
            break;
        default:
            break;
    }
    return true;
}

function TickHud(float DeltaTime)
{
    local PlayerController PC;

    PC = GetPC();
    if((PC == none) || (PC.WorldInfo.TimeSeconds - LastUpdateTime) < UpdateInterval)
    {
        return;
    }
    if(!PC.myHUD.bShowHUD)
    {
        return;
    }
    LastUpdateTime = PC.WorldInfo.TimeSeconds;
    if((ScoreboardWidget != none) && ScoreboardWidget.bUpdateScoreboard)
    {
        ScoreboardWidget.TickHud(DeltaTime);
    }
    if((ZEDScoreboardWidget != none) && ZEDScoreboardWidget.bUpdateScoreboard)
    {
        ZEDScoreboardWidget.TickHud(DeltaTime);
    }
}

function ShowScoreboard(bool newShowScoreboard)
{
    if(ScoreboardWidget != none)
    {
        ScoreboardWidget.SetOpen(newShowScoreboard);
        ScoreboardWidget.bUpdateScoreboard = newShowScoreboard;
    }
    if(ZEDScoreboardWidget != none)
    {
        ZEDScoreboardWidget.SetOpen(newShowScoreboard);
        ZEDScoreboardWidget.bUpdateScoreboard = newShowScoreboard;
    }
}

function UpdateWaveCount()
{
    if((ScoreboardWidget != none) && ScoreboardWidget.MatchInfoContainer != none)
    {
    }
}

defaultproperties
{
    MovieInfoStandard=SwfMovie'UI_HUD.ScoreBoard_Standard_SWF'
    MovieInfoVersus=SwfMovie'UI_HUD.ScoreBoard_Versus_SWF'
    bDisplayWithHudOff=false
    bAllowInput=false
    bAllowFocus=false
    bAutoPlay=true
    Priority=2
    WidgetBindings=/* Array type was not detected. */
}