/*******************************************************************************
 * KFOnlineStatsRead generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFOnlineStatsRead extends OnlineStatsRead
    native;

var KFOnlineStatsWrite LinkedWriteObject;
var UniqueNetId OwningUniqueID;
var Engine.OnlineSubsystem.EOnlineEnumerationReadState UserStatsReceivedState;
var bool bLogStatsRead;

function OnStatsInitialized(bool bWasSuccessful)
{
    if(!bWasSuccessful)
    {
        WarnInternal("##########################################################################");
        WarnInternal("KFOnlineStatsRead: Unable to get Steam statistics.  Stats will not be set!");
        WarnInternal("##########################################################################");        
    }
    else
    {
        OnReadComplete();
    }
}

event OnReadComplete()
{
    local int J;
    local float FloatValue;

    if(bLogStatsRead)
    {
        LogInternal("KFOnlineStatsRead: OnReadComplete called, Rows[0].Columns.Length=" $ string(Rows[0].Columns.Length), 'DevOnline');
    }
    J = 0;
    J0x89:

    if(J < Rows[0].Columns.Length)
    {
        switch(Rows[0].Columns[J].StatValue.Type)
        {
            case 1:
                LinkedWriteObject.SetIntStat(ColumnIds[J], Rows[0].Columns[J].StatValue.Value1);
                FloatValue = float(Rows[0].Columns[J].StatValue.Value1);
                if(bLogStatsRead)
                {
                    LogInternal(((((("OnReadComplete - " @ string(J)) @ "IntStat[") $ string(ColumnIds[J])) $ "]=") $ string(Rows[0].Columns[J].StatValue.Value1)) @ string(LinkedWriteObject.Properties[J].Data.Value1));
                }
                break;
            case 5:
                GetFloatStatValueForPlayer(Rows[0].PlayerID, J, FloatValue);
                LinkedWriteObject.SetFloatStat(ColumnIds[J], FloatValue);
                if(bLogStatsRead)
                {
                    LogInternal((("OnReadComplete - FloatStat[" $ string(ColumnIds[J])) $ "]=") $ string(FloatValue));
                }
                break;
            default:
                break;
        }
        LinkedWriteObject.CacheStatsValue(ColumnIds[J], FloatValue);
        ++ J;
        goto J0x89;
    }
    LinkedWriteObject.GetAchievements();
    LinkedWriteObject.MyKFPC.ClientInitializePerks();
}

defaultproperties
{
    ViewId=1
    ColumnIds=/* Array type was not detected. */
    ColumnMappings=/* Array type was not detected. */
}