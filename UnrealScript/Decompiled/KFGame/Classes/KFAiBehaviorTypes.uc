/*******************************************************************************
 * KFAiBehaviorTypes generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFAiBehaviorTypes extends Object
    native(AI);

enum MOVE_FAILURE_TYPE
{
    MOVE_FAILURE_TYPE_NONE,
    MOVE_FAILURE_TYPE_NO_NAV_MESH_PATH,
    MOVE_FAILURE_TYPE_SAME_INTERMEDIATE_POINT_TOO_MANY_TIMES,
    MOVE_FAILURE_TYPE_TARGET_OFF_NAV_MESH_AND_CAN_NOT_FIND_LOCAITON_NEAR_THEM_I_CAN_MOVE_TO,
    MOVE_FAILURE_TYPE_LOOKING_FOR_BETTER_INTERMEDIATE_LOCATION,
    MOVE_FAILURE_TYPE_MOVING_TO_BETTER_INTERMEDIATE_LOCATION,
    MOVE_FAILURE_TYPE_MAX
};

enum MOVEMENT_PHASE_TYPE
{
    MOVEMENT_PHASE_TYPE_NONE,
    MOVEMENT_PHASE_TYPE_NAV_MESH_NORMAL_MOVE_TO,
    MOVEMENT_PHASE_TYPE_PATHNODE_NORMAL_MOVE_TO,
    MOVEMENT_PHASE_TYPE_PATHNODE_POINT_MOVE_TO,
    MOVEMENT_PHASE_TYPE_PATHNODE_DELAY_MOVE,
    MOVEMENT_PHASE_TYPE_PATHNODE_ROTATE_TO_FOCUS,
    MOVEMENT_PHASE_TYPE_PATHNODE_FAILED_MOVE,
    MOVEMENT_PHASE_TYPE_FINAL_DEST_MOVE_TOWARDS,
    MOVEMENT_PHASE_TYPE_EMT_LOS_MOVE_TOWARDS,
    MOVEMENT_PHASE_TYPE_MOVE_TOO_MESH_USING_PATH_NODES,
    MOVEMENT_PHASE_TYPE_FALLBACK_FIND_NEARBY_MESH_POINT_MOVE_TO_DIRECT_NON_PATH_POS,
    MOVEMENT_PHASE_TYPE_FALLBACK_REFUSED_TO_BE_EXPLOTIED_FIND_NEARBY_MESH_POINT_MOVE_TO_DIRECT_NON_PATH_POS,
    MOVEMENT_PHASE_TYPE_STUCK,
    MOVEMENT_PHASE_TYPE_MAX
};

enum PATH_FIND_STATUS
{
    PATH_FIND_STATUS_NO_SEARCH,
    PATH_FIND_STATUS_NO_PATH,
    PATH_FIND_STATUS_FOUND_PATH,
    PATH_FIND_STATUS_MAX
};

enum EBTGoal
{
    BTG_None,
    BTG_Hide,
    BTG_Guard,
    BTG_Banzai,
    BTG_Support,
    BTG_MAX
};

enum EBodyStance
{
    BS_FullBody,
    BS_FullBody_AI,
    BS_UpperBody,
    BS_Nor_Stopped,
    BS_Nor_Arms,
    BS_Crd_Stopped,
    BS_Crd_Arms,
    BS_Std_Cov_InCover,
    BS_Std_LCov_InCover,
    BS_Mid_Cov_InCover,
    BS_Mid_LCov_InCover,
    BS_Std_Cov_Arms,
    BS_Std_LCov_Arms,
    BS_Mid_Cov_Arms,
    BS_Mid_LCov_Arms,
    BS_Additive_Hits,
    BS_MAX
};

enum EThrowType
{
    THROW_None,
    THROW_Scripted,
    THROW_Death,
    THROW_Explosion,
    THROW_RBCollision,
    THROW_MeleeHit,
    THROW_HitReaction,
    THROW_Lavagun,
    THROW_Flailgun,
    THROW_Flaregun,
    THROW_Driller,
    THROW_DrillerOvercharge,
    THROW_Shotgun,
    THROW_ShotgunOvercharge,
    THROW_SniperRifle,
    THROW_SniperRifleOvercharge,
    THROW_Thumper,
    THROW_ThumperHorizontal,
    THROW_Leash,
    THROW_Kick,
    THROW_Slide,
    THROW_Any,
    THROW_MAX
};

enum EThrowImpulseType
{
    TIT_Impulse,
    TIT_Spin,
    TIT_MAX
};

struct native KFNavMeshMovementStepData
{
    var Engine.Pylon.ENavMeshEdgeType EdgeType;
    var Vector EdgeCenter;
    var Vector Poly0Center;
    var Vector Poly1Center;
    var Vector MovementPoint;
    var Vector EdgePos1;
    var Vector EdgePos2;
    var Color EdgeColor;

    structdefaultproperties
    {
        EdgeType=ENavMeshEdgeType.NAVEDGE_UnknownType
        EdgeCenter=(X=0,Y=0,Z=0)
        Poly0Center=(X=0,Y=0,Z=0)
        Poly1Center=(X=0,Y=0,Z=0)
        MovementPoint=(X=0,Y=0,Z=0)
        EdgePos1=(X=0,Y=0,Z=0)
        EdgePos2=(X=0,Y=0,Z=0)
        EdgeColor=(B=0,G=0,R=0,A=0)
    }
};

struct native KFCombatMovementHistoryData
{
    var Vector MyPosition;
    var Vector EnemyPosition;
    var Vector EnemyDisplacement;
    var Vector Velocity;
    var Vector Acceleration;
    var Vector Heading;
    var float DistanceToEnemy;
    var float UpdateTime;

    structdefaultproperties
    {
        MyPosition=(X=0,Y=0,Z=0)
        EnemyPosition=(X=0,Y=0,Z=0)
        EnemyDisplacement=(X=0,Y=0,Z=0)
        Velocity=(X=0,Y=0,Z=0)
        Acceleration=(X=0,Y=0,Z=0)
        Heading=(X=0,Y=0,Z=0)
        DistanceToEnemy=0
        UpdateTime=0
    }
};

struct native PathingFlags
{
    var KFAiBehaviorTypes.PATH_FIND_STATUS PathToEnemiesLocationStatus;
    var KFAiBehaviorTypes.PATH_FIND_STATUS PathToLocationNearEnemyStatus;
    var bool bLastLatentMoveReportedMoveToLocationUnreachable;
    var bool bCanNotGetToEnemyLocationBecasuseOfMoveIteruption;
    var bool bCanNotGetToIntermediateLocationBecasuseOfMoveIteruption;
    var bool bIamOffNavMesh;
    var bool bMyEnemyIsOffNavMesh;
    var float TimeMyEnemyWasLastSetToOffNavMesh;
    var float TimeIWasLastSetToOffNavMesh;
    var bool bStuckFixPlugInWantsForceLosMove;

    structdefaultproperties
    {
        PathToEnemiesLocationStatus=PATH_FIND_STATUS.PATH_FIND_STATUS_NO_SEARCH
        PathToLocationNearEnemyStatus=PATH_FIND_STATUS.PATH_FIND_STATUS_NO_SEARCH
        bLastLatentMoveReportedMoveToLocationUnreachable=false
        bCanNotGetToEnemyLocationBecasuseOfMoveIteruption=false
        bCanNotGetToIntermediateLocationBecasuseOfMoveIteruption=false
        bIamOffNavMesh=false
        bMyEnemyIsOffNavMesh=false
        TimeMyEnemyWasLastSetToOffNavMesh=0
        TimeIWasLastSetToOffNavMesh=0
        bStuckFixPlugInWantsForceLosMove=false
    }
};

struct native ThrowInfo
{
    var byte Id;
    var bool bInAir;
    var bool bDeadlyImpact;
    var bool bThrowAttracted;
    var KFAiBehaviorTypes.EThrowType ThrowType;
    var KFAiBehaviorTypes.EThrowType PreviousThrowType;
    var KFPawn PawnInstigator;
    var KFPawn PreviousThrowInstigator;
    var Vector ThrowDirection;
    var name ThrowBone;
    var float ThrowTime;
    var int LastImpulseNr;
    var Actor ThrowCauser;
    var class<KFDamageType> DamageTypeOnHit;

    structdefaultproperties
    {
        Id=0
        bInAir=false
        bDeadlyImpact=false
        bThrowAttracted=false
        ThrowType=EThrowType.THROW_None
        PreviousThrowType=EThrowType.THROW_None
        PawnInstigator=none
        PreviousThrowInstigator=none
        ThrowDirection=(X=0,Y=0,Z=0)
        ThrowBone=None
        ThrowTime=0
        LastImpulseNr=0
        ThrowCauser=none
        DamageTypeOnHit=none
    }
};

struct native ThrowImpulse
{
    var name BoneName;
    var Vector Impulse;
    var float TimeToNextImpulse;
    var KFAiBehaviorTypes.EThrowImpulseType ImpulseType;

    structdefaultproperties
    {
        BoneName=None
        Impulse=(X=0,Y=0,Z=0)
        TimeToNextImpulse=0
        ImpulseType=EThrowImpulseType.TIT_Impulse
    }
};

struct native ThrowImpulseMultiplier
{
    var name BoneName;
    var float Multiplier;

    structdefaultproperties
    {
        BoneName=None
        Multiplier=0
    }
};

struct native ThrowImpulseDataForKActors
{
    var float ImpulseStrength;
    var bool OverrideDirZ;
    var float DirZ;

    structdefaultproperties
    {
        ImpulseStrength=0
        OverrideDirZ=false
        DirZ=0
    }
};

struct native ThrowAttractInfo
{
    var Actor Attractor;
    var export editinline MeshComponent AttractToMesh;
    var name BoneOrSocketName;

    structdefaultproperties
    {
        Attractor=none
        AttractToMesh=none
        BoneOrSocketName=None
    }
};

static function string DebugDumpPathingFlags(out PathingFlags Flags2Dump)
{
    return (((((((((((("PathToEnemiesLocationStatus: " @ string(Flags2Dump.PathToEnemiesLocationStatus)) @ " - PathToLocationNearEnemyStatus: ") @ string(Flags2Dump.PathToLocationNearEnemyStatus)) @ " - bLastLatentMoveReportedMoveToLocationUnreachable: ") @ string(Flags2Dump.bLastLatentMoveReportedMoveToLocationUnreachable)) @ " bCanNotGetToEnemyLocationBecasuseOfMoveIteruption: ") @ string(Flags2Dump.bCanNotGetToEnemyLocationBecasuseOfMoveIteruption)) @ " bCanNotGetToIntermediateLocationBecasuseOfMoveIteruption: ") @ string(Flags2Dump.bCanNotGetToIntermediateLocationBecasuseOfMoveIteruption)) @ " - bIamOffNavMesh: ") @ string(Flags2Dump.bIamOffNavMesh)) @ " - bMyEnemyIsOffNavMesh: ") @ string(Flags2Dump.bMyEnemyIsOffNavMesh);
}
