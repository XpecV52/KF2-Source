/*******************************************************************************
 * KFGameInfo_Entry generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFGameInfo_Entry extends KFGameInfo
    config(Game)
    hidecategories(Navigation,Movement,Collision);

var bool bInitialized;

function bool NeedPlayers()
{
    return false;
}

function Pawn SpawnDefaultPawnFor(Controller NewPlayer, NavigationPoint StartSpot);

function InitSpawnManager();

function InitTraderList();

function StartMatch()
{
    local PlayerController PC;
    local LocalPlayer LP;

    foreach LocalPlayerControllers(Class'PlayerController', PC)
    {
        LP = LocalPlayer(PC.Player);
        if(LP != none)
        {
            LP.RemoveAllPostProcessingChains();
            LP.InsertPostProcessingChain(LP.Outer.GetWorldPostProcessChain(), -1, true);
            if(PC.myHUD != none)
            {
                PC.myHUD.NotifyBindPostProcessEffects();
            }
        }        
    }    
}

function Tick(float DeltaTime)
{
    super.Tick(DeltaTime);
    if(!bInitialized)
    {
        ForceMenuMusicTrack();
        bInitialized = true;
    }
}

event InitGame(string Options, out string ErrorMessage)
{
    if((ParseOption(Options, "PerformUnitTests")) ~= "1")
    {
        if(MyAutoTestManager == none)
        {
            MyAutoTestManager = Spawn(AutoTestManagerClass);
        }
        MyAutoTestManager.InitializeOptions(Options);
    }
    BroadcastHandler = Spawn(BroadcastHandlerClass);
}

auto state PendingMatch
{
    ignores RestartPlayer, Timer, EndState;

    function BeginState(name PreviousStateName)
    {
        bWaitingToStartMatch = true;
    }
    stop;    
}
