/*******************************************************************************
 * KFGFxOptionsMenu_Audio generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFGFxOptionsMenu_Audio extends KFGFxObject_Menu within GFxMoviePlayer;

var const localized string SectionNameString;
var const localized string OptionsString;
var const localized string AudioString;
var const localized string DialogVolumeString;
var const localized string MasterVolumeString;
var const localized string MusicString;
var const localized string SFxString;
var const localized string VOIPVolumeString;
var const localized string ConfigureMicString;
var const localized string VocalsString;
var const localized string BattleChatterString;
var const localized string PushToVoIPString;
var float VoIPMin;
var float VoIPMax;

function InitializeMenu(KFGFxMoviePlayer_Manager InManager)
{
    super.InitializeMenu(InManager);
    LocalizeText();
    InitValues();
}

function LocalizeText()
{
    local GFxObject LocalizedObject;

    LocalizedObject = Outer.CreateObject("Object");
    LocalizedObject.SetString("master", MasterVolumeString);
    LocalizedObject.SetString("dialog", DialogVolumeString);
    LocalizedObject.SetString("music", MusicString);
    LocalizedObject.SetString("sFx", SFxString);
    if(Outer.GetPC().WorldInfo.IsConsoleBuild())
    {
        LocalizedObject.SetString("header", (Caps(Class'KFGFxOptionsMenu_Selection'.default.OptionStrings[1]) $ "/") $ Caps(Class'KFGFxOptionsMenu_Selection'.default.OptionStrings[0]));
        LocalizedObject.SetString("sectionName", Caps(Class'KFGFxOptionsMenu_Selection'.default.OptionStrings[1]));
        LocalizedObject.SetString("options", Caps(Class'KFGFxOptionsMenu_Selection'.default.OptionStrings[0]));
        LocalizedObject.SetString("configureMic", Class'KFGFxOptionsMenu_Graphics'.default.AdjustGammaString);        
    }
    else
    {
        LocalizedObject.SetString("header", Caps(Class'KFGFxOptionsMenu_Selection'.default.OptionStrings[1]));
        LocalizedObject.SetString("sectionName", SectionNameString);
        LocalizedObject.SetString("options", OptionsString);
        LocalizedObject.SetString("configureMic", ConfigureMicString);
        LocalizedObject.SetString("voipVolume", VOIPVolumeString);
        LocalizedObject.SetString("pushToTalk", PushToVoIPString);
        LocalizedObject.SetString("resetDefault", Localize("KFGFxOptionsMenu_Graphics", "DefaultString", "KFGame"));
    }
    LocalizedObject.SetString("vocals", VocalsString);
    LocalizedObject.SetString("battleChatter", BattleChatterString);
    LocalizedObject.SetString("close", Class'KFCommon_LocalizedStrings'.default.BackString);
    SetObject("localizedText", LocalizedObject);
}

function InitValues()
{
    local float VoIPCurrent;

    if(!Outer.GetPC().WorldInfo.IsConsoleBuild())
    {
        Class'KFGameEngine'.static.GetVoIPVolumeRange(VoIPMin, VoIPMax, VoIPCurrent);
        SetFloat("voipVolume", (VoIPCurrent / VoIPMax) * float(100));
        SetBool("bPushToTalk", Class'KFPlayerInput'.default.bRequiresPushToTalk);
    }
    SetFloat("masterVolume", Class'KFGameEngine'.default.MasterVolumeMultiplier);
    SetFloat("dialogVolume", Class'KFGameEngine'.default.DialogVolumeMultiplier);
    SetFloat("musicVolume", Class'KFGameEngine'.default.MusicVolumeMultiplier);
    SetFloat("sFxVolume", Class'KFGameEngine'.default.SFxVolumeMultiplier);
    SetBool("vocalsEnabled", Class'KFGameEngine'.default.bMusicVocalsEnabled);
    SetBool("battleChatter", Class'KFGameEngine'.default.bMinimalChatter);
}

function SetVoIPMinMax(float MinVol, float MaxVol)
{
    ActionScriptVoid("setVOIPVolumeRange");
}

event OnClose()
{
    SaveConfigValues();
}

function SaveConfigValues()
{
    Class'KFGameEngine'.static.StaticSaveConfig();
    Class'KFGameEngine'.static.GetEngine().SaveConfig();
}

function Callback_CloseMenu()
{
    Manager.OpenMenu(5);
}

function Callback_ConfigureMicPress()
{
    local OnlineSubsystem Subsystem;

    if(Outer.GetPC().WorldInfo.IsConsoleBuild())
    {
        Manager.SetVariableBool("bStartUpGamma", false);
        Manager.OpenPopup(1, "", Class'KFGFxOptionsMenu_Graphics'.default.AdjustGammaDescription, Class'KFGFxOptionsMenu_Graphics'.default.ResetGammaString, Class'KFGFxOptionsMenu_Graphics'.default.SetGammaString);        
    }
    else
    {
        Subsystem = Class'GameEngine'.static.GetOnlineSubsystem();
        if(Subsystem != none)
        {
            Subsystem.ShowVoIPConfigUI();
        }
    }
}

function Callback_ConfigureBattleChatter(bool bMinimalChatter)
{
    Class'KFGameEngine'.default.bMinimalChatter = bMinimalChatter;
    KFGameEngine(Class'Engine'.static.GetEngine()).bMinimalChatter = bMinimalChatter;
}

function Callback_PushToTalkChanged(bool bValue)
{
    local PlayerController PC;
    local KFPlayerInput KFPI;

    PC = Outer.GetPC();
    if(PC != none)
    {
        KFPI = KFPlayerInput(Outer.GetPC().PlayerInput);
        if(KFPI != none)
        {
            KFPI.UpdatePushToTalk(bValue);
        }
    }
}

function Callback_ConfigureVocals(bool bEnabled)
{
    Class'KFGameEngine'.default.bMusicVocalsEnabled = bEnabled;
    KFGameEngine(Class'Engine'.static.GetEngine()).bMusicVocalsEnabled = bEnabled;
}

function Callback_MasterVolumeChanged(float NewVolume)
{
    local float MasterVolumeMultiplier;

    MasterVolumeMultiplier = NewVolume;
    Class'KFGameEngine'.static.SetWWiseMasterVolume(MasterVolumeMultiplier);
    Class'KFGameEngine'.default.MasterVolumeMultiplier = MasterVolumeMultiplier;
    KFGameEngine(Class'Engine'.static.GetEngine()).MasterVolumeMultiplier = MasterVolumeMultiplier;
}

function Callback_DialogVolumeChanged(float NewVolume)
{
    local float DialogVolumeMultiplier;

    DialogVolumeMultiplier = NewVolume;
    Class'KFGameEngine'.static.SetWWiseVoiceVolume(DialogVolumeMultiplier);
    Outer.GetPC().SetAudioGroupVolume('Voice', DialogVolumeMultiplier / float(100));
    Class'KFGameEngine'.default.DialogVolumeMultiplier = DialogVolumeMultiplier;
    KFGameEngine(Class'Engine'.static.GetEngine()).DialogVolumeMultiplier = DialogVolumeMultiplier;
}

function Callback_MusicVolumeChanged(float NewVolume)
{
    local float MusicVolumeMultiplier;

    MusicVolumeMultiplier = NewVolume;
    Class'KFGameEngine'.static.SetWWiseMusicVolume(MusicVolumeMultiplier);
    Outer.GetPC().SetAudioGroupVolume('Music', MusicVolumeMultiplier / float(100));
    Class'KFGameEngine'.default.MusicVolumeMultiplier = MusicVolumeMultiplier;
    KFGameEngine(Class'Engine'.static.GetEngine()).MusicVolumeMultiplier = MusicVolumeMultiplier;
}

function Callback_SFxVolumeChanged(float NewVolume)
{
    local float SFxVolumeMultiplier;

    SFxVolumeMultiplier = NewVolume;
    Class'KFGameEngine'.static.SetWWiseSFXVolume(SFxVolumeMultiplier);
    Outer.GetPC().SetAudioGroupVolume('SFX', SFxVolumeMultiplier / float(100));
    Class'KFGameEngine'.default.SFxVolumeMultiplier = SFxVolumeMultiplier;
    KFGameEngine(Class'Engine'.static.GetEngine()).SFxVolumeMultiplier = SFxVolumeMultiplier;
}

function Callback_VOIPVolumeChanged(float NewVolume)
{
    Class'KFGameEngine'.static.SetVoIPRecieveVolume((NewVolume / float(100)) * VoIPMax);
}

function CallBack_ResetAudioOptions()
{
    Manager.OpenPopup(0, Localize("KFGFxOptionsMenu_Graphics", "WarningPromptString", "KFGame"), Localize("KFGFxObject_Menu", "ResetDefaults", "KFGameConsole"), Localize("KFGFxOptionsMenu_Graphics", "OKString", "KFGame"), Localize("KFGFxOptionsMenu_Graphics", "CancelString", "KFGame"), ResetAudioOptions);
}

function ResetAudioOptions()
{
    local float DefaultGamma;
    local KFGameEngine KFGE;

    if(!Outer.GetPC().WorldInfo.IsConsoleBuild())
    {        
    }
    else
    {
        DefaultGamma = Class'KFGameEngine'.default.DefaultGammaMult;
        KFGE = KFGameEngine(Class'Engine'.static.GetEngine());
        KFGE.GammaMultiplier = DefaultGamma;
        KFGE.SaveConfig();
        Class'KFGameEngine'.static.SetGamma(DefaultGamma);
        Class'KFGameEngine'.default.GammaMultiplier = DefaultGamma;
        Class'KFGameEngine'.static.StaticSaveConfig();
    }
}

defaultproperties
{
    SectionNameString="VOLUME"
    OptionsString="OPTIONS"
    AudioString="AUDIO OPTIONS"
    DialogVolumeString="Dialog Volume"
    MasterVolumeString="Master Volume"
    MusicString="In-Game Music Volume"
    SFxString="SFX Volume"
    VOIPVolumeString="Voice Chat Receive Volume"
    ConfigureMicString="CONFIGURE MICROPHONE"
    VocalsString="Music Vocals"
    BattleChatterString="Minimize Battle Chatter"
    PushToVoIPString="Push to VoIP"
}