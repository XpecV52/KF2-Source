/*******************************************************************************
 * KFPawn_Customization generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFPawn_Customization extends KFPawn_Human
    native(Pawn)
    config(Game)
    hidecategories(Navigation);

var AnimSet MaleCustomizationAnimSet;
var AnimSet FemaleCustomizationAnimSet;
var bool bUsingCustomizationPoint;

simulated event PostInitAnimTree(SkeletalMeshComponent SkelComp)
{
    super.PostInitAnimTree(SkelComp);
    if(IKFootLeft != none)
    {
        IKFootLeft.SetSkelControlActive(false);
    }
    if(IKFootRight != none)
    {
        IKFootRight.SetSkelControlActive(false);
    }
}

simulated function SetCharacterAnimationInfo()
{
    local KFCharacterInfo_Human CharInfoHuman;

    super(KFPawn).SetCharacterAnimationInfo();
    CharInfoHuman = KFCharacterInfo_Human(GetCharacterInfo());
    if((CharInfoHuman != none) && CharInfoHuman.bIsFemale)
    {
        Mesh.AnimSets.AddItem(FemaleCustomizationAnimSet;        
    }
    else
    {
        Mesh.AnimSets.AddItem(MaleCustomizationAnimSet;
    }
    Mesh.UpdateAnimations();
    PlayRandomIdleAnimation();
}

simulated function PlayRandomIdleAnimation()
{
    local byte AnimIndex;
    local name AnimName;
    local AnimSet AnimSet;

    AnimSet = Mesh.AnimSets[Mesh.AnimSets.Length - 1];
    AnimIndex = byte(Rand(AnimSet.Sequences.Length));
    AnimName = AnimSet.Sequences[AnimIndex].SequenceName;
    BodyStanceNodes[0].PlayCustomAnim(AnimName, 1, 0.4, 0.4, false, true);
    BodyStanceNodes[0].SetActorAnimEndNotification(true);
}

simulated event OnAnimEnd(AnimNodeSequence SeqNode, float PlayedTime, float ExcessTime)
{
    PlayRandomIdleAnimation();
}

simulated function NotifyTeamChanged()
{
    if(PlayerReplicationInfo != none)
    {
        SetCharacterArch(GetCharacterInfo());
    }
}

function MoveToCustomizationPoint()
{
    local NavigationPoint BestStartSpot;
    local KFGameInfo KFGI;
    local PlayerController PC;

    KFGI = KFGameInfo(WorldInfo.Game);
    PC = PlayerController(Controller);
    if(PC != none)
    {
        BestStartSpot = KFGI.FindCustomizationStart(PC);
        if((BestStartSpot == none) || !SetLocation(BestStartSpot.Location))
        {
            return;
        }
        SetRotation(BestStartSpot.Rotation);
        KFPlayerCamera(PC.PlayerCamera).CustomizationCam.bInitialize = false;
        bUsingCustomizationPoint = true;
    }
}

event TakeDamage(int Damage, Controller InstigatedBy, Vector HitLocation, Vector Momentum, class<DamageType> DamageType, optional TraceHitInfo HitInfo, optional Actor DamageCauser)
{
    return;
}

simulated function UpdateCustomizationCharacter(byte CharIndex)
{
    local KFPlayerReplicationInfo KFPRI;

    KFPRI = KFPlayerReplicationInfo(PlayerReplicationInfo);
    if(KFPRI != none)
    {
        KFPRI.SetCharacter(CharIndex);
    }
}

function InitializeCustomizationPawn(PlayerController NewController, NavigationPoint BestStartSpot)
{
    if(Controller != none)
    {
        Controller.UnPossess();
    }
    PossessedBy(NewController, false);
    NewController.SetViewTarget(self);
    NewController.SetCameraMode('Customization');
    bUsingCustomizationPoint = KFCustomizationPoint(BestStartSpot) != none;
}

defaultproperties
{
    MaleCustomizationAnimSet=AnimSet'CHR_BaseMale_ANIM.CS_Male'
    FemaleCustomizationAnimSet=AnimSet'CHR_BaseFemale_ANIM.CS_Female'
    TraderDialogAkComponent=AkComponent'Default__KFPawn_Customization.TraderDialogAkSoundComponent'
    begin object name=ThirdPersonHead0 class=SkeletalMeshComponent
        ReplacementPrimitive=none
    object end
    // Reference: SkeletalMeshComponent'Default__KFPawn_Customization.ThirdPersonHead0'
    ThirdPersonHeadMeshComponent=ThirdPersonHead0
    AfflictionHandler=KFPawnAfflictions'Default__KFPawn_Customization.Afflictions'
    begin object name=FirstPersonArms class=KFSkeletalMeshComponent
        ReplacementPrimitive=none
    object end
    // Reference: KFSkeletalMeshComponent'Default__KFPawn_Customization.FirstPersonArms'
    ArmsMesh=FirstPersonArms
    SpecialMoveHandler=KFSpecialMoveHandler'Default__KFPawn_Customization.SpecialMoveHandler'
    AmbientAkComponent=AkComponent'Default__KFPawn_Customization.AmbientAkSoundComponent_1'
    WeaponAkComponent=AkComponent'Default__KFPawn_Customization.AmbientAkSoundComponent'
    WeaponAmbientEchoHandler=KFWeaponAmbientEchoHandler'Default__KFPawn_Customization.WeaponAmbientEchoHandler'
    FootstepAkComponent=AkComponent'Default__KFPawn_Customization.FootstepAkSoundComponent'
    DialogAkComponent=AkComponent'Default__KFPawn_Customization.DialogAkSoundComponent'
    begin object name=KFPawnSkeletalMeshComponent class=KFSkeletalMeshComponent
        ReplacementPrimitive=none
    object end
    // Reference: KFSkeletalMeshComponent'Default__KFPawn_Customization.KFPawnSkeletalMeshComponent'
    Mesh=KFPawnSkeletalMeshComponent
    begin object name=CollisionCylinder class=CylinderComponent
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__KFPawn_Customization.CollisionCylinder'
    CylinderComponent=CollisionCylinder
    begin object name=Sprite class=SpriteComponent
        ReplacementPrimitive=none
    object end
    // Reference: SpriteComponent'Default__KFPawn_Customization.Sprite'
    Components(0)=Sprite
    begin object name=CollisionCylinder class=CylinderComponent
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__KFPawn_Customization.CollisionCylinder'
    Components(1)=CollisionCylinder
    begin object name=Arrow class=ArrowComponent
        ReplacementPrimitive=none
    object end
    // Reference: ArrowComponent'Default__KFPawn_Customization.Arrow'
    Components(2)=Arrow
    begin object name=KFPawnSkeletalMeshComponent class=KFSkeletalMeshComponent
        ReplacementPrimitive=none
    object end
    // Reference: KFSkeletalMeshComponent'Default__KFPawn_Customization.KFPawnSkeletalMeshComponent'
    Components(3)=KFPawnSkeletalMeshComponent
    Components(4)=AkComponent'Default__KFPawn_Customization.AmbientAkSoundComponent'
    Components(5)=AkComponent'Default__KFPawn_Customization.AmbientAkSoundComponent_1'
    Components(6)=AkComponent'Default__KFPawn_Customization.FootstepAkSoundComponent'
    Components(7)=AkComponent'Default__KFPawn_Customization.DialogAkSoundComponent'
    Components(8)=AkComponent'Default__KFPawn_Customization.TraderDialogAkSoundComponent'
    Physics=EPhysics.PHYS_Walking
    begin object name=CollisionCylinder class=CylinderComponent
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__KFPawn_Customization.CollisionCylinder'
    CollisionComponent=CollisionCylinder
}