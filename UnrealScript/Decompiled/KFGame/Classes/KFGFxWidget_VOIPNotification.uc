/*******************************************************************************
 * KFGFxWidget_VOIPNotification generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFGFxWidget_VOIPNotification extends GFxObject within GFxMoviePlayer;

var array<KFPlayerReplicationInfo> TalkerPRIs;

function VOIPEventTriggered(PlayerReplicationInfo TalkerPRI, bool bIsTalking)
{
    local KFPlayerReplicationInfo KFPRI;

    KFPRI = KFPlayerReplicationInfo(TalkerPRI);
    if(KFPRI == none)
    {
        return;
    }
    if(!bIsTalking)
    {
        TalkerPRIs.RemoveItem(KFPRI;        
    }
    else
    {
        if(TalkerPRIs.Find(KFPRI != -1)
        {
            TalkerPRIs.RemoveItem(KFPRI;
        }
        if(!Outer.GetPC().IsPlayerMuted(KFPRI.UniqueId))
        {
            if(((TalkerPRI.Team != none) && KFPlayerReplicationInfo(TalkerPRI).VOIPStatus == 2) && TalkerPRI.Team.TeamIndex != Outer.GetPC().PlayerReplicationInfo.Team.TeamIndex)
            {
                return;
            }
            TalkerPRIs.AddItem(KFPRI;
        }
    }
    UpdateWidget();
}

function UpdateWidget()
{
    local int I;
    local GFxObject DataProvider, TempObj;

    DataProvider = Outer.CreateArray();
    I = 0;
    J0x34:

    if(I < TalkerPRIs.Length)
    {
        TempObj = Outer.CreateObject("Object");
        TempObj.SetString("label", TalkerPRIs[I].PlayerName);
        DataProvider.SetElementObject(I, TempObj);
        ++ I;
        goto J0x34;
    }
    SetObject("voipActiveList", DataProvider);
}
