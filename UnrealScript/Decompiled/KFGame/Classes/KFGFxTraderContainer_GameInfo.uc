/*******************************************************************************
 * KFGFxTraderContainer_GameInfo generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFGFxTraderContainer_GameInfo extends KFGFxObject_Container within GFxMoviePlayer;

var const localized string TimeLeftString;
var const localized string WaveString;
var const localized string BossWaveString;

function Initialize(KFGFxObject_Menu NewParentMenu)
{
    super.Initialize(NewParentMenu);
    UpdateGameInfo();
}

function UpdateGameInfo()
{
    local KFGameReplicationInfo KFGRI;
    local string FinalWaveString;

    KFGRI = KFGameReplicationInfo(Outer.GetPC().WorldInfo.GRI);
    if(KFGRI != none)
    {
        if(KFGRI.IsBossWave())
        {
            FinalWaveString = BossWaveString;            
        }
        else
        {
            if(KFGRI.default.bEndlessMode)
            {
                FinalWaveString = WaveString @ string(KFGRI.WaveNum);                
            }
            else
            {
                FinalWaveString = ((WaveString @ string(KFGRI.WaveNum)) $ "/") $ string(KFGRI.WaveMax - 1);
            }
        }
        SetString("waveValue", FinalWaveString);
        SetString("timeLabel", TimeLeftString);
    }
    UpdateTraderTimer();
}

function UpdateTraderTimer()
{
    local KFGameReplicationInfo KFGRI;
    local int CurrentTime;

    KFGRI = KFGameReplicationInfo(Outer.GetPC().WorldInfo.GRI);
    if(KFGRI != none)
    {
        CurrentTime = KFGRI.GetTraderTimeRemaining();
        SetInt("timeValue", CurrentTime);
    }
}

function SetDosh(int DoshValue)
{
    SetInt("dosh", DoshValue);
}

function SetCurrentWeight(int TotalBlocks, int MaxBlocks)
{
    SetString("currentWeight", (string(TotalBlocks) $ "/") $ string(MaxBlocks));
}

defaultproperties
{
    TimeLeftString="TIME LEFT"
    WaveString="WAVE"
    BossWaveString="BOSS"
}