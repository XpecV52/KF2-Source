/*******************************************************************************
 * KFAIWaveInfo generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFAIWaveInfo extends Object
    hidecategories(Object);

/** Once a squad is dead, do not reuse them */
var() const bool bRecycleWave;
/** List of available squads to spawn for each wave */
var() const array<KFAISpawnSquad> Squads;
/** The special squad - spawned once per wave */
var() const KFAISpawnSquad SpecialSquad;
/** Total number of AI that spawn for 1 player on Normal */
var() const int MaxAI<ClampMin=1|ClampMax=200|DisplayName=TotalAIBase>;
var() const array<KFAISpawnSquad> EventSquads;

function GetNewSquadList(out array<KFAISpawnSquad> out_SquadList)
{
    local int I;

    out_SquadList.Length = 0;
    I = 0;
    J0x17:

    if(I < Squads.Length)
    {
        if(Squads[I] != none)
        {
            out_SquadList.AddItem(Squads[I];
        }
        ++ I;
        goto J0x17;
    }
}

function GetSpecialSquad(out array<KFAISpawnSquad> out_SquadList)
{
    if(SpecialSquad != none)
    {
        out_SquadList.AddItem(SpecialSquad;
    }
}

function GetEventSquadList(out array<KFAISpawnSquad> out_SquadList)
{
    local int I;

    out_SquadList.Length = 0;
    I = 0;
    J0x17:

    if(I < EventSquads.Length)
    {
        if(EventSquads[I] != none)
        {
            out_SquadList.AddItem(EventSquads[I];
        }
        ++ I;
        goto J0x17;
    }
}

defaultproperties
{
    bRecycleWave=true
    MaxAI=32
}