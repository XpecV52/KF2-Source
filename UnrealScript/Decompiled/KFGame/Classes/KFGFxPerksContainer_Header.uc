/*******************************************************************************
 * KFGFxPerksContainer_Header generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFGFxPerksContainer_Header extends KFGFxPerksContainer within GFxMoviePlayer;

var GFxObject PerkTextField;
var GFxObject LevelTextField;
var const localized string ExperienceString;

function Initialize(KFGFxObject_Menu NewParentMenu)
{
    local KFPlayerController KFPC;

    super(KFGFxObject_Container).Initialize(NewParentMenu);
    KFPC = KFPlayerController(Outer.GetPC());
    UpdatePerkHeader(KFPC.PerkList[KFPC.SavedPerkIndex].PerkClass);
}

function UpdatePerkHeader(class<KFPerk> PerkClass)
{
    local GFxObject PerkDataProvider;
    local KFPlayerController KFPC;
    local int NextEXP, CurrentEXP;
    local float EXPPercent;
    local byte PerkLevel;

    KFPC = KFPlayerController(Outer.GetPC());
    EXPPercent = KFPC.GetPerkLevelProgressPercentage(PerkClass, CurrentEXP, NextEXP);
    PerkLevel = KFPC.GetPerkLevelFromPerkList(PerkClass);
    PerkDataProvider = Outer.CreateObject("Object");
    PerkDataProvider.SetString("perkTitle", PerkClass.default.PerkName);
    PerkDataProvider.SetString("perkLevel", LevelString @ string(PerkLevel));
    PerkDataProvider.SetString("iconSource", "img://" $ PerkClass.static.GetPerkIconPath());
    PerkDataProvider.SetString("xpString", (string(CurrentEXP) $ "/") $ string(NextEXP));
    PerkDataProvider.SetFloat("xpPercent", EXPPercent / float(100));
    SetObject("perkData", PerkDataProvider);
}

defaultproperties
{
    ExperienceString="Experience"
}