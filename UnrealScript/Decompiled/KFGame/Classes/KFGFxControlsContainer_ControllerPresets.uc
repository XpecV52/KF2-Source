/*******************************************************************************
 * KFGFxControlsContainer_ControllerPresets generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFGFxControlsContainer_ControllerPresets extends KFGFxObject_Container within GFxMoviePlayer;

const KFID_QuickWeaponSelect = 100;
const KFID_CurrentLayoutIndex = 101;
const KFID_ForceFeedbackEnabled = 103;
const KFID_SavedPerkIndex = 105;
const KFID_AllowBloodSplatterDecals = 106;
const KFID_GoreLevel = 107;
const KFID_StoredCharIndex = 111;
const KFID_MasterVolumeMultiplier = 112;
const KFID_DialogVolumeMultiplier = 113;
const KFID_MusicVolumeMultiplier = 114;
const KFID_SFXVolumeMultiplier = 115;
const KFID_GammaMultiplier = 117;
const KFID_MusicVocalsEnabled = 118;
const KFID_MinimalChatter = 119;
const KFID_ShowCrossHair = 121;
const KFID_FOVOptionsPercentageValue = 122;
const KFID_ShowKillTicker = 123;
const KFID_FriendlyHudScale = 125;
const KFID_FavoriteWeapons = 127;
const KFID_GearLoadouts = 128;
const KFID_SetGamma = 129;
const KFID_RequiresPushToTalk = 130;
const KFID_InvertController = 131;
const KFID_AutoTargetEnabled = 132;
const KFID_GamepadSensitivityScale = 133;
const KFID_ZoomedSensitivityScale = 134;
const KFID_GamepadZoomedSensitivityScale = 135;
const KFID_EnableMouseSmoothing = 136;
const KFID_MouseSensitivity = 138;
const KFID_TargetAdhesionEnabled = 139;
const KFID_TargetFrictionEnabled = 140;
const KFID_InvertMouse = 142;
const KFID_DEPRECATED_143 = 143;
const KFID_SavedSoloModeIndex = 144;
const KFID_SavedSoloMapString = 145;
const KFID_SavedSoloDifficultyIndex = 146;
const KFID_SavedSoloLengthIndex = 147;
const KFID_SavedModeIndex = 148;
const KFID_SavedMapString = 149;
const KFID_SavedDifficultyIndex = 150;
const KFID_SavedLengthIndex = 151;
const KFID_SavedPrivacyIndex = 152;
const KFID_SavedServerTypeIndex = 153;
const KFID_SavedInProgressIndex = 154;
const KFID_ControllerSoundEnabled = 155;
const KFID_MatchmakingRegion = 156;
const KFID_UseAltAimOnDuals = 157;
const KFID_HideBossHealthBar = 158;
const KFID_AntiMotionSickness = 159;
const KFID_ShowWelderInInventory = 160;
const KFID_AutoTurnOff = 161;
const KFID_ReduceHightPitchSounds = 162;
const KFID_ShowConsoleCrossHair = 163;
const KFID_VOIPVolumeMultiplier = 164;
const KFID_WeaponSkinAssociations = 165;
const KFID_SavedEmoteId = 166;
const KFID_DisableAutoUpgrade = 167;
const KFID_SafeFrameScale = 168;
const KFID_Native4kResolution = 169;
const KFID_HideRemoteHeadshotEffects = 170;
const KFID_SavedHeadshotID = 171;
const KFID_ToggleToRun = 172;
const KFID_ClassicPlayerInfo = 173;
const KFID_VOIPMicVolumeMultiplier = 174;
const KFID_GamepadDeadzoneScale = 175;
const KFID_GamepadAccelerationJumpScale = 176;
const KFID_HasTabbedToStore = 177;

struct KeyBinding
{
    var string Key;
    var string Command;
    var string HoldCommand;

    structdefaultproperties
    {
        Key=""
        Command=""
        HoldCommand=""
    }
};

var const string InputSectionName;
var const string PackageName;
var const localized string MovementString;
var const localized string LookString;
var const localized string ShowScoardBoardString;
var const localized string ShowIngameMenuString;
var const localized string HoldString;
var const localized string TapString;
var const localized string CurrentControllerPresetString;
var const localized array<localized string> PresetStrings;
var int numGamepadLayouts;
var byte CurrentLocalizedIndex;
var byte CurrentPresetIndex;

function Initialize(KFGFxObject_Menu NewParentMenu)
{
    super.Initialize(NewParentMenu);
    CurrentPresetIndex = byte(KFPlayerInput(Outer.GetPC().PlayerInput).CurrentLayoutIndex);
    UpdateCurrentPresetArray(CurrentPresetIndex);
}

function UpdateCurrentPresetArray(byte PresetIndex)
{
    local KFPlayerInput KFPlayerInput, KFPI;

    CurrentPresetIndex = PresetIndex;
    numGamepadLayouts = Class'KFGamepadLayoutManager'.static.GetNumLayouts();
    if(CurrentPresetIndex >= numGamepadLayouts)
    {
        CurrentPresetIndex = 0;        
    }
    else
    {
        if(CurrentPresetIndex < 0)
        {
            CurrentPresetIndex = byte(numGamepadLayouts - 1);
        }
    }
    KFPlayerInput = KFPlayerInput(Outer.GetPC().PlayerInput);
    KFPlayerInput.SetGamepadLayout(CurrentPresetIndex);
    LocalizeText();
    UpdateButtonDescriptions();
    KFPI = KFPlayerInput(Outer.GetPC().PlayerInput);
    KFPI.CurrentLayoutIndex = CurrentPresetIndex;
    KFPI.SaveConfig();
}

function LocalizeText()
{
    local GFxObject TextField, PresetArray, StepperOption, defaultButton;
    local int I;

    TextField = GetObject("CurrentPresetTextfield");
    PresetArray = Outer.CreateArray();
    I = 0;
    J0x61:

    if(I < numGamepadLayouts)
    {
        StepperOption = Outer.CreateObject("Object");
        StepperOption.SetString("label", PresetStrings[I]);
        PresetArray.SetElementObject(I, StepperOption);
        ++ I;
        goto J0x61;
    }
    SetObject("presetOptions", PresetArray);
    SetInt("currentPreset", CurrentPresetIndex);
    if(TextField != none)
    {
        TextField.SetText(CurrentControllerPresetString);
    }
    defaultButton = GetObject("defaultButton");
    if(defaultButton != none)
    {
        defaultButton.SetString("label", Localize("KFGFxOptionsMenu_Graphics", "DefaultString", "KFGame"));
    }
}

function UpdateButtonDescriptions()
{
    local GFxObject LocalizedObject;
    local name GamepadButtonNames[20];
    local KFPlayerInput KFPlayerInput;
    local byte I;
    local string bindCommand;
    local GFxObject TempTextField;
    local string TextFieldName, localizedCommand;

    CurrentLocalizedIndex = 0;
    LocalizedObject = Outer.CreateObject("Object");
    LocalizedObject.SetString("leftThumbstick", MovementString);
    LocalizedObject.SetString("rightThumbstick", LookString);
    LocalizedObject.SetString("back", ShowScoardBoardString);
    LocalizedObject.SetString("start", ShowIngameMenuString);
    KFPlayerInput = KFPlayerInput(Outer.GetPC().PlayerInput);
    Class'KFGamepadLayoutManager'.static.GetGamepadButtonNames(GamepadButtonNames);
    I = 0;
    J0x18C:

    if(I < 20)
    {
        TextFieldName = string(GamepadButtonNames[I]) $ "Textfield";
        TempTextField = GetObject(TextFieldName);
        if(TempTextField != none)
        {
            bindCommand = KFPlayerInput.GetGameBindableAction(GamepadButtonNames[I]);
            localizedCommand = Localize(InputSectionName, bindCommand, PackageName);
            TempTextField.SetText(localizedCommand);
        }
        ++ I;
        goto J0x18C;
    }
}

function AddBindingToGFxObject(out GFxObject ObjectArray, string Key, string Command, string HoldCommand, byte I)
{
    local GFxObject TempObject;
    local string CommandString, HoldCommandString;

    TempObject = Outer.CreateObject("Object");
    CommandString = Localize(InputSectionName, Command, PackageName);
    if(HoldCommand != "")
    {
        HoldCommandString = Localize(InputSectionName, HoldCommand, PackageName);        
        HoldCommandString -= HoldString;
        CommandString = ((CommandString $ "
") $ HoldCommandString) @ HoldString;
    }
    TempObject.SetString("Key", Key);
    TempObject.SetString("Command", CommandString);
    ObjectArray.SetElementObject(I, TempObject);
}

function ResetPresetOptions()
{
    CurrentPresetIndex = byte(ParentMenu.Manager.CachedProfile.GetDefaultInt(101));
    ParentMenu.Manager.CachedProfile.SetProfileSettingValueInt(101, CurrentPresetIndex);
    UpdateCurrentPresetArray(CurrentPresetIndex);
}

defaultproperties
{
    InputSectionName="LocalizedControls"
    PackageName="KFGame"
    MovementString="Movement Control"
    LookString="Look Control"
    ShowScoardBoardString="Show Scoreboard"
    ShowIngameMenuString="Toggle In Game Menu"
    HoldString="HOLD"
    TapString="TAP"
    CurrentControllerPresetString="Current Controller Preset"
    PresetStrings(0)="Default"
    PresetStrings(1)="Quick Draw"
    PresetStrings(2)="Jumper"
    PresetStrings(3)="Southpaw"
}