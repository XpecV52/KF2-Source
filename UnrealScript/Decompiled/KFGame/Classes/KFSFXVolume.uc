/*******************************************************************************
 * KFSFXVolume generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFSFXVolume extends Volume
    dontsortcategories(ReverbVolume)
    hidecategories(Navigation,Object,Movement,Display,Advanced,Attachment,Collision,Volume,Toggle,Mobile,Physics,Debug);

/** Minimum amount of time to pass before playing next sfx event */
var() float MinInterval<ClampMin=0>;
/** Maximum amount of time to pass before playing next sfx event */
var() float MaxInterval<ClampMin=0>;
/** List of possible sfx events to play (chosen from randomly) */
var() array<AkEvent> SFXEvents;

simulated event PostBeginPlay()
{
    if(SFXEvents.Length == 0)
    {
        LogInternal(("*** " $ string(self)) $ " does not have any SFXEvents!");
        return;
    }
    if(MaxInterval < MinInterval)
    {
        MaxInterval = MinInterval;
    }
    if(WorldInfo.NetMode != NM_DedicatedServer)
    {
        WorldInfo.GetALocalPlayerController().SetTimer(GetRandomInterval(), false, 'PlaySFX', self);
    }
}

simulated function PlaySFX()
{
    local int SFXIdx;
    local AkEvent SFXEvent;
    local Vector SFXLocation, RandVect, BoxExtent;

    SFXIdx = Rand(SFXEvents.Length);
    SFXEvent = SFXEvents[SFXIdx];
    RandVect = VRand();
    BoxExtent = BrushComponent.Bounds.BoxExtent;
    SFXLocation = BrushComponent.Bounds.Origin;
    SFXLocation.X += (RandVect.X * BoxExtent.X);
    SFXLocation.Y += (RandVect.Y * BoxExtent.Y);
    SFXLocation.Z += (RandVect.Z * BoxExtent.Z);
    PlayAkEvent(SFXEvent, true,,, SFXLocation);
    WorldInfo.GetALocalPlayerController().SetTimer(GetRandomInterval(), false, 'PlaySFX', self);
}

simulated function float GetRandomInterval()
{
    return MinInterval + float(Rand(int(MaxInterval - MinInterval)));
}

defaultproperties
{
    begin object name=BrushComponent0 class=BrushComponent
        ReplacementPrimitive=none
        bAcceptsLights=false
        CollideActors=false
        BlockNonZeroExtent=false
        AlwaysLoadOnServer=false
    object end
    // Reference: BrushComponent'Default__KFSFXVolume.BrushComponent0'
    BrushComponent=BrushComponent0
    begin object name=BrushComponent0 class=BrushComponent
        ReplacementPrimitive=none
        bAcceptsLights=false
        CollideActors=false
        BlockNonZeroExtent=false
        AlwaysLoadOnServer=false
    object end
    // Reference: BrushComponent'Default__KFSFXVolume.BrushComponent0'
    Components(0)=BrushComponent0
    bCollideActors=false
    begin object name=BrushComponent0 class=BrushComponent
        ReplacementPrimitive=none
        bAcceptsLights=false
        CollideActors=false
        BlockNonZeroExtent=false
        AlwaysLoadOnServer=false
    object end
    // Reference: BrushComponent'Default__KFSFXVolume.BrushComponent0'
    CollisionComponent=BrushComponent0
}