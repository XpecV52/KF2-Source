/*******************************************************************************
 * KFAffliction_Knockdown generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFAffliction_Knockdown extends KFAfflictionBase;

function Activate(optional class<KFDamageType> DamageType)
{
    DamageType = none;
    ActivateKnockdown(DamageType, PawnOwner.HitFxInfo.HitLocation, PawnOwner.DecodeUnitVector(PawnOwner.HitFxInfo.EncodedHitDirection), PawnOwner.HitFxInfo.HitBoneIndex);
    super.Activate();
}

protected function ActivateKnockdown(class<KFDamageType> DamageType, Vector HitLoc, Vector HitDir, byte HitZoneIdx)
{
    local Vector Impulse;

    if((DamageType.default.RadialDamageImpulse > float(0)) && !DamageType.default.bPointImpulseTowardsOrigin)
    {
        Impulse = DamageType.default.RadialDamageImpulse * HitDir;
        if(PawnOwner.HitFxInfo.bRadialDamage && PawnOwner.HitFxRadialInfo.RadiusDamageScale != 255)
        {
            Impulse *= ByteToFloat(PawnOwner.HitFxRadialInfo.RadiusDamageScale);
        }
        Impulse += (vect(0, 0, 1) * DamageType.default.KDeathUpKick);
        PawnOwner.Knockdown(,, vect(1, 1, 1),,,, Impulse);        
    }
    else
    {
        PawnOwner.Knockdown(,, vect(1, 1, 1),,,, DamageType.default.KDamageImpulse * HitDir, HitLoc, HitZoneIdx);
    }
}
