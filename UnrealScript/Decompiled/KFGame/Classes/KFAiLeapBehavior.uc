/*******************************************************************************
 * KFAiLeapBehavior generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFAiLeapBehavior extends KFAiBaseRangedBehavior within KFAIController
    native(AI);

var transient array<Vector> CalculatedArc;
var transient array<Vector> ArcImpacts;
var(LeapCalc) Color ValidArcColor;
var(LeapCalc) Color InValidArcColor;

// Export UKFAiLeapBehavior::execSuggestLeapVelocity(FFrame&, void* const)
native final function bool SuggestLeapVelocity(out Vector outLeapVelocity, Vector Destination, Vector Start, float DesiredLeapSpeed, optional float MinSpeedAllowed, optional float MaxSpeedAllowed, optional float BaseLeapZ, optional float DesiredZPct, optional Vector CollisionSize, optional float TerminalVelocity, optional float OverrideGravityZ, optional bool bUseDeadReckoning, const optional Vector TargetVelocity, optional bool bOnlyTraceUp, optional bool bShowDebugArtifacts, optional bool bPreLobCalc, optional int LobStrikeValidationIdx);

function DrawDebugLastValidLeapArcCalced(Vector FromLoc)
{
    local int Idx;
    local Vector lastArcLoc;

    lastArcLoc = FromLoc;
    Idx = 0;
    J0x1E:

    if(Idx < CalculatedArc.Length)
    {
        Outer.DrawDebugLine(lastArcLoc, CalculatedArc[Idx], ValidArcColor.R, ValidArcColor.G, ValidArcColor.B, true);
        lastArcLoc = CalculatedArc[Idx];
        ++ Idx;
        goto J0x1E;
    }
}

function DrawDebugLastLeapArcCalcedArcImpacts()
{
    local int Idx;

    Idx = 0;
    J0x0B:

    if(Idx < ArcImpacts.Length)
    {
        Outer.DrawDebugStar(ArcImpacts[Idx], 25, InValidArcColor.R, InValidArcColor.G, InValidArcColor.B, true);
        ++ Idx;
        goto J0x0B;
    }
}

defaultproperties
{
    ValidArcColor=(B=0,G=140,R=255,A=255)
    InValidArcColor=(B=71,G=40,R=252,A=255)
}