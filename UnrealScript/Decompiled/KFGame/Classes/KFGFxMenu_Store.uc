/*******************************************************************************
 * KFGFxMenu_Store generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFGFxMenu_Store extends KFGFxObject_Menu within GFxMoviePlayer;

struct StoreItem
{
    var int SKU;
    var string ItemName;
    var string ItemDesciption;
    var string IconLocation;
    var float ItemPrice;
    var name ItemType;

    structdefaultproperties
    {
        SKU=0
        ItemName=""
        ItemDesciption=""
        IconLocation=""
        ItemPrice=0
        ItemType=None
    }
};

var const localized string ExitKF2;
var OnlineSubsystem OnlineSub;
var KFGFxStoreContainer_Main MainContainer;
var KFGFxStoreContainer_Details DetailsContainer;
var KFGFxStoreContainer_Cart CartContainer;
var GFxObject AddCartButton;
var const localized string StoreString;

function InitializeMenu(KFGFxMoviePlayer_Manager InManager)
{
    super.InitializeMenu(InManager);
    LocalizeText();
    OnlineSub = Class'GameEngine'.static.GetOnlineSubsystem();
    OnlineSub.AddOnInventoryReadCompleteDelegate(OnInventoryReadComplete);
}

function OnOpen()
{
    if(OnlineSub != none)
    {
        OnlineSub.AddOnInventoryReadCompleteDelegate(OnInventoryReadComplete);
    }
    RefreshItemList();
}

function OnClose()
{
    if(OnlineSub != none)
    {
        OnlineSub.ClearOnInventoryReadCompleteDelegate(OnInventoryReadComplete);
    }
}

function OnInventoryReadComplete()
{
    RefreshItemList();
}

function RefreshItemList()
{
    if(MainContainer != none)
    {
        MainContainer.SendItems(OnlineSub.ItemPropertiesList);
    }
}

function LocalizeText()
{
    local GFxObject LocalizedObject;

    LocalizedObject = Outer.CreateObject("Object");
    LocalizedObject.SetString("store", StoreString);
    SetObject("localizedText", LocalizedObject);
}

event bool WidgetInitialized(name WidgetName, name WidgetPath, GFxObject Widget)
{
    switch(WidgetName)
    {
        case 'storeMainContainer':
            if(MainContainer == none)
            {
                MainContainer = KFGFxStoreContainer_Main(Widget);
                MainContainer.Initialize(self);
                MainContainer.SendItems(OnlineSub.ItemPropertiesList);
            }
            break;
        case 'storeCart':
            if(CartContainer == none)
            {
                CartContainer = KFGFxStoreContainer_Cart(Widget);
                CartContainer.Initialize(self);
            }
            break;
        case 'ItemDetails':
            if(DetailsContainer == none)
            {
                DetailsContainer = KFGFxStoreContainer_Details(Widget);
                DetailsContainer.Initialize(self);
                AddCartButton = DetailsContainer.GetObject("addCartButton");
            }
            break;
        default:
            break;
    }
    return true;
}

function Callback_StoreSectionChanged(int FilterIndex)
{
    MainContainer.UpdateFilter(FilterIndex);
}

function Callback_AddToCartClicked(int ItemSKU)
{
    local ItemProperties StoreItemDetails;

    if(OnlineSub != none)
    {
        StoreItemDetails = OnlineSub.ItemPropertiesList[OnlineSub.ItemPropertiesList.Find('Definition', ItemSKU];
        if(StoreItemDetails.Price == "")
        {
            OnlineSub.OpenMarketPlaceSearch(StoreItemDetails);            
        }
        else
        {
            OnlineSub.OpenItemPurchaseOverlay(ItemSKU);
        }
    }
}

function CallBack_ItemDetailsClicked(int ItemDefinition)
{
    local ItemProperties StoreItemDetails;

    StoreItemDetails = OnlineSub.ItemPropertiesList[OnlineSub.ItemPropertiesList.Find('Definition', ItemDefinition];
    if(StoreItemDetails.Price == "")
    {
        AddCartButton.SetString("label", Class'KFGFxStoreContainer_Details'.default.LookUpOnMarketString);        
    }
    else
    {
        AddCartButton.SetString("label", (Class'KFGFxStoreContainer_Details'.default.AddToCartString $ ":") $ StoreItemDetails.Price);
    }
    SetObject("storeItemDetails", CreateStoreItem(StoreItemDetails));
}

function GFxObject CreateStoreItem(ItemProperties DesiredStoreItem)
{
    local GFxObject DataObject;

    DataObject = Outer.CreateObject("Object");
    DataObject.SetString("label", DesiredStoreItem.Name);
    DataObject.SetString("description", DesiredStoreItem.Description);
    DataObject.SetString("price", DesiredStoreItem.Price);
    DataObject.SetString("imageURL", "img://" $ DesiredStoreItem.IconURL);
    DataObject.SetString("imageURLLarge", "img://" $ DesiredStoreItem.IconURLLarge);
    DataObject.SetInt("SKU", DesiredStoreItem.Definition);
    return DataObject;
}

defaultproperties
{
    StoreString="STORE"
    SubWidgetBindings=/* Array type was not detected. */
}