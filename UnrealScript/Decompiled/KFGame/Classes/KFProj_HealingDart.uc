/*******************************************************************************
 * KFProj_HealingDart generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFProj_HealingDart extends KFProj_Bullet
    hidecategories(Navigation);

var Actor SeekTarget;
var Vector InitialDir;
/** Tracking strength multiplier */
var(Locking) float TrackingStrength;
var Vector SeekOffset;
var bool bSeekInitialized;

replication
{
     if(bNetInitial && Role == ROLE_Authority)
        InitialDir, SeekTarget;
}

simulated function InitializeSeek()
{
    local KFPawn KFP;

    if(IsZero(InitialDir))
    {
        InitialDir = Normal(Velocity);
    }
    KFP = KFPawn(SeekTarget);
    if((KFP != none) && KFP.TorsoBoneName != 'None')
    {
        SeekOffset = KFP.Mesh.GetBoneLocation(KFP.TorsoBoneName) - KFP.Location;
    }
}

simulated event Tick(float DeltaTime)
{
    local Vector SeekingVector, ForceDir;
    local float VelMag;

    super(Actor).Tick(DeltaTime);
    if(bShuttingDown || SeekTarget == none)
    {
        return;
    }
    if(SeekTarget == Instigator)
    {
        SeekTarget = none;
        return;
    }
    if(!bSeekInitialized)
    {
        InitializeSeek();
        bSeekInitialized = true;
    }
    SeekingVector = SeekTarget.Location + SeekOffset;
    ForceDir = Normal(SeekingVector - Location);
    if((ForceDir Dot InitialDir) > 0)
    {
        VelMag = VSize(Velocity);
        Acceleration = (TrackingStrength * VelMag) * ForceDir;        
    }
    else
    {
        Acceleration = vect(0, 0, 0);
    }
}

simulated event HitWall(Vector HitNormal, Actor Wall, PrimitiveComponent WallComp)
{
    Explode(Location, HitNormal);
}

defaultproperties
{
    TrackingStrength=75
    bNoReplicationToInstigator=false
    bDamageDestructiblesOnTouch=false
    bAmbientSoundZedTimeOnly=false
    AmbientComponent=AkComponent'Default__KFProj_HealingDart.AmbientAkSoundComponent'
    Speed=10000
    MaxSpeed=10000
    begin object name=CollisionCylinder class=CylinderComponent
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__KFProj_HealingDart.CollisionCylinder'
    CylinderComponent=CollisionCylinder
    begin object name=CollisionCylinder class=CylinderComponent
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__KFProj_HealingDart.CollisionCylinder'
    Components(0)=CollisionCylinder
    Components(1)=AkComponent'Default__KFProj_HealingDart.AmbientAkSoundComponent'
    bNetTemporary=false
    begin object name=CollisionCylinder class=CylinderComponent
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__KFProj_HealingDart.CollisionCylinder'
    CollisionComponent=CollisionCylinder
}