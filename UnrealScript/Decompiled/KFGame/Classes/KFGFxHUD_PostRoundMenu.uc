/*******************************************************************************
 * KFGFxHUD_PostRoundMenu generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFGFxHUD_PostRoundMenu extends GFxObject within GFxMoviePlayer;

var KFGFxPostRoundContainer_Team TeamOneContainer;
var KFGFxPostRoundContainer_Team TeamTwoContainer;
var const localized string RoundResultsString;
var const localized string MatchResultsString;
var const localized string SurvivorVictory;
var const localized string ZedVictory;
var const localized string TieString;
var const localized string YourTeamString;
var const localized string OpposingTeamString;
var const localized string MatchOnGoingString;
var KFTeamInfo_Human WinningTeam;
var KFGameReplicationInfo KFGRI;

function InitializeHUD()
{
    KFGRI = KFGameReplicationInfo(Outer.GetPC().WorldInfo.GRI);
    LocalizeText();
    DisplayProgress();
}

function LocalizeText()
{
    local GFxObject TextObject;

    TextObject = Outer.CreateObject("Object");
    TextObject.SetString("roundResultsTitle", RoundResultsString);
    TextObject.SetString("matchResultsTitle", MatchResultsString);
    SetObject("localizedText", TextObject);
}

event bool WidgetInitialized(name WidgetName, name WidgetPath, GFxObject Widget)
{
    switch(WidgetName)
    {
        case 'roundOneContainer':
            if(TeamOneContainer == none)
            {
                TeamOneContainer = KFGFxPostRoundContainer_Team(Widget);
                TeamOneContainer.TeamValue = 1;
                TeamOneContainer.TeamID = 1;
                TeamOneContainer.Initialize();
            }
            break;
        case 'roundTwoContainer':
            if(TeamTwoContainer == none)
            {
                TeamTwoContainer = KFGFxPostRoundContainer_Team(Widget);
                TeamTwoContainer.TeamValue = 2;
                TeamTwoContainer.TeamID = 0;
                TeamTwoContainer.Initialize();
            }
            break;
        default:
            break;
    }
    return true;
}

function DisplayProgress()
{
    local GFxObject TextObject;
    local KFTeamInfo_Human Team1, Team2;

    Team1 = KFTeamInfo_Human(KFGRI.Teams[1]);
    Team2 = KFTeamInfo_Human(KFGRI.Teams[0]);
    TextObject = Outer.CreateObject("Object");
    if(KFGRI.bMatchVictory)
    {
        TextObject.SetString("roundResults", SurvivorVictory);        
    }
    else
    {
        TextObject.SetString("roundResults", ZedVictory);
    }
    if(KFGRI.GetCurrentRoundNumber() < 2)
    {
        TextObject.SetString("matchResults", MatchOnGoingString);        
    }
    else
    {
        if(Team1.TeamScoreDataPacket.RoundScore > Team2.TeamScoreDataPacket.RoundScore)
        {
            WinningTeam = Team1;            
        }
        else
        {
            if(Team1.TeamScoreDataPacket.RoundScore < Team2.TeamScoreDataPacket.RoundScore)
            {
                WinningTeam = Team2;                
            }
            else
            {
                WinningTeam = none;
            }
        }
        if(WinningTeam == none)
        {
            TextObject.SetString("matchResults", TieString);            
        }
        else
        {
            if(Outer.GetPC().PlayerReplicationInfo.GetTeamNum() == WinningTeam.TeamIndex)
            {
                TextObject.SetString("matchResults", YourTeamString);                
            }
            else
            {
                TextObject.SetString("matchResults", OpposingTeamString);
            }
        }
    }
    SetObject("Data", TextObject);
}

defaultproperties
{
    RoundResultsString="Round Results"
    MatchResultsString="Overall Winner"
    SurvivorVictory="Survivor Victory!"
    ZedVictory="Zed Victory!"
    TieString="Tie!"
    YourTeamString="Your Team Wins!"
    OpposingTeamString="Opposing Team Wins!"
    MatchOnGoingString="Switching Teams..."
    SubWidgetBindings=/* Array type was not detected. */
}