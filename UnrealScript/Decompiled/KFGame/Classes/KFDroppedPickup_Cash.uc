/*******************************************************************************
 * KFDroppedPickup_Cash generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFDroppedPickup_Cash extends KFDroppedPickup
    hidecategories(Navigation);

var int CashAmount;
var PlayerReplicationInfo TosserPRI;
var AkEvent PickupSound;

function GiveTo(Pawn P)
{
    local KFPawn_Human KFPH;
    local KFPlayerReplicationInfo KFPRI;

    if(P.PlayerReplicationInfo != none)
    {
        KFPH = KFPawn_Human(P);
        KFPRI = KFPlayerReplicationInfo(P.PlayerReplicationInfo);
        if(((KFPRI != none) && KFPRI != TosserPRI) && KFPH != none)
        {
            KFPH.UpdateDoshCaught(CashAmount, TosserPRI);
            AddDoshForBenefector(TosserPRI);
        }
        if(KFPRI != none)
        {
            KFPRI.AddDosh(CashAmount);
            if((WorldInfo.GRI != none) && WorldInfo.GRI.GameClass.static.AllowAnalyticsLogging())
            {
                WorldInfo.TWLogEvent("dosh_picked_up", KFPRI, "#" $ string(CashAmount));
            }
        }
        bForceNetUpdate = true;
        P.PlaySoundBase(PickupSound);
    }
    PickedUpBy(P);
}

protected function AddDoshForBenefector(PlayerReplicationInfo MyTosserPRI)
{
    local KFPlayerController KFPC;

    if(MyTosserPRI != none)
    {
        KFPC = KFPlayerController(MyTosserPRI.Owner);
        if(KFPC != none)
        {
            KFPC.UpdateBenefactor(CashAmount);
        }
    }
}

simulated function SetPickupMesh(PrimitiveComponent NewPickupMesh)
{
    super.SetPickupMesh(NewPickupMesh);
    CollisionComponent.SetRBCollidesWithChannel(19, true);
}

event Destroyed()
{
    TosserPRI = none;
    Inventory = none;
}

auto state Pickup
{
    event OnSleepRBPhysics()
    {
        local Pawn P;

        global.OnSleepRBPhysics();
        foreach TouchingActors(Class'Pawn', P)
        {
            if(P == Instigator)
            {
                Touch(P, none, Location, vect(0, 0, 1));
            }            
        }        
    }
    stop;    
}

defaultproperties
{
    PickupSound=AkEvent'WW_UI_PlayerCharacter.Play_UI_Pickup_Dosh'
    bUseLowHealthDelay=false
    begin object name=Sprite class=SpriteComponent
        ReplacementPrimitive=none
    object end
    // Reference: SpriteComponent'Default__KFDroppedPickup_Cash.Sprite'
    Components(0)=Sprite
    begin object name=CollisionCylinder class=CylinderComponent
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__KFDroppedPickup_Cash.CollisionCylinder'
    Components(1)=CollisionCylinder
    LifeSpan=120
    begin object name=CollisionCylinder class=CylinderComponent
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__KFDroppedPickup_Cash.CollisionCylinder'
    CollisionComponent=CollisionCylinder
}