/*******************************************************************************
 * TetrahedronBuilder generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class TetrahedronBuilder extends BrushBuilder
    hidecategories(Object,BrushBuilder);

var() float Radius<ClampMin=0.000001>;
var() int SphereExtrapolation<ClampMin=1|ClampMax=5>;
var() name GroupName;

function Extrapolate(int A, int B, int C, int Count, float Inradius)
{
    local int ab, bc, ca;

    if(Count > 1)
    {
        ab = Vertexv(Inradius * Normal((GetVertex(A)) + (GetVertex(B))));
        bc = Vertexv(Inradius * Normal((GetVertex(B)) + (GetVertex(C))));
        ca = Vertexv(Inradius * Normal((GetVertex(C)) + (GetVertex(A))));
        Extrapolate(A, ab, ca, Count - 1, Inradius);
        Extrapolate(B, bc, ab, Count - 1, Inradius);
        Extrapolate(C, ca, bc, Count - 1, Inradius);
        Extrapolate(ab, bc, ca, Count - 1, Inradius);        
    }
    else
    {
        Poly3i(1, A, B, C);
    }
}

function BuildTetrahedron(float R, int InSphereExtrapolation)
{
    Vertex3f(R, 0, 0);
    Vertex3f(-R, 0, 0);
    Vertex3f(0, R, 0);
    Vertex3f(0, -R, 0);
    Vertex3f(0, 0, R);
    Vertex3f(0, 0, -R);
    Extrapolate(2, 1, 4, InSphereExtrapolation, Radius);
    Extrapolate(1, 3, 4, InSphereExtrapolation, Radius);
    Extrapolate(3, 0, 4, InSphereExtrapolation, Radius);
    Extrapolate(0, 2, 4, InSphereExtrapolation, Radius);
    Extrapolate(1, 2, 5, InSphereExtrapolation, Radius);
    Extrapolate(3, 1, 5, InSphereExtrapolation, Radius);
    Extrapolate(0, 3, 5, InSphereExtrapolation, Radius);
    Extrapolate(2, 0, 5, InSphereExtrapolation, Radius);
}

event bool Build()
{
    if((Radius <= float(0)) || SphereExtrapolation <= 0)
    {
        return BadParameters();
    }
    if(SphereExtrapolation > 5)
    {
        return BadParameters("Setting 'SphereExtrapolation' to more than 5 is invalid.  The resulting brush will have too many polygons to be useful.");
    }
    BeginBrush(false, GroupName);
    BuildTetrahedron(Radius, SphereExtrapolation);
    return EndBrush();
}

defaultproperties
{
    Radius=256
    SphereExtrapolation=1
    GroupName=Tetrahedron
    BitmapFilename="Btn_Sphere"
    ToolTip="BrushBuilderName_Tetrahedron"
}