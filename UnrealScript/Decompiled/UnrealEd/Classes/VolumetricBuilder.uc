/*******************************************************************************
 * VolumetricBuilder generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class VolumetricBuilder extends BrushBuilder
    hidecategories(Object,BrushBuilder);

var() float Z<ClampMin=0.000001>;
var() float Radius<ClampMin=0.000001>;
var() int NumSheets<ClampMin=2>;
var() name GroupName;

function BuildVolumetric(int Direction, int InNumSheets, float InZ, float Inradius)
{
    local int N, X, Y;
    local Rotator RotStep;
    local Vector vtx, NewVtx;

    N = GetVertexCount();
    RotStep.Yaw = 65536 / (InNumSheets * 2);
    vtx.X = Radius;
    vtx.Z = InZ / float(2);
    X = 0;
    J0xA2:

    if(X < (InNumSheets * 2))
    {
        NewVtx = vtx >> (RotStep * float(X));
        Vertex3f(NewVtx.X, NewVtx.Y, NewVtx.Z);
        Vertex3f(NewVtx.X, NewVtx.Y, NewVtx.Z - InZ);
        ++ X;
        goto J0xA2;
    }
    X = 0;
    J0x1CA:

    if(X < InNumSheets)
    {
        Y = (X * 2) + 1;
        if(Y >= (InNumSheets * 2))
        {
            Y -= (InNumSheets * 2);
        }
        Poly4i(Direction, N + (X * 2), N + Y, (N + Y) + (InNumSheets * 2), (N + (X * 2)) + (InNumSheets * 2), 'Sheets', true);
        ++ X;
        goto J0x1CA;
    }
}

event bool Build()
{
    if(NumSheets < 2)
    {
        return BadParameters();
    }
    if((Z <= float(0)) || Radius <= float(0))
    {
        return BadParameters();
    }
    BeginBrush(true, GroupName);
    BuildVolumetric(1, NumSheets, Z, Radius);
    return EndBrush();
}

defaultproperties
{
    Z=128
    Radius=64
    NumSheets=2
    GroupName=Volumetric
    BitmapFilename="Btn_Volumetric"
    ToolTip="BrushBuilderName_Volumetric"
}