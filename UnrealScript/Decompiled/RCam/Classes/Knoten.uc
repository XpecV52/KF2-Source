/*******************************************************************************
 * Knoten generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Knoten extends Actor
    notplaceable
    hidecategories(Navigation);

var float dct;
var float FOV;
var float Time;
var int I;
var int Z;
var bool hasSpawnedcc;
var bool B;
var bool b2;
var bool zeichner;
var Vector V;
var Rotator rotat;
var CamControl CC;
var Knoten knoten2;
var Knoten Other;

function PostBeginPlay()
{
    local CamControl Other2;
    local KFDemoRecSpectator other3;

    hasSpawnedcc = false;
    Z = 0;
    zeichner = false;
    rotat = rot(0, 0, 0);
    SetRotation(rotat);
    B = false;
    b2 = false;
    FOV = 100;
    Time = WorldInfo.TimeSeconds;
    foreach AllActors(Class'CamControl', Other2)
    {
        B = Other2.I_want_to_insert_a_Flag;
        b2 = Other2.is_spawning;
        CC = Other2;        
    }    
    foreach AllActors(Class'Knoten', Other)
    {
        ++ Z;        
    }    
    if(!b2)
    {
        if((CC != none) && CC.justSpawn)
        {
            return;
        }
        knoten2 = self;
        I = 0;
        foreach AllActors(Class'Knoten', Other)
        {
            ++ I;
            if(I == (Z - 1))
            {
                knoten2 = Other;
            }            
        }        
        foreach AllActors(Class'KFDemoRecSpectator', other3)
        {
            rotat.Yaw = other3.ViewTarget.Rotation.Yaw;
            rotat.Pitch = other3.ViewTarget.Rotation.Pitch;
            if(Abs(float(rotat.Yaw - knoten2.Rotation.Yaw)) > float(32768))
            {
                J0x328:

                if(Abs(float(rotat.Yaw - knoten2.Rotation.Yaw)) > float(32768))
                {
                    if(rotat.Yaw > knoten2.Rotation.Yaw)
                    {
                        rotat.Yaw = rotat.Yaw - 65536;                        
                    }
                    else
                    {
                        rotat.Yaw = rotat.Yaw + 65536;
                    }
                    goto J0x328;
                }                
            }
            else
            {
                rotat.Yaw = other3.ViewTarget.Rotation.Yaw;
            }
            if(Abs(float(rotat.Pitch - knoten2.Rotation.Pitch)) > float(32768))
            {
                J0x524:

                if(Abs(float(rotat.Pitch - knoten2.Rotation.Pitch)) > float(32768))
                {
                    if(rotat.Pitch > knoten2.Rotation.Pitch)
                    {
                        rotat.Pitch = rotat.Pitch - 65536;                        
                    }
                    else
                    {
                        rotat.Pitch = rotat.Pitch + 65536;
                    }
                    goto J0x524;
                }                
            }
            else
            {
                rotat.Pitch = other3.ViewTarget.Rotation.Pitch;
            }
            SetLocation(other3.ViewTarget.Location);
            SetRotation(rotat);
            break;            
        }        
    }
    if(!B)
    {
        if(Z == 4)
        {
            zeichner = true;
        }
    }
    if(B)
    {
        CC.FlagEinfuegen();
    }
}

function SetScale(float NewScale);

function updateSpline()
{
    local CamControl OtherCC;

    foreach AllActors(Class'CamControl', OtherCC)
    {
        hasSpawnedcc = true;
        CC = OtherCC;        
    }    
    if(!hasSpawnedcc)
    {
        CC = Spawn(Class'CamControl');
        hasSpawnedcc = true;
    }
    CC.updateSplinef(true);
}

defaultproperties
{
    begin object name=Sprite class=SpriteComponent
        Sprite=Texture2D'EditorResources.S_RadForce'
        ReplacementPrimitive=none
    object end
    // Reference: SpriteComponent'Default__Knoten.Sprite'
    Components(0)=Sprite
    bAlwaysTick=true
}