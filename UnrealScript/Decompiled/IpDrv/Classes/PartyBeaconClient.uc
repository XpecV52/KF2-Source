/*******************************************************************************
 * PartyBeaconClient generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class PartyBeaconClient extends PartyBeacon
    native
    config(Engine);

enum EPartyBeaconClientState
{
    PBCS_None,
    PBCS_Connecting,
    PBCS_Connected,
    PBCS_ConnectionFailed,
    PBCS_AwaitingResponse,
    PBCS_Closed,
    PBCS_MAX
};

enum EPartyBeaconClientRequest
{
    PBClientRequest_NewReservation,
    PBClientRequest_UpdateReservation,
    PBClientRequest_MAX
};

var const OnlineGameSearchResult HostPendingRequest;
var PartyReservation PendingRequest;
var PartyBeaconClient.EPartyBeaconClientState ClientBeaconState;
var PartyBeaconClient.EPartyBeaconClientRequest ClientBeaconRequestType;
var config float ReservationRequestTimeout;
var float ReservationRequestElapsedTime;
var config string ResolverClassName;
var class<ClientBeaconAddressResolver> ResolverClass;
var ClientBeaconAddressResolver Resolver;
var delegate<OnReservationRequestComplete> __OnReservationRequestComplete__Delegate;
var delegate<OnReservationCountUpdated> __OnReservationCountUpdated__Delegate;
var delegate<OnTravelRequestReceived> __OnTravelRequestReceived__Delegate;
var delegate<OnHostIsReady> __OnHostIsReady__Delegate;
var delegate<OnHostHasCancelled> __OnHostHasCancelled__Delegate;

delegate OnReservationRequestComplete(PartyBeacon.EPartyReservationResult ReservationResult);

delegate OnReservationCountUpdated(int ReservationRemaining);

delegate OnTravelRequestReceived(name SessionName, class<OnlineGameSearch> SearchClass, byte PlatformSpecificInfo[80]);

delegate OnHostIsReady();

delegate OnHostHasCancelled();

// Export UPartyBeaconClient::execRequestReservation(FFrame&, void* const)
native function bool RequestReservation(const out OnlineGameSearchResult DesiredHost, UniqueNetId RequestingPartyLeader, const out array<PlayerReservation> Players);

// Export UPartyBeaconClient::execRequestReservationUpdate(FFrame&, void* const)
native function bool RequestReservationUpdate(const out OnlineGameSearchResult DesiredHost, UniqueNetId RequestingPartyLeader, const out array<PlayerReservation> PlayersToAdd);

// Export UPartyBeaconClient::execCancelReservation(FFrame&, void* const)
native function bool CancelReservation(UniqueNetId CancellingPartyLeader);

// Export UPartyBeaconClient::execDestroyBeacon(FFrame&, void* const)
native event DestroyBeacon();
