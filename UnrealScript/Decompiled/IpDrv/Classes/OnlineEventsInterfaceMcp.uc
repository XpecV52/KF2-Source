/*******************************************************************************
 * OnlineEventsInterfaceMcp generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class OnlineEventsInterfaceMcp extends MCPBase
    native
    config(Engine)
    implements(OnlineEventsInterface);

enum EEventUploadType
{
    EUT_GenericStats,
    EUT_ProfileData,
    EUT_MatchmakingData,
    EUT_PlaylistPopulation,
    EUT_MAX
};

struct native EventUploadConfig
{
    var const OnlineEventsInterfaceMcp.EEventUploadType UploadType;
    var const string UploadUrl;
    var const float TimeOut;
    var const bool bUseCompression;

    structdefaultproperties
    {
        UploadType=EEventUploadType.EUT_GenericStats
        UploadUrl=""
        TimeOut=0
        bUseCompression=false
    }
};

var const config array<config EventUploadConfig> EventUploadConfigs;
var native const array<Pointer> MCPEventPostObjects;
var config array<config OnlineEventsInterfaceMcp.EEventUploadType> DisabledUploadTypes;
var const config bool bBinaryStats;

// Export UOnlineEventsInterfaceMcp::execUploadPlayerData(FFrame&, void* const)
native function bool UploadPlayerData(UniqueNetId UniqueId, string PlayerNick, OnlineProfileSettings ProfileSettings, OnlinePlayerStorage PlayerStorage);

// Export UOnlineEventsInterfaceMcp::execUploadGameplayEventsData(FFrame&, void* const)
native function bool UploadGameplayEventsData(UniqueNetId UniqueId, const out array<byte> Payload);

// Export UOnlineEventsInterfaceMcp::execUpdatePlaylistPopulation(FFrame&, void* const)
native function bool UpdatePlaylistPopulation(int PlaylistId, int NumPlayers);

// Export UOnlineEventsInterfaceMcp::execUploadMatchmakingStats(FFrame&, void* const)
native function bool UploadMatchmakingStats(UniqueNetId UniqueId, OnlineMatchmakingStats MMStats);
