/*******************************************************************************
 * McpIdMappingBase generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class McpIdMappingBase extends McpServiceBase
    abstract
    config(Engine);

struct McpIdMapping
{
    var string McpId;
    var string ExternalId;
    var string ExternalType;

    structdefaultproperties
    {
        McpId=""
        ExternalId=""
        ExternalType=""
    }
};

var config string McpIdMappingClassName;
var delegate<OnAddMappingComplete> __OnAddMappingComplete__Delegate;
var delegate<OnQueryMappingsComplete> __OnQueryMappingsComplete__Delegate;

static final function McpIdMappingBase CreateInstance()
{
    local class<McpIdMappingBase> McpIdMappingBaseClass;
    local McpIdMappingBase NewInstance;

    McpIdMappingBaseClass = class<McpIdMappingBase>(DynamicLoadObject(default.McpIdMappingClassName, Class'Class'));
    if(McpIdMappingBaseClass != none)
    {
        NewInstance = new McpIdMappingBaseClass;
        NewInstance.Init();
    }
    return NewInstance;
}

function AddMapping(string McpId, string ExternalId, string ExternalType);

delegate OnAddMappingComplete(string McpId, string ExternalId, string ExternalType, bool bWasSuccessful, string Error);

function QueryMappings(const out array<string> ExternalIds, string ExternalType);

delegate OnQueryMappingsComplete(string ExternalType, bool bWasSuccessful, string Error);

function GetIdMappings(string ExternalType, out array<McpIdMapping> IDMappings);

defaultproperties
{
    McpIdMappingClassName="IpDrv.McpIdMappingManager"
}