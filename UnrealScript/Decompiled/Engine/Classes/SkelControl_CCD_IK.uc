/*******************************************************************************
 * SkelControl_CCD_IK generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class SkelControl_CCD_IK extends SkelControlBase
    native(Anim)
    hidecategories(Object,Object);

/** Where you want the controlled bone to be. Will be placed as close as possible within the constraints of the limb. */
var(Effector) Vector EffectorLocation;
/** Reference frame that the DesiredLocation is defined in. */
var(Effector) SkelControlBase.EBoneControlSpace EffectorLocationSpace;
/** Name of bone used if DesiredLocationSpace is BCS_OtherBoneSpace. */
var(Effector) name EffectorSpaceBoneName;
/** Translation from bone */
var(Effector) Vector EffectorTranslationFromBone;
/** Number of bones above the active one in the hierarchy to modify and apply CCD IK. */
var(CCD) int NumBones;
/** Loop MaxPerBoneIterations per bone in the chain. */
var(CCD) int MaxPerBoneIterations;
var const int IterationsCount;
/** Error tolerance to consider IK Target reached, in squared units. */
var(CCD) float Precision;
/** By default CCD starts at end of chain and goes backwards. If TRUE, do the opposite. */
var(CCD) bool bStartFromTail;
/** if TRUE, skip update when turn is negligible. */
var(CCD) bool bNoTurnOptimization;
/** Joint Angle Constraint */
var(CCD) const array<float> AngleConstraint;
/** Max Angle Steps */
var(CCD) float MaxAngleSteps;

defaultproperties
{
    NumBones=2
    MaxPerBoneIterations=3
    Precision=0.1
    MaxAngleSteps=0.4
}