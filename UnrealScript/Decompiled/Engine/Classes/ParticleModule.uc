/*******************************************************************************
 * ParticleModule generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class ParticleModule extends Object
    abstract
    native(Particle)
    editinlinenew
    hidecategories(Object);

enum EModuleType
{
    EPMT_General,
    EPMT_TypeData,
    EPMT_Beam,
    EPMT_Trail,
    EPMT_Spawn,
    EPMT_Required,
    EPMT_Event,
    EPMT_MAX
};

enum EParticleSourceSelectionMethod
{
    EPSSM_Random,
    EPSSM_Sequential,
    EPSSM_MAX
};

struct native transient ParticleCurvePair
{
    var init string CurveName;
    var init Object CurveObject;

    structdefaultproperties
    {
        CurveName=""
        CurveObject=none
    }
};

struct native ParticleRandomSeedInfo
{
    /** The name to expose to the placed instances for setting this seed */
    var() name ParameterName;
    /**  
     *If TRUE, the module will attempt to get the seed from the owner
     *               instance. If that fails, it will fall back to getting it from
     *               the RandomSeeds array.
     */
    var() bool bGetSeedFromInstance;
    /**  
     *If TRUE, the seed value retrieved from teh instance will be an
     *               index into the array of seeds.
     */
    var() bool bInstanceSeedIsIndex;
    /**  
     *If TRUE, then reset the seed upon the emitter looping.
     *               For looping environmental effects this should likely be set to FALSE to avoid
     *               a repeating pattern.
     */
    var() bool bResetSeedOnEmitterLooping;
    /**  
     *The random seed values to utilize for the module. 
     *               More than 1 means the instance will randomly select one.
     */
    var() array<int> RandomSeeds;

    structdefaultproperties
    {
        ParameterName=None
        bGetSeedFromInstance=false
        bInstanceSeedIsIndex=false
        bResetSeedOnEmitterLooping=true
        RandomSeeds=none
    }
};

var bool bSpawnModule;
var bool bUpdateModule;
var bool bFinalUpdateModule;
var bool bCurvesAsColor;
/** If TRUE, the module should render its 3D visualization helper */
var(Cascade) bool b3DDrawMode;
var bool bSupported3DDrawMode;
var bool bEnabled;
var bool bEditable;
var bool LODDuplicate;
var bool bSupportsRandomSeed;
var bool bRequiresLoopingNotification;
var const byte LODValidity;
/**  
 *The color to draw the modules curves in the curve editor. 
 *       If bCurvesAsColor is TRUE, it overrides this value.
 */
var(Cascade) editoronly Color ModuleEditorColor;

defaultproperties
{
    bEnabled=true
    bEditable=true
    LODDuplicate=true
}