/*******************************************************************************
 * MaterialInstance generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class MaterialInstance extends MaterialInterface
    abstract
    native(Material);

/** Physical material to use for this graphics material. Used for sounds, effects etc. */
var() PhysicalMaterial PhysMaterial;
var() const MaterialInterface Parent;
/** A 1 bit monochrome texture that represents a mask for what physical material should be used if the collided texel is black or white. */
var(PhysicalMaterialMask) Texture2D PhysMaterialMask;
/** The UV channel to use for the PhysMaterialMask. */
var(PhysicalMaterialMask) int PhysMaterialMaskUVChannel;
/** The physical material to use when a black pixel in the PhysMaterialMask texture is hit. */
var(PhysicalMaterialMask) PhysicalMaterial BlackPhysicalMaterial;
/** The physical material to use when a white pixel in the PhysMaterialMask texture is hit. */
var(PhysicalMaterialMask) PhysicalMaterial WhitePhysicalMaterial;
var bool bHasStaticPermutationResource;
var native transient bool bStaticPermutationDirty;
var private native const bool ReentrantFlag;
var private const transient bool bNeedsMaterialFlattening;
var duplicatetransient native const Pointer StaticParameters[2];
var duplicatetransient native const Pointer StaticPermutationResources[2];
var duplicatetransient native const Pointer Resources[3];
var private const deprecated array<deprecated Texture> ReferencedTextures;
var private editoronly const array<editoronly Guid> ReferencedTextureGuids;
var private const Guid ParentLightingGuid;

// Export UMaterialInstance::execSetParent(FFrame&, void* const)
native function SetParent(MaterialInterface NewParent);

// Export UMaterialInstance::execSetVectorParameterValue(FFrame&, void* const)
native function SetVectorParameterValue(name ParameterName, const out LinearColor Value);

// Export UMaterialInstance::execSetScalarParameterValue(FFrame&, void* const)
native function SetScalarParameterValue(name ParameterName, float Value);

// Export UMaterialInstance::execSetScalarCurveParameterValue(FFrame&, void* const)
native function SetScalarCurveParameterValue(name ParameterName, const out InterpCurveFloat Value);

// Export UMaterialInstance::execSetTextureParameterValue(FFrame&, void* const)
native function SetTextureParameterValue(name ParameterName, Texture Value);

// Export UMaterialInstance::execGetTextureParameterValue(FFrame&, void* const)
native function bool GetTextureParameterValue(name ParameterName, out Texture Value);

// Export UMaterialInstance::execSetFontParameterValue(FFrame&, void* const)
native function SetFontParameterValue(name ParameterName, Font FontValue, int FontPage);

// Export UMaterialInstance::execClearParameterValues(FFrame&, void* const)
native function ClearParameterValues();

// Export UMaterialInstance::execIsInMapOrTransientPackage(FFrame&, void* const)
native function bool IsInMapOrTransientPackage();

defaultproperties
{
    PhysMaterialMaskUVChannel=-1
}