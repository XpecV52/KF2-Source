/*******************************************************************************
 * ParticleModuleTypeDataPhysX generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class ParticleModuleTypeDataPhysX extends ParticleModuleTypeDataBase
    native(Particle)
    editinlinenew
    collapsecategories
    hidecategories(Object,Object,Object);

struct native PhysXEmitterVerticalLodProperties
{
    /**  
     *Priority for removing old particles from this emitter.
     *       Relative low values give other emitters precedence for giving 
     *       up old particles.
     */
    var() float WeightForFifo;
    /**  
     *Priority for spawn time particle culling and lifetime reduction.
     *       Relative low values give other emitters precedence for dropping 
     *       particles and reducing lifetimes at spawn time.
     */
    var() float WeightForSpawnLod;
    /**  
     *Bias for spawn time LOD. Range: [0,1]
     *       1.0: spawn volume reduction by culling spawned particles. 
     *       0.0: spawn volume reduction by lowering particle lifetimes.
     */
    var() float SpawnLodRateVsLifeBias;
    /**  
     *Defines the fraction of the particle lifetime that is used for 
     *    early fading out. This setting should correspond with 
     *    the time span which is used to fade out particles, reducing 
     *    size or opacity. Range: [0,1]
     */
    var() float RelativeFadeoutTime;

    structdefaultproperties
    {
        WeightForFifo=1
        WeightForSpawnLod=1
        SpawnLodRateVsLifeBias=1
        RelativeFadeoutTime=0
    }
};

/** Actual wrapper for NxFluid PhsyX SDK object */
var(PhysXEmitter) PhysXParticleSystem PhysXParSys<DisplayName=PhysX Par Sys>;
var(PhysXEmitter) PhysXEmitterVerticalLodProperties VerticalLod;
/** NVCHANGE [Begin] [03/21/2011 Lin Nan, NVIDIA, SPH fluid rendering] */
var(PhysXEmitter) float SPHSmoothScreenRadius;
/** During rendering, the blur radius on screen plane */
var(PhysXEmitter) float SPHSmoothDepthRadius;
/** During rendering, the blur radius along view direction */
var(PhysXEmitter) float SPHCutoffThickness;

defaultproperties
{
    VerticalLod=(WeightForFifo=1,WeightForSpawnLod=1,SpawnLodRateVsLifeBias=1,RelativeFadeoutTime=0)
    SPHSmoothScreenRadius=5
    SPHSmoothDepthRadius=5
    SPHCutoffThickness=10
}