/*******************************************************************************
 * MeshComponent generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class MeshComponent extends PrimitiveComponent
    abstract
    native(Mesh)
    noexport;

/** Per-Component material overrides.  These must NOT be set directly or a race condition can occur between GC and the rendering thread. */
var(Rendering) const array<MaterialInterface> Materials;

// Export UMeshComponent::execGetMaterial(FFrame&, void* const)
native function MaterialInterface GetMaterial(int ElementIndex);

// Export UMeshComponent::execSetMaterial(FFrame&, void* const)
native function SetMaterial(int ElementIndex, MaterialInterface Material);

// Export UMeshComponent::execGetNumElements(FFrame&, void* const)
native function int GetNumElements();

// Export UMeshComponent::execPrestreamTextures(FFrame&, void* const)
native final function PrestreamTextures(float Seconds, bool bPrioritizeCharacterTextures, optional int CinematicTextureGroups)
{
    CinematicTextureGroups = 0;                    
}

function MaterialInstanceConstant CreateAndSetMaterialInstanceConstant(int ElementIndex)
{
    local MaterialInstanceConstant Instance;

    Instance = new (self) Class'MaterialInstanceConstant';
    Instance.SetParent(GetMaterial(ElementIndex));
    SetMaterial(ElementIndex, Instance);
    return Instance;
}

function MaterialInstanceTimeVarying CreateAndSetMaterialInstanceTimeVarying(int ElementIndex)
{
    local MaterialInstanceTimeVarying Instance;

    Instance = new (self) Class'MaterialInstanceTimeVarying';
    Instance.SetParent(GetMaterial(ElementIndex));
    SetMaterial(ElementIndex, Instance);
    return Instance;
}

defaultproperties
{
    ReplacementPrimitive=none
    bUseAsOccluder=true
    CastShadow=true
    bAcceptsLights=true
}