/*******************************************************************************
 * ReachSpec generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class ReachSpec extends Object
    native;

const BLOCKEDPATHCOST = 10000000;

var native const editconst transient Pointer NavOctreeObject;
var int Distance;
var Vector Direction;
/** navigationpoint at start of this path */
var() const editconst NavigationPoint Start;
var() const editconst ActorReference End;
var() const editconst int CollisionRadius;
var() const editconst int CollisionHeight;
var bool bManuallyForced;
var const editconst bool bAddToNavigationOctree;
/** If true, pawns moving along this path can cut corners transitioning between this reachspec and adjacent reachspecs */
var() bool bCanCutCorners;
/** whether AI should check for dynamic obstructions (Actors with bBlocksNavigation=true) when traversing this ReachSpec */
var() bool bCheckForObstructions;
var const bool bSkipPrune;
/** Reachspec has been disabled/blocked by kismet */
var() editconst bool bDisabled;
/** see EReachSpecFlags definition in UnPath.h */
var() const editconst int reachFlags;
var() const editconst int MaxLandingVelocity;
var byte bPruned;
var byte PathColorIndex;
var const array< class<ReachSpec> > PruneSpecList;
var Actor BlockedBy;

// Export UReachSpec::execCostFor(FFrame&, void* const)
native final function int CostFor(Pawn P);

// Export UReachSpec::execGetEnd(FFrame&, void* const)
native final function NavigationPoint GetEnd();

// Export UReachSpec::execGetDirection(FFrame&, void* const)
native final function Vector GetDirection();

function bool IsBlockedFor(Pawn P)
{
    return CostFor(P) >= 10000000;
}

function int GetCostFor(Pawn P)
{
    return CostFor(P);
}

defaultproperties
{
    bAddToNavigationOctree=true
    bCanCutCorners=true
    bCheckForObstructions=true
}