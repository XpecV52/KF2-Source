/*******************************************************************************
 * FluidInfluenceComponent generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class FluidInfluenceComponent extends PrimitiveComponent
    native(Fluid)
    editinlinenew
    hidecategories(Object,Collision,Lighting,Physics,PrimitiveComponent,Rendering)
    autoexpandcategories(FluidInfluenceComponent);

enum EInfluenceType
{
    Fluid_Flow,
    Fluid_Raindrops,
    Fluid_Wave,
    Fluid_Sphere,
    Fluid_MAX
};

/** Whether the effect is active and applying forces to the fluid. */
var() bool bActive;
/** Whether raindrops should fill the entire fluid (TRUE), or just in a circular area around the influenceactor (FALSE). */
var(FluidRaindrops) interp bool RaindropFillEntireFluid;
var transient bool bIsToggleTriggered;
/** If a specific FluidSurfaceActor is set, this influence won't automatically affect any other fluid and MaxDistance is ignored. */
var() FluidSurfaceActor FluidActor;
/** Type of fluid influence (a flow of waves, raindrops, or a single wave). */
var() FluidInfluenceComponent.EInfluenceType InfluenceType;
/** Maximum distance (from the fluid plane) from where this influence will affect a fluid. */
var() float MaxDistance;
/** Strength of the influencing force. */
var(FluidWave) interp float WaveStrength;
/** Wave frequency (can be 0 for a standing wave). */
var(FluidWave) interp float WaveFrequency;
/** Angular phase, in 0-360 degrees. */
var(FluidWave) interp float WavePhase;
/** Radius of the wave, in world space units. */
var(FluidWave) interp float WaveRadius;
/** Radius of the area where raindrops fall. */
var(FluidRaindrops) interp float RaindropAreaRadius;
/** Radius of each raindrop, in world space units. */
var(FluidRaindrops) interp float RaindropRadius;
/** Strength of each raindrop. */
var(FluidRaindrops) interp float RaindropStrength;
/** Number of raindrops per second. */
var(FluidRaindrops) interp float RaindropRate;
/** How fast the flow moves thru the fluid, in world space units per second. */
var(FluidFlow) interp float FlowSpeed;
/** Number of flow ripples generated on the fluid surface. */
var(FluidFlow) interp int FlowNumRipples;
/** How much each flow ripple should oscillate sideways while moving down that flow direction. */
var(FluidFlow) interp float FlowSideMotionRadius;
/** Radius of each flow wave, in world space units. */
var(FluidFlow) interp float FlowWaveRadius;
/** Strength of each wave ripple. */
var(FluidFlow) interp float FlowStrength;
/** Frequency of up/down and sideways motion of each ripple. */
var(FluidFlow) interp float FlowFrequency;
/** Outer radius of the 3D sphere. While inside this radius, the force will increase as it moves closer to the fluid plane. */
var(FluidSphere) interp float SphereOuterRadius;
/** Inner radius of the 3D sphere. While inside this radius, the force will decrease as it moves closer to the fluid plane. */
var(FluidSphere) interp float SphereInnerRadius;
/** Strength of the force applied by the sphere. */
var(FluidSphere) interp float SphereStrength;
var private native transient float CurrentAngle;
var private native transient float CurrentTimer;
var private native transient FluidSurfaceActor CurrentFluidActor;

defaultproperties
{
    bActive=true
    RaindropFillEntireFluid=true
    InfluenceType=EInfluenceType.Fluid_Wave
    MaxDistance=1000
    WaveStrength=40
    WaveFrequency=1
    WaveRadius=50
    RaindropAreaRadius=300
    RaindropRadius=10
    RaindropStrength=5
    RaindropRate=20
    FlowSpeed=100
    FlowNumRipples=10
    FlowSideMotionRadius=30
    FlowWaveRadius=50
    FlowStrength=20
    FlowFrequency=4
    SphereOuterRadius=100
    SphereInnerRadius=50
    SphereStrength=-40
    ReplacementPrimitive=none
    bTickInEditor=true
}