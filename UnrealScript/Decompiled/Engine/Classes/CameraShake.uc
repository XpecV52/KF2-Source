/*******************************************************************************
 * CameraShake generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class CameraShake extends Object
    native(Camera)
    editinlinenew;

enum EInitialOscillatorOffset
{
    EOO_OffsetRandom,
    EOO_OffsetZero,
    EOO_MAX
};

struct native FOscillator
{
    /** Defines oscillation of a single number. */
    var() float Amplitude;
    /** Defines oscillation of a single number. */
    var() float Frequency;
    /** Defines oscillation of a single number. */
    var() CameraShake.EInitialOscillatorOffset InitialOffset;

    structdefaultproperties
    {
        Amplitude=0
        Frequency=0
        InitialOffset=EInitialOscillatorOffset.EOO_OffsetRandom
    }
};

struct native ROscillator
{
    /** Defines rotator oscillation. */
    var() FOscillator Pitch;
    /** Defines rotator oscillation. */
    var() FOscillator Yaw;
    /** Defines rotator oscillation. */
    var() FOscillator Roll;

    structdefaultproperties
    {
        Pitch=(Amplitude=0,Frequency=0,InitialOffset=EInitialOscillatorOffset.EOO_OffsetRandom)
        Yaw=(Amplitude=0,Frequency=0,InitialOffset=EInitialOscillatorOffset.EOO_OffsetRandom)
        Roll=(Amplitude=0,Frequency=0,InitialOffset=EInitialOscillatorOffset.EOO_OffsetRandom)
    }
};

struct native VOscillator
{
    /** Defines vector oscillation. */
    var() FOscillator X;
    /** Defines vector oscillation. */
    var() FOscillator Y;
    /** Defines vector oscillation. */
    var() FOscillator Z;

    structdefaultproperties
    {
        X=(Amplitude=0,Frequency=0,InitialOffset=EInitialOscillatorOffset.EOO_OffsetRandom)
        Y=(Amplitude=0,Frequency=0,InitialOffset=EInitialOscillatorOffset.EOO_OffsetRandom)
        Z=(Amplitude=0,Frequency=0,InitialOffset=EInitialOscillatorOffset.EOO_OffsetRandom)
    }
};

/**  
 *TRUE to only allow a single instance of this shake to play at any given time. 
 *  Subsequents attempts to play this shake will simply restart the timer.
 */
var() bool bSingleInstance;
/**  
 *If TRUE, play a random snippet of the animation of length Duration.  Implies bLoop and bRandomStartTime = TRUE for the CameraAnim.
 * If FALSE, play the full anim once, non-looped.
 */
var(AnimShake) bool bRandomAnimSegment;
/** Duration in seconds of current screen shake. <0 means indefinite, 0 means no oscillation */
var(Oscillation) float OscillationDuration;
var(Oscillation) float OscillationBlendInTime<ClampMin=0.0>;
var(Oscillation) float OscillationBlendOutTime<ClampMin=0.0>;
/** Rotational oscillation */
var(Oscillation) ROscillator RotOscillation;
/** Positional oscillation */
var(Oscillation) VOscillator LocOscillation;
/** FOV oscillation */
var(Oscillation) FOscillator FOVOscillation;
/** Parameters for defining CameraAnim-driven camera shakes */
var(AnimShake) CameraAnim Anim;
/** Scalar defining how fast to play the anim. */
var(AnimShake) float AnimPlayRate<ClampMin=0.001>;
/** Scalar defining how "intense" to play the anim. */
var(AnimShake) float AnimScale<ClampMin=0.0>;
/** Linear blend-in time. */
var(AnimShake) float AnimBlendInTime<ClampMin=0.0>;
/** Linear blend-out time. */
var(AnimShake) float AnimBlendOutTime<ClampMin=0.0>;
/** When bRandomAnimSegment=true, this defines how long the anim should play. */
var(AnimShake) float RandomAnimSegmentDuration<ClampMin=0.0|EditCondition=bRandomAnimSegment>;

simulated function float GetRotOscillationMagnitude()
{
    local Vector V;

    V.X = RotOscillation.Pitch.Amplitude;
    V.Y = RotOscillation.Yaw.Amplitude;
    V.Z = RotOscillation.Roll.Amplitude;
    return VSize(V);
}

simulated function float GetLocOscillationMagnitude()
{
    local Vector V;

    V.X = LocOscillation.X.Amplitude;
    V.Y = LocOscillation.Y.Amplitude;
    V.Z = LocOscillation.Z.Amplitude;
    return VSize(V);
}

defaultproperties
{
    OscillationBlendInTime=0.1
    OscillationBlendOutTime=0.2
    AnimPlayRate=1
    AnimScale=1
    AnimBlendInTime=0.2
    AnimBlendOutTime=0.2
}