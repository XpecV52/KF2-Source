/*******************************************************************************
 * ApexClothingAsset generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class ApexClothingAsset extends ApexAsset
    native(Mesh)
    hidecategories(Object,Object);

struct native ClothingLodInfo
{
    /** Mapping of clothing submesh to material array */
    var() init const editfixedsize array<init int> LODMaterialMap;

    structdefaultproperties
    {
        LODMaterialMap=none
    }
};

/** Clothing Material Mapping for each graphical lod level */
var() const editfixedsize array<ClothingLodInfo> LodMaterialInfo;
var native Pointer MApexAsset;
/** Clothing material override. Used only when UseClothingAssetMaterial is checked in the skeletal mesh component. */
var() const editfixedsize array<MaterialInterface> Materials;
var const deprecated ApexGenericAsset ApexClothingLibrary;
/** if true use hardware clothing for simulation */
var() const bool bUseHardwareCloth;
/** if true, falls back to skinning clothing in software instead of using GPU skinning */
var() const bool bFallbackSkinning;
/** Designates the 'slowStart' flag; see APEX clothing documentation */
var() const bool bSlowStart;
/** Designates the 'recomputeNormals' flag; see APEX clothing documentation */
var() const bool bRecomputeNormals;
/** Slightly modifies gravity to avoid high frequency jittering due to variable time steps. */
var() const bool bAllowAdaptiveTargetFrequency;
/** If true, it resets the simulation after a teleport. */
var() const bool bResetAfterTeleport;
var() const bool bUseLocalSpaceSimulation;
var bool bHasUniqueAssetMaterialNames;
/** Whether to ignore the triggers when the cloth first settles into place */
var(Sound) bool IgnoreInitialTrigger;
/** Which UV channel is used for updating tangent space. */
var() const int UVChannelForTangentUpdate;
/** The maximimum distance blend time (see APEX clothing documentation) */
var() const float MaxDistanceBlendTime<ClampMin=0.0>;
/** The angle in degrees to consider the clothing simulation continuous. */
var() const float ContinuousRotationThreshold;
/** The distance to consider the clothing simulation continuous. */
var() const float ContinuousDistanceThreshold;
/** LodWeightMaxDistance (see APEX clothing documentation) */
var() const float LodWeightsMaxDistance;
/** LodWeightDistanceWeight (see APEX clothing documentation) */
var() const float LodWeightsDistanceWeight;
/** LodWeightBias (see APEX clothing documentation) */
var() const float LodWeightsBias;
/**  
 *If true, cloth is simulated in local space.
 *       Inertia effects are added based on inertiaScale (from the imported clothing asset) if 3.x simulation is used.
 *       This needs to be turned off for 2.8.x cloth (unless collisions are filtered correctly).
 */
var() const float LodWeightsBenefitsBias;
/** Sound cue to play when the clothing starts moving */
var() const float LODDecayTime<ClampMin=0.0>;
var(Sound) SoundCue SoundOnMove;
/** Sound cue to play when clothing is moving */
var(Sound) SoundCue SoundOnRest;
/** Sound cue to play when the clothing is settling down */
var(Sound) SoundCue SoundWhileMoving;
/** Speed above which the clothing is considered moving */
var(Sound) float SpeedThresholdOnMove;
/** Speed below which the clothing is considered at rest */
var(Sound) float SpeedThresholdOnRest;

defaultproperties
{
    bUseHardwareCloth=true
    bSlowStart=true
    bResetAfterTeleport=true
    MaxDistanceBlendTime=1
    ContinuousRotationThreshold=84
    ContinuousDistanceThreshold=50
    LodWeightsMaxDistance=10000
    LodWeightsDistanceWeight=1
    LODDecayTime=10
}