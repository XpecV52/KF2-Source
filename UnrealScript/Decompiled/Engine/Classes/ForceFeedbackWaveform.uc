/*******************************************************************************
 * ForceFeedbackWaveform generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class ForceFeedbackWaveform extends Object
    native
    editinlinenew;

enum EWaveformFunction
{
    WF_Constant,
    WF_LinearIncreasing,
    WF_LinearDecreasing,
    WF_Sin0to90,
    WF_Sin90to180,
    WF_Sin0to180,
    WF_Noise,
    WF_MAX
};

struct native WaveformSample
{
    /**  
     *Use a byte with a range of 0 to 100 to represent the percentage of
     *        "on". This cuts the data needed to store the waveforms in half.
     */
    var() byte LeftAmplitude;
    /**  
     *Use a byte with a range of 0 to 100 to represent the percentage of
     *        "on". This cuts the data needed to store the waveforms in half.
     */
    var() byte RightAmplitude;
    /**  
     *Use a byte with a range of 0 to 100 to represent the percentage of
     *        "on". This cuts the data needed to store the waveforms in half.//@HSL_BEGIN_XBOX

     */
    var() byte LeftTriggerAmplitude;
    /**  
     *Use a byte with a range of 0 to 100 to represent the percentage of
     *        "on". This cuts the data needed to store the waveforms in half.//@HSL_BEGIN_XBOX

     */
    var() byte RightTriggerAmplitude;
    /** For function generated samples, the type of function */
    var() ForceFeedbackWaveform.EWaveformFunction LeftFunction;
    /** For function generated samples, the type of function */
    var() ForceFeedbackWaveform.EWaveformFunction RightFunction;
    /** For function generated samples, the type of function */
    var() ForceFeedbackWaveform.EWaveformFunction LeftTriggerFunction;
    /** For function generated samples, the type of function */
    var() ForceFeedbackWaveform.EWaveformFunction RightTriggerFunction;
    /** The amount of time this sample plays */
    var() float Duration;

    structdefaultproperties
    {
        LeftAmplitude=0
        RightAmplitude=0
        LeftTriggerAmplitude=0
        RightTriggerAmplitude=0
        LeftFunction=EWaveformFunction.WF_Constant
        RightFunction=EWaveformFunction.WF_Constant
        LeftTriggerFunction=EWaveformFunction.WF_Constant
        RightTriggerFunction=EWaveformFunction.WF_Constant
        Duration=0
    }
};

/** Whether this waveform should be looping or not */
var() bool bIsLooping;
/** The list of samples that make up this waveform */
var() array<WaveformSample> Samples;
/** The distance at which the waveform starts to falloff in strength */
var() float WaveformFalloffStartDistance;
/** The distance at which the waveform is no longer felt */
var() float MaxWaveformDistance;
