/*******************************************************************************
 * ExponentialHeightFogComponent generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class ExponentialHeightFogComponent extends ActorComponent
    native(FogVolume)
    editinlinenew
    collapsecategories
    hidecategories(Object);

/** True if the fog is enabled. */
var() const bool bEnabled;
var const float FogHeight;
/** Global density factor. */
var() interp const float FogDensity;
/**  
 *Height density factor, controls how the density increases as height decreases.  
 * Smaller values make the visible transition larger.
 */
var() interp const float FogHeightFalloff;
/**  
 *Maximum opacity of the fog.  
 * A value of 1 means the fog can become fully opaque at a distance and replace scene color completely,
 * A value of 0 means the fog color will not be factored in at all.
 */
var() interp const float FogMaxOpacity;
/** Distance from the camera that the fog will start, in world units. */
var() interp const float StartDistance;
/**  
 *LightInscatteringColor is used in the direction of the dominant directional light, and OppositeLightColor is used in the opposite direction.
 * LightTerminatorAngle is the angle in degrees from the dominant directional light that an even amount of OppositeLightColor and LightInscatteringColor are used for the final fog color.
 * If there is no dominant directional light enabled, LightInscatteringColor will correspond to up in world space.
 */
var() interp const float LightTerminatorAngle;
/** Scales OppositeLightColor. */
var() interp const float OppositeLightBrightness;
/** Fog Color used for the opposite direction from the dominant directional light. */
var() interp const Color OppositeLightColor;
/** Scales LightInscatteringColor. */
var() interp const float LightInscatteringBrightness;
/** Fog Color used for the direction of the dominant directional light. */
var() interp const Color LightInscatteringColor;

// Export UExponentialHeightFogComponent::execSetEnabled(FFrame&, void* const)
native final function SetEnabled(bool bSetEnabled);

defaultproperties
{
    bEnabled=true
    FogDensity=0.02
    FogHeightFalloff=0.2
    FogMaxOpacity=1
    LightTerminatorAngle=45
    OppositeLightBrightness=0.2
    OppositeLightColor=(B=255,G=208,R=177,A=0)
    LightInscatteringBrightness=1
    LightInscatteringColor=(B=41,G=212,R=245,A=0)
}