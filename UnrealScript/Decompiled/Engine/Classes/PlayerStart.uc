/*******************************************************************************
 * PlayerStart generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class PlayerStart extends NavigationPoint
    native
    placeable
    hidecategories(Navigation,Lighting,LightColor,Force,Collision)
    classgroup(Common);

var() bool bEnabled;
/** Team specific player start, 255 for any team */
var() bool bPrimaryStart;
var bool bBestStart;
var() int TeamIndex;
var int Score;
var int SelectionIndex;

simulated function OnToggle(SeqAct_Toggle Action)
{
    if(Action.InputLinks[0].bHasImpulse)
    {
        bEnabled = true;        
    }
    else
    {
        if(Action.InputLinks[1].bHasImpulse)
        {
            bEnabled = false;            
        }
        else
        {
            if(Action.InputLinks[2].bHasImpulse)
            {
                bEnabled = !bEnabled;
            }
        }
    }
}

simulated event PostRenderFor(PlayerController PC, Canvas Canvas, Vector CameraPosition, Vector CameraDir)
{
    local float NameXL, TextYL, YL, XL, textscale;

    local Vector ScreenLoc, ViewLoc;
    local Rotator ViewRot;
    local string ScreenName;
    local FontRenderInfo FontInfo;

    PC.GetPlayerViewPoint(ViewLoc, ViewRot);
    if((vector(ViewRot) Dot (Location - ViewLoc)) < 0.5)
    {
        return;
    }
    ScreenLoc = Canvas.Project(Location);
    if((((ScreenLoc.X < float(0)) || ScreenLoc.X >= Canvas.ClipX) || ScreenLoc.Y < float(0)) || ScreenLoc.Y >= Canvas.ClipY)
    {
        return;
    }
    ScreenName = (("(" $ string(SelectionIndex)) $ ")") @ string(Score);
    Canvas.StrLen(ScreenName, NameXL, TextYL);
    XL = FMax(XL, NameXL);
    YL += TextYL;
    textscale = 1;
    if(bBestStart)
    {
        Canvas.DrawColor = Class'HUD'.default.GreenColor;
        textscale = 4;        
    }
    else
    {
        if(float(Score) == 1E+07)
        {
            Canvas.DrawColor = Class'HUD'.default.WhiteColor;
            Canvas.DrawColor.B = 0;            
        }
        else
        {
            if(float(Score) == 0)
            {
                Canvas.DrawColor.R = 200;
                Canvas.DrawColor.G = 50;
                Canvas.DrawColor.B = 255;
                textscale = 0.5;                
            }
            else
            {
                Canvas.DrawColor = Class'HUD'.default.RedColor;
            }
        }
    }
    Canvas.SetPos(ScreenLoc.X - (0.5 * NameXL), ScreenLoc.Y - (1.7 * YL));
    FontInfo.bClipText = true;
    Canvas.DrawText(ScreenName, true, textscale, textscale, FontInfo);
}

defaultproperties
{
    bEnabled=true
    bPrimaryStart=true
    begin object name=CollisionCylinder class=CylinderComponent
        CollisionHeight=80
        CollisionRadius=40
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__PlayerStart.CollisionCylinder'
    CylinderComponent=CollisionCylinder
    begin object name=Sprite class=SpriteComponent
        Sprite=Texture2D'EditorResources.S_Player'
        SpriteCategoryName=PlayerStart
        ReplacementPrimitive=none
    object end
    // Reference: SpriteComponent'Default__PlayerStart.Sprite'
    GoodSprite=Sprite
    begin object name=Sprite2 class=SpriteComponent
        ReplacementPrimitive=none
    object end
    // Reference: SpriteComponent'Default__PlayerStart.Sprite2'
    BadSprite=Sprite2
    begin object name=Sprite class=SpriteComponent
        Sprite=Texture2D'EditorResources.S_Player'
        SpriteCategoryName=PlayerStart
        ReplacementPrimitive=none
    object end
    // Reference: SpriteComponent'Default__PlayerStart.Sprite'
    Components(0)=Sprite
    begin object name=Sprite2 class=SpriteComponent
        ReplacementPrimitive=none
    object end
    // Reference: SpriteComponent'Default__PlayerStart.Sprite2'
    Components(1)=Sprite2
    begin object name=Arrow class=ArrowComponent
        ReplacementPrimitive=none
    object end
    // Reference: ArrowComponent'Default__PlayerStart.Arrow'
    Components(2)=Arrow
    begin object name=CollisionCylinder class=CylinderComponent
        CollisionHeight=80
        CollisionRadius=40
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__PlayerStart.CollisionCylinder'
    Components(3)=CollisionCylinder
    begin object name=PathRenderer class=PathRenderingComponent
        ReplacementPrimitive=none
    object end
    // Reference: PathRenderingComponent'Default__PlayerStart.PathRenderer'
    Components(4)=PathRenderer
    bCollideWhenPlacing=false
    bEdShouldSnap=true
    begin object name=CollisionCylinder class=CylinderComponent
        CollisionHeight=80
        CollisionRadius=40
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__PlayerStart.CollisionCylinder'
    CollisionComponent=CollisionCylinder
}