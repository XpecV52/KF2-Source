/*******************************************************************************
 * WorldAttractor generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class WorldAttractor extends Actor
    native(Physics)
    placeable
    hidecategories(Navigation,Lighting,LightColor,Force);

enum EWorldAttractorFalloffType
{
    FOFF_Constant,
    FOFF_Linear,
    FOFF_Exponent,
    FOFF_MAX
};

struct native WorldAttractorData
{
    var bool bEnabled;
    var Vector Location;
    var WorldAttractor.EWorldAttractorFalloffType FalloffType;
    var float FalloffExponent;
    var float Range;
    var float Strength;

    structdefaultproperties
    {
        bEnabled=false
        Location=(X=0,Y=0,Z=0)
        FalloffType=EWorldAttractorFalloffType.FOFF_Constant
        FalloffExponent=0
        Range=0
        Strength=0
    }
};

/** TRUE if this attractor has any effect. */
var() bool bEnabled;
/** The duration in seconds to loop over the values in the distributions below. */
var() float LoopDuration;
var float CurrentTime;
/**  
 *Type of falloff.
 * 
 *  FOFF_Constant - Falloff is constant so just use the strength for the whole range.
 *  FOFF_Linear - Linear falloff over the range.
 *  FOFF_ExponentExponential falloff over the range.
 */
var() WorldAttractor.EWorldAttractorFalloffType FalloffType;
/** Optional falloff exponent for FOFF_Exponent type. */
var() interp MatineeRawDistributionFloat FalloffExponent;
/** Range of the attractor. */
var() interp MatineeRawDistributionFloat Range;
/** Strength of the attraction over time. */
var() interp MatineeRawDistributionFloat Strength;
/** Radius bounding the attraction point for use with collisions. */
var() interp float CollisionRadius;
/**  
 *Drag coefficient, a value of 1.0f means no drag, a value > 1.0f means accelerate.
 *  This value is multiplied with the DragCoefficient value in the attractor to get the
 *  resultant drag coefficient and generate the drag force.
 */
var() interp MatineeRawDistributionFloat DragCoefficient;
/** Apply the drag when the particle is within this radius. */
var() interp MatineeRawDistributionFloat DragRadius;

function OnSetWorldAttractorParam(SeqAct_SetWorldAttractorParam Action)
{
    if(Action.bEnabledField)
    {
        bEnabled = Action.bEnabled;
    }
    if(Action.bFalloffTypeField)
    {
        FalloffType = Action.FalloffType;
    }
    if(Action.bRangeField)
    {
        Range = Action.Range;
    }
    if(Action.bStrengthField)
    {
        Strength = Action.Strength;
    }
}

defaultproperties
{
    bEnabled=true
    FalloffExponent=(MatineeValue=0,bInMatinee=false,Distribution=DistributionFloatConstant'Default__WorldAttractor.DistributionFalloffExponent',Type=0,Op=0,LookupTableNumElements=0,LookupTableChunkSize=0,LookupTable=none,LookupTableTimeScale=0,LookupTableStartTime=0)
    Range=(MatineeValue=0,bInMatinee=false,Distribution=DistributionFloatConstant'Default__WorldAttractor.DistributionRange',Type=0,Op=0,LookupTableNumElements=0,LookupTableChunkSize=0,LookupTable=none,LookupTableTimeScale=0,LookupTableStartTime=0)
    Strength=(MatineeValue=0,bInMatinee=false,Distribution=DistributionFloatConstant'Default__WorldAttractor.DistributionStrength',Type=0,Op=0,LookupTableNumElements=0,LookupTableChunkSize=0,LookupTable=none,LookupTableTimeScale=0,LookupTableStartTime=0)
    DragCoefficient=(MatineeValue=0,bInMatinee=false,Distribution=DistributionFloatConstant'Default__WorldAttractor.DistributionDragCoefficient',Type=0,Op=0,LookupTableNumElements=0,LookupTableChunkSize=0,LookupTable=none,LookupTableTimeScale=0,LookupTableStartTime=0)
    DragRadius=(MatineeValue=0,bInMatinee=false,Distribution=DistributionFloatConstant'Default__WorldAttractor.DistributionDragRadius',Type=0,Op=0,LookupTableNumElements=0,LookupTableChunkSize=0,LookupTable=none,LookupTableTimeScale=0,LookupTableStartTime=0)
    begin object name=Sprite class=SpriteComponent
        Sprite=Texture2D'EditorResources.S_Pickup'
        ReplacementPrimitive=none
        HiddenGame=true
        AlwaysLoadOnClient=false
        AlwaysLoadOnServer=false
    object end
    // Reference: SpriteComponent'Default__WorldAttractor.Sprite'
    Components(0)=Sprite
    CollisionType=ECollisionType.COLLIDE_CustomDefault
}