/*******************************************************************************
 * SeqAct_CameraShake generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class SeqAct_CameraShake extends SequenceAction
    native(Sequence)
    hidecategories(Object);

/** Parameters that define the shake. */
var() protectedwrite export editinline CameraShake Shake;
/** For easy overall scaling without tweaking the individual parameters. For oscillating shakes, scales amplitude only. */
var() protectedwrite float ShakeScale;
/** Whether or not to do do controller vibration.  Code shakes only for now. */
var() protectedwrite bool bDoControllerVibration;
/** A radial shake shakes the camera for all nearby players. If FALSE, shake only the cameras of specified players. */
var() protectedwrite bool bRadialShake;
/** If true, camera shake is rotated to be relative to the shake epicenter before application (e.g. a shake that moves -X will always move away from the shake's origin).  Only valid for Radial shakes.  Overrides PlaySpace. */
var() protectedwrite bool bOrientTowardRadialEpicenter<EditCondition=bRadialShake>;
/** Radius inside which the shake is full magnitude.  For radial shakes only. */
var() protectedwrite float RadialShake_InnerRadius<ClampMin=0.0|EditCondition=bRadialShake>;
/** Radius at which the shake reaches 0 magnitude.  For radial shakes only. */
var() protectedwrite float RadialShake_OuterRadius<ClampMin=0.0|EditCondition=bRadialShake>;
/** Falloff exponent, defines falloff between inner and outer radii.  For CST_Radial shakes only. */
var() protectedwrite float RadialShake_Falloff<ClampMin=0.0|EditCondition=bRadialShake>;
/** Defined how to orient the shaking offsets before applying to the camera.  CameraLocal is normal.  Is UserDefined, rotation of the LocationActor is used.  Ignored for Radial Shakes */
var() protectedwrite Camera.ECameraAnimPlaySpace PlaySpace;
var Actor LocationActor;

static event int GetObjClassVersion()
{
    return super(SequenceObject).GetObjClassVersion() + 1;
}

defaultproperties
{
    begin object name=Shake0 class=CameraShake
        OscillationDuration=1
        RotOscillation=(Pitch=(Amplitude=150,Frequency=40),Yaw=(Amplitude=75,Frequency=30),Roll=(Amplitude=150,Frequency=60))
    object end
    // Reference: CameraShake'Default__SeqAct_CameraShake.Shake0'
    Shake=Shake0
    ShakeScale=1
    bDoControllerVibration=true
    RadialShake_InnerRadius=128
    RadialShake_OuterRadius=512
    RadialShake_Falloff=2
    InputLinks(0)=(LinkDesc="Start",bHasImpulse=false,QueuedActivations=0,bDisabled=false,bDisabledPIE=false,LinkedOp=none,DrawY=0,bHidden=false,ActivateDelay=0,bMoving=false,bClampedMax=false,bClampedMin=false,OverrideDelta=0)
    InputLinks(1)=(LinkDesc="Stop",bHasImpulse=false,QueuedActivations=0,bDisabled=false,bDisabledPIE=false,LinkedOp=none,DrawY=0,bHidden=false,ActivateDelay=0,bMoving=false,bClampedMax=false,bClampedMin=false,OverrideDelta=0)
    VariableLinks(0)=(ExpectedType=Class'SeqVar_Object',LinkedVariables=none,LinkDesc="Target",LinkVar=None,PropertyName=Targets,bWriteable=false,bSequenceNeverReadsOnlyWritesToThisVar=false,bModifiesLinkedObject=false,bHidden=false,MinVars=1,MaxVars=255,DrawX=0,CachedProperty=none,bAllowAnyType=false,bMoving=false,bClampedMax=false,bClampedMin=false,OverrideDelta=0)
    VariableLinks(1)=(ExpectedType=Class'SeqVar_Object',LinkedVariables=none,LinkDesc="Location",LinkVar=None,PropertyName=LocationActor,bWriteable=false,bSequenceNeverReadsOnlyWritesToThisVar=false,bModifiesLinkedObject=false,bHidden=false,MinVars=1,MaxVars=255,DrawX=0,CachedProperty=none,bAllowAnyType=false,bMoving=false,bClampedMax=false,bClampedMin=false,OverrideDelta=0)
    ObjName="Camera Shake"
    ObjCategory="Camera"
}