/*******************************************************************************
 * ParticleModuleBeamNoise generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class ParticleModuleBeamNoise extends ParticleModuleBeamBase
    native(Particle)
    editinlinenew
    hidecategories(Object,Object,Object);

/** Is low frequency noise enabled. */
var(LowFreq) bool bLowFreq_Enabled;
/**  
 *If TRUE,  the NoiseRangeScale will be grabbed based on the emitter time.
 *       If FALSE, the NoiseRangeScale will be grabbed based on the particle time.
 */
var(LowFreq) bool bNRScaleEmitterTime;
/** Whether the noise movement should be smooth or 'jerky'. */
var(LowFreq) bool bSmooth;
var const bool bNoiseLock;
/** Whether the noise points should be oscillate. */
var(LowFreq) bool bOscillate;
/** If TRUE, calculate tangents at each noise point. */
var(LowFreq) bool bUseNoiseTangents;
/**  
 *Whether to apply noise to the target point (or end of line in distance mode...)
 *       If TRUE, the beam could potentially 'leave' the target...
 */
var(LowFreq) bool bTargetNoise;
/** If TRUE, apply the noise scale to the beam. */
var(LowFreq) bool bApplyNoiseScale;
/** The frequency of noise points. */
var(LowFreq) int Frequency;
/**  
 *If not 0, then the frequency will select a random value in the range
 *               [Frequency_LowRange..Frequency]
 */
var(LowFreq) int Frequency_LowRange;
/** The noise point ranges. */
var(LowFreq) RawDistributionVector NoiseRange;
/** A scale factor that will be applied to the noise range. */
var(LowFreq) RawDistributionFloat NoiseRangeScale;
/** The speed with which to move each noise point. */
var(LowFreq) RawDistributionVector NoiseSpeed;
/** Default target-point information to use if the beam method is endpoint. */
var(LowFreq) float NoiseLockRadius;
/** How long the  noise points should be locked - 0.0 indicates forever. */
var(LowFreq) float NoiseLockTime;
/** The tension to apply to the tessellated noise line. */
var(LowFreq) float NoiseTension;
/** The strength of noise tangents, if enabled. */
var(LowFreq) RawDistributionFloat NoiseTangentStrength;
/** The amount of tessellation between noise points. */
var(LowFreq) int NoiseTessellation;
/**  
 *The distance at which to deposit noise points.
 *       If 0.0, then use the static frequency value.
 *       If not, distribute noise points at the given distance, up to the static Frequency value.
 *       At that point, evenly distribute them along the beam.
 */
var(LowFreq) float FrequencyDistance;
/**  
 *The scale factor to apply to noise range.
 *       The lookup value is determined by dividing the number of noise points present by the 
 *       maximum number of noise points (Frequency).
 */
var(LowFreq) RawDistributionFloat NoiseScale;

defaultproperties
{
    NoiseRange=Distribution=DistributionVectorConstant'Default__ParticleModuleBeamNoise.DistributionNoiseRange',Type=0,Op=1,LookupTableNumElements=1,LookupTableChunkSize=3,LookupTable=/* Array type was not detected. */,
/* Exception thrown while deserializing NoiseRange
System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
   at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)
   at UELib.Core.UDefaultProperty.DeserializeTagUE3()
   at UELib.Core.UDefaultProperty.Deserialize()
   at UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) */
    NoiseRangeScale=Distribution=DistributionFloatConstant'Default__ParticleModuleBeamNoise.DistributionNoiseRangeScale',Type=0,Op=1,LookupTableNumElements=1,LookupTableChunkSize=1,LookupTable=/* Array type was not detected. */,
/* Exception thrown while deserializing NoiseRangeScale
System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
   at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)
   at UELib.Core.UDefaultProperty.DeserializeTagUE3()
   at UELib.Core.UDefaultProperty.Deserialize()
   at UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) */
    NoiseSpeed=Distribution=DistributionVectorConstant'Default__ParticleModuleBeamNoise.DistributionNoiseSpeed',Type=0,Op=1,LookupTableNumElements=1,LookupTableChunkSize=3,LookupTable=/* Array type was not detected. */,
/* Exception thrown while deserializing NoiseSpeed
System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
   at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)
   at UELib.Core.UDefaultProperty.DeserializeTagUE3()
   at UELib.Core.UDefaultProperty.Deserialize()
   at UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) */
    NoiseLockRadius=1
    NoiseTension=0.5
    NoiseTangentStrength=Distribution=DistributionFloatConstant'Default__ParticleModuleBeamNoise.DistributionNoiseTangentStrength',Type=0,Op=1,LookupTableNumElements=1,LookupTableChunkSize=1,LookupTable=/* Array type was not detected. */,
/* Exception thrown while deserializing NoiseTangentStrength
System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
   at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)
   at UELib.Core.UDefaultProperty.DeserializeTagUE3()
   at UELib.Core.UDefaultProperty.Deserialize()
   at UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) */
    NoiseTessellation=1
    NoiseScale=Distribution=DistributionFloatConstantCurve'Default__ParticleModuleBeamNoise.DistributionNoiseScale',Type=0,Op=1,LookupTableNumElements=1,LookupTableChunkSize=1,LookupTable=/* Array type was not detected. */,0=/* Unknown default property type! */,
/* Exception thrown while deserializing NoiseScale
System.ArgumentException: Requested value '3rd' was not found.
   at System.Enum.TryParseEnum(Type enumType, String value, Boolean ignoreCase, EnumResult& parseResult)
   at System.Enum.Parse(Type enumType, String value, Boolean ignoreCase)
   at UELib.Core.UDefaultProperty.DeserializeTagUE3()
   at UELib.Core.UDefaultProperty.Deserialize()
   at UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) */
}