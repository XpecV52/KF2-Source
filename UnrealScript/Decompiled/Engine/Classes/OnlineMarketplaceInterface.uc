/*******************************************************************************
 * OnlineMarketplaceInterface generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
interface OnlineMarketplaceInterface extends Interface
    abstract;

function bool ReadAvailableProducts(byte LocalUserNum, string ParentId, optional OnlineSubsystem.EMediaItemType ParentMediaType, optional OnlineSubsystem.EMediaItemType ChildMediaType, optional OnlineSubsystem.ECatalogSortOrder SortOrder)
{
    ParentMediaType = 1;
    ChildMediaType = 1;
    SortOrder = 0;
}

delegate OnReadAvailableProductsComplete(OnlineSubsystem.EMediaItemType MediaType);

function AddReadAvailableProductsCompleteDelegate(byte LocalUserNum, delegate<OnReadAvailableProductsComplete> ReadAvailableProductsCompleteDelegate);

function ClearReadAvailableProductsCompleteDelegate(byte LocalUserNum, delegate<OnReadAvailableProductsComplete> ReadAvailableProductsCompleteDelegate);

function OnlineSubsystem.EOnlineEnumerationReadState GetAvailableProducts(byte LocalUserNum, OnlineSubsystem.EMediaItemType MediaType, out array<MarketplaceProductDetails> AvailableProducts);

function ResetAvailableProducts(byte LocalUserNum, OnlineSubsystem.EMediaItemType MediaType);

function bool ReadAdditionalDetailsForProducts(byte LocalUserNum, OnlineSubsystem.EMediaItemType MediaType);

delegate OnReadAdditionalProductDetailsComplete(OnlineSubsystem.EMediaItemType MediaType);

function AddReadAdditionalProductDetailsCompleteDelegate(byte LocalUserNum, delegate<OnReadAdditionalProductDetailsComplete> ReadAdditionalProductDetailsCompleteDelegate);

function ClearReadAdditionalProductDetailsCompleteDelegate(byte LocalUserNum, delegate<OnReadAdditionalProductDetailsComplete> ReadAdditionalProductDetailsCompleteDelegate);

function bool ReadInventoryItems(byte LocalUserNum, optional OnlineSubsystem.EMediaItemType MediaType)
{
    MediaType = 4;
}

delegate OnReadInventoryItemsComplete(OnlineSubsystem.EMediaItemType MediaType);

function AddReadInventoryItemsCompleteDelegate(byte LocalUserNum, delegate<OnReadInventoryItemsComplete> ReadInventoryItemsCompleteDelegate);

function ClearReadInventoryItemsCompleteDelegate(byte LocalUserNum, delegate<OnReadInventoryItemsComplete> ReadInventoryItemsCompleteDelegate);

function OnlineSubsystem.EOnlineEnumerationReadState GetInventoryItems(byte LocalUserNum, OnlineSubsystem.EMediaItemType MediaType, out array<MarketplaceInventoryItem> InventoryItems);

function ResetInventoryItems(byte LocalUserNum, OnlineSubsystem.EMediaItemType MediaType);

function bool ConsumeInventoryItem(byte LocalUserNum, string ProductID, int Quantity, string TransactionId);

delegate OnConsumeInventoryItemComplete(string ProductID, bool bDidSucceed, int NewQuantity);

function AddConsumeInventoryItemCompleteDelegate(byte LocalUserNum, delegate<OnConsumeInventoryItemComplete> ConsumeInventoryItemCompleteDelegate);

function ClearConsumeInventoryItemCompleteDelegate(byte LocalUserNum, delegate<OnConsumeInventoryItemComplete> ConsumeInventoryItemCompleteDelegate);

delegate OnMarketplaceItemPurchased();

function AddMarketplaceItemPurchasedDelegate(delegate<OnMarketplaceItemPurchased> InDelegate);

function ClearMarketplaceItemPurchasedDelegate(delegate<OnMarketplaceItemPurchased> InDelegate);
