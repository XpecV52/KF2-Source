/*******************************************************************************
 * LevelStreaming generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class LevelStreaming extends Object
    abstract
    native
    editinlinenew;

/** Name of the level package name used for loading. */
var() const editconst name PackageName;
var const transient Level LoadedLevel;
/** Offset applied to actors after loading. */
var() const Vector Offset;
/** Transform applied to actors after loading. */
var() const Matrix LevelTransform;
var const Vector OldOffset;
var const transient bool bIsVisible;
var const transient bool bHasLoadRequestPending;
var const transient bool bHasUnloadRequestPending;
/** Whether this level should be visible in the Editor */
var() editoronly const bool bShouldBeVisibleInEditor;
var const bool bBoundingBoxVisible;
/** Whether this level is locked; that is, its actors are read-only. */
var() const bool bLocked;
/** Whether this level is fully static - if it is, then assumptions can be made about it, ie it doesn't need to be reloaded since nothing could have changed */
var() const bool bIsFullyStatic;
var const transient bool bShouldBeLoaded;
var const transient bool bShouldBeVisible;
var transient bool bShouldBlockOnLoad;
/** If TRUE, will be drawn on the 'level streaming status' map (STAT LEVELMAP console command) */
var() bool bDrawOnLevelStatusMap;
var const transient bool bIsRequestingUnloadAndRemoval;
/** The level's color; used to make the level easily identifiable in the level browser, for actor level visulization, etc. */
var() const Color DrawColor;
/** The level streaming volumes bound to this level. */
var() const editconst array<editconst LevelStreamingVolume> EditorStreamingVolumes;
/** Cooldown time in seconds between volume-based unload requests.  Used in preventing spurious unload requests. */
var() float MinTimeBetweenVolumeUnloadRequests;
var const transient float LastVolumeUnloadRequestTime;
var editoronly array<editoronly string> Keywords;
/** The grid volume bound to this level, if any */
var() const editconst LevelGridVolume EditorGridVolume;
/** Row, column and depth of this streaming level in a streaming grid network */
var() const editconst int GridPosition[3];

defaultproperties
{
    bShouldBeVisibleInEditor=true
    bDrawOnLevelStatusMap=true
    DrawColor=(B=255,G=255,R=255,A=255)
    MinTimeBetweenVolumeUnloadRequests=2
}