/*******************************************************************************
 * InterpTrackVisibility generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class InterpTrackVisibility extends InterpTrack
    native(Interpolation)
    collapsecategories
    hidecategories(Object);

enum EVisibilityTrackAction
{
    EVTA_Hide,
    EVTA_Show,
    EVTA_Toggle,
    EVTA_MAX
};

enum EVisibilityTrackCondition
{
    EVTC_Always,
    EVTC_GoreEnabled,
    EVTC_GoreDisabled,
    EVTC_MAX
};

struct native VisibilityTrackKey
{
    var float Time;
    /** Information for one toggle in the track. */
    var() InterpTrackVisibility.EVisibilityTrackAction Action;
    var InterpTrackVisibility.EVisibilityTrackCondition ActiveCondition;

    structdefaultproperties
    {
        Time=0
        Action=EVisibilityTrackAction.EVTA_Hide
        ActiveCondition=EVisibilityTrackCondition.EVTC_Always
    }
};

var array<VisibilityTrackKey> VisibilityTrack;
/** If events should be fired when passed playing the sequence forwards. */
var() bool bFireEventsWhenForwards;
/** If events should be fired when passed playing the sequence backwards. */
var() bool bFireEventsWhenBackwards;
/** If true, events on this track are fired even when jumping forwads through a sequence - for example, skipping a cinematic. */
var() bool bFireEventsWhenJumpingForwards;

defaultproperties
{
    bFireEventsWhenForwards=true
    bFireEventsWhenBackwards=true
    bFireEventsWhenJumpingForwards=true
    TrackInstClass=Class'InterpTrackInstVisibility'
    TrackTitle="Visibility"
}