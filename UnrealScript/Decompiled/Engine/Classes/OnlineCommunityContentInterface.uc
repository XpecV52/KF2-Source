/*******************************************************************************
 * OnlineCommunityContentInterface generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
interface OnlineCommunityContentInterface extends Interface
    abstract;

function bool Init();

function Exit();

function bool ReadContentList(byte PlayerNum, UniqueNetId NetId, optional string Path, optional int StartAt, optional int NumToRead)
{
    Path = "";
    StartAt = 0;
    NumToRead = 0;
}

delegate OnReadContentListComplete(bool bWasSuccessful, array<CommunityContentFile> ContentFiles);

function AddReadContentListCompleteDelegate(delegate<OnReadContentListComplete> ReadContentListCompleteDelegate);

function ClearReadContentListCompleteDelegate(delegate<OnReadContentListComplete> ReadContentListCompleteDelegate);

function bool GetContentList(byte PlayerNum, out array<CommunityContentFile> ContentFiles);

function bool ReadFriendsContentList(byte PlayerNum, const out array<OnlineFriend> Friends, optional int StartAt, optional int NumToRead)
{
    StartAt = 0;
    NumToRead = -1;
}

delegate OnReadFriendsContentListComplete(bool bWasSuccessful);

function AddReadFriendsContentListCompleteDelegate(delegate<OnReadFriendsContentListComplete> ReadFriendsContentListCompleteDelegate);

function ClearReadFriendsContentListCompleteDelegate(delegate<OnReadFriendsContentListComplete> ReadFriendsContentListCompleteDelegate);

function bool GetFriendsContentList(byte PlayerNum, const out OnlineFriend Friend, out array<CommunityContentFile> ContentFiles);

function bool UploadContent(byte PlayerNum, const out array<byte> Payload, const out CommunityContentMetadata MetaData);

delegate OnUploadContentComplete(bool bWasSuccessful, CommunityContentFile UploadedFile);

function AddUploadContentCompleteDelegate(delegate<OnUploadContentComplete> UploadContentCompleteDelegate);

function ClearUploadContentCompleteDelegate(delegate<OnUploadContentComplete> UploadContentCompleteDelegate);

function bool DownloadContent(byte PlayerNum, const out CommunityContentFile FileToDownload);

delegate OnDownloadContentComplete(bool bWasSuccessful, CommunityContentFile FileDownloaded, array<byte> Payload);

function AddDownloadContentCompleteDelegate(delegate<OnDownloadContentComplete> DownloadContentCompleteDelegate);

function ClearDownloadContentCompleteDelegate(delegate<OnDownloadContentComplete> DownloadContentCompleteDelegate);

function bool GetContentPayload(byte PlayerNum, const out CommunityContentFile FileDownloaded);

delegate OnGetContentPayloadComplete(bool bWasSuccessful, CommunityContentFile FileDownloaded, const out array<byte> Payload);

function AddGetContentPayloadCompleteDelegate(delegate<OnGetContentPayloadComplete> GetContentPayloadCompleteDelegate);

function ClearGetContentPayloadCompleteDelegate(delegate<OnGetContentPayloadComplete> GetContentPayloadCompleteDelegate);

function RateContent(byte PlayerNum, const out CommunityContentFile FileToRate, int NewRating);
