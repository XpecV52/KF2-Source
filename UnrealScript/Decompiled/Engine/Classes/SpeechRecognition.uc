/*******************************************************************************
 * SpeechRecognition generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class SpeechRecognition extends Object
    native
    collapsecategories
    hidecategories(Object);

struct native RecognisableWord
{
    var() int Id;
    /** This is the reference word, which is returned upon recognition. e.g. "Loque".  Does not need to be unique. */
    var() string ReferenceWord;
    /** This is the word string that is passed into the recognition. e.g. "Loke" */
    var() string PhoneticWord;

    structdefaultproperties
    {
        Id=0
        ReferenceWord=""
        PhoneticWord=""
    }
};

struct native RecogVocabulary
{
    /** Arrays of words that can be recognised - note that words need an ID unique among the contents of all three arrays */
    var() array<RecognisableWord> WhoDictionary;
    /** Arrays of words that can be recognised - note that words need an ID unique among the contents of all three arrays */
    var() array<RecognisableWord> WhatDictionary;
    /** Arrays of words that can be recognised - note that words need an ID unique among the contents of all three arrays */
    var() array<RecognisableWord> WhereDictionary;
    var string VocabName;
    var array<byte> VocabData;
    var array<byte> WorkingVocabData;

    structdefaultproperties
    {
        WhoDictionary=none
        WhatDictionary=none
        WhereDictionary=none
        VocabName=""
        VocabData=none
        WorkingVocabData=none
    }
};

struct native RecogUserData
{
    var int ActiveVocabularies;
    var array<byte> UserData;

    structdefaultproperties
    {
        ActiveVocabularies=0
        UserData=none
    }
};

/** Use 3 letter code eg. INT, FRA, etc. */
var() string Language;
/** Values between 1 and 100. */
var() float ConfidenceThreshhold;
/** Array of vocabularies that can be swapped in and out */
var() array<RecogVocabulary> Vocabularies;
var array<byte> VoiceData;
var array<byte> WorkingVoiceData;
var array<byte> UserData;
var RecogUserData InstanceData[4];
var duplicatetransient transient bool bDirty;
var duplicatetransient transient bool bInitialised;
var duplicatetransient native const Pointer FnxVoiceData;

defaultproperties
{
    Language="INT"
    ConfidenceThreshhold=50
}