/*******************************************************************************
 * Trigger_LOS generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Trigger_LOS extends Trigger
    placeable
    hidecategories(Navigation);

var array<PlayerController> PCsWithLOS;

simulated event Tick(float DeltaTime)
{
    local array<SequenceEvent> losEvents;
    local SeqEvent_LOS Evt;
    local PlayerController Player;
    local int Idx;
    local Vector CameraLoc;
    local Rotator CameraRot;
    local float cameraDist;
    local array<int> ActivateIndices;

    if(FindEventsOfClass(Class'SeqEvent_LOS', losEvents))
    {
        foreach WorldInfo.AllControllers(Class'PlayerController', Player)
        {
            if(Player.Pawn != none)
            {
                Player.GetPlayerViewPoint(CameraLoc, CameraRot);
                cameraDist = PointDistToLine(Location, vector(CameraRot), CameraLoc);
                Idx = 0;
                J0xE6:

                if(Idx < losEvents.Length)
                {
                    Evt = SeqEvent_LOS(losEvents[Idx]);
                    if((((cameraDist <= Evt.ScreenCenterDistance) && VSize(Player.Pawn.Location - Location) <= Evt.TriggerDistance) && (Normal(Location - CameraLoc) Dot vector(CameraRot)) > 0) && !Evt.bCheckForObstructions || Player.LineOfSightTo(self, CameraLoc))
                    {
                        ActivateIndices[0] = 0;
                        if((PCsWithLOS.Find(Player == -1) && losEvents[Idx].CheckActivate(self, Player.Pawn, false, ActivateIndices))
                        {
                            PCsWithLOS.AddItem(Player;
                        }                        
                    }
                    else
                    {
                        if(PCsWithLOS.Find(Player != -1)
                        {
                            ActivateIndices[0] = 1;
                            if(losEvents[Idx].CheckActivate(self, Player.Pawn, false, ActivateIndices))
                            {
                                PCsWithLOS.RemoveItem(Player;
                            }
                        }
                    }
                    ++ Idx;
                    goto J0xE6;
                }
            }            
        }        
    }
}

defaultproperties
{
    begin object name=CollisionCylinder class=CylinderComponent
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__Trigger_LOS.CollisionCylinder'
    CylinderComponent=CollisionCylinder
    begin object name=Sprite class=SpriteComponent
        ReplacementPrimitive=none
    object end
    // Reference: SpriteComponent'Default__Trigger_LOS.Sprite'
    Components(0)=Sprite
    begin object name=CollisionCylinder class=CylinderComponent
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__Trigger_LOS.CollisionCylinder'
    Components(1)=CollisionCylinder
    begin object name=CollisionCylinder class=CylinderComponent
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__Trigger_LOS.CollisionCylinder'
    CollisionComponent=CollisionCylinder
    SupportedEvents(0)=class'SeqEvent_LOS'
}