/*******************************************************************************
 * BasicWebAdminAuth generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class BasicWebAdminAuth extends Object
    config(webadmin)
    implements(IWebAdminAuth);

var AccessControl AC;
var WorldInfo WorldInfo;
var array<BasicWebAdminUser> Users;
var config array<config string> RequireUsername;
var const localized string NoAccessControl;
var const localized string InvalidCreds;
var const localized string NoPassSet;

function Init(WorldInfo WI)
{
    local int I;

    WorldInfo = WI;
    AC = WorldInfo.Game.AccessControl;
    I = RequireUsername.Length - 1;
    J0x67:

    if(I >= 0)
    {
        if(Len(RequireUsername[I]) == 0)
        {
            RequireUsername.Remove(I, 1;
        }
        -- I;
        goto J0x67;
    }
}

function Cleanup()
{
    local BasicWebAdminUser User;

    foreach Users(User,)
    {
        User.Logout();        
    }    
    Users.Remove(0, Users.Length;
    WorldInfo = none;
    AC = none;
}

function IWebAdminUser authenticate(string UserName, string Password, string hashAlg, out string errorMsg)
{
    local BasicWebAdminUser User;

    if(AC == none)
    {
        LogInternal("No AccessControl instance.", 'WebAdminAuth');
        errorMsg = NoAccessControl;
        return none;
    }
    if((RequireUsername.Length > 0) && RequireUsername.Find(UserName == -1)
    {
        errorMsg = InvalidCreds;
        return none;
    }
    if(AC.ValidLogin(UserName, Password))
    {
        User = WorldInfo.Spawn(Class'BasicWebAdminUser');
        User.Init();
        User.setUsername(UserName);
        Users.AddItem(User;
        return (User);
    }
    errorMsg = InvalidCreds;
    if(Len(WorldInfo.Game.ConsoleCommand("get engine.accesscontrol adminpassword", false)) == 0)
    {        
        errorMsg @= NoPassSet;
    }
    return none;
}

function bool Logout(IWebAdminUser User)
{
    User.Logout();
    Users.RemoveItem(BasicWebAdminUser(bool(User));
    return true;
}

function bool validate(string UserName, string Password, string hashAlg, out string errorMsg)
{
    if((RequireUsername.Length > 0) && RequireUsername.Find(UserName == -1)
    {
        errorMsg = InvalidCreds;
        return false;
    }
    if(AC.ValidLogin(UserName, Password))
    {
        return true;
    }
    errorMsg = InvalidCreds;
    return false;
}

function bool validateUser(IWebAdminUser User, out string errorMsg)
{
    return true;
}

function bool supportHashAlgorithm(string hashAlg)
{
    return false;
}

defaultproperties
{
    NoAccessControl="No AccessControl instance."
    InvalidCreds="Invalid credentials."
    NoPassSet="No administrator password has been set for this server. Add an entry \"AdminPassword\" in the section \"[Engine.AccessControl]\" in the KFGame.ini configuration file."
}