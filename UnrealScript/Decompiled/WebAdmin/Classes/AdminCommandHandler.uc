/*******************************************************************************
 * AdminCommandHandler generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class AdminCommandHandler extends Info
    hidecategories(Navigation,Movement,Collision);

function bool execute(string Cmd, out string Result, PlayerController PC)
{
    local int I;
    local Admin adminuser;
    local string args;

    I = InStr(Cmd, " ");
    if(I != -1)
    {
        args = Mid(Cmd, I + 1);
        Cmd = Left(Cmd, I);
    }
    if(Cmd ~= "Admin")
    {
        I = InStr(args, " ");
        if(I != -1)
        {
            Cmd = Left(args, I);
            args = Mid(args, I + 1);            
        }
        else
        {
            Cmd = args;
            args = "";
        }
    }
    if((Cmd ~= "AdminChangeMap") || Cmd ~= "ChangeMap")
    {
        WorldInfo.ServerTravel(Cmd);
        return true;        
    }
    else
    {
        if(Cmd ~= "AdminChangeOption")
        {
            Result = "AdminChangeOption is not available";
            return true;            
        }
        else
        {
            if(Cmd ~= "AdminForceVoiceMute")
            {
                Result = MutePlayer(args, true, true);
                return true;                
            }
            else
            {
                if(Cmd ~= "AdminForceVoiceUnMute")
                {
                    Result = MutePlayer(args, false, true);
                    return true;                    
                }
                else
                {
                    if((Cmd ~= "AdminKick") || Cmd ~= "Kick")
                    {
                        WorldInfo.Game.ExileServerUsingKickBan();
                        WorldInfo.Game.AccessControl.Kick(args);
                        return true;                        
                    }
                    else
                    {
                        if((Cmd ~= "AdminKickBan") || Cmd ~= "KickBan")
                        {
                            WorldInfo.Game.ExileServerUsingKickBan();
                            WorldInfo.Game.AccessControl.KickBan(args);
                            return true;                            
                        }
                        else
                        {
                            if((Cmd ~= "AdminSessionBan") || Cmd ~= "SessionBan")
                            {
                                if(KFAccessControl(WorldInfo.Game.AccessControl) != none)
                                {
                                    Result = SessionBan(args, "Engine.AccessControl.KickAndSessionBan");                                    
                                }
                                else
                                {
                                    Result = "Session banning not available with the current access control";
                                }
                                return true;                                
                            }
                            else
                            {
                                if(Cmd ~= "AdminLogin")
                                {
                                    Result = "AdminLogin is not available";
                                    return true;                                    
                                }
                                else
                                {
                                    if(Cmd ~= "AdminLogOut")
                                    {
                                        Result = "AdminLogOut is not available";
                                        return true;                                        
                                    }
                                    else
                                    {
                                        if(Cmd ~= "AdminPlayerList")
                                        {
                                            Result = "AdminPlayerList is not available";
                                            return true;                                            
                                        }
                                        else
                                        {
                                            if(Cmd ~= "PlayerList")
                                            {
                                                Result = "PlayerList is not available";
                                                return true;                                                
                                            }
                                            else
                                            {
                                                if(Cmd ~= "AdminPublishMapList")
                                                {
                                                    Result = "AdminPublishMapList is not available";
                                                    return true;                                                    
                                                }
                                                else
                                                {
                                                    if((Cmd ~= "AdminRestartMap") || Cmd ~= "RestartMap")
                                                    {
                                                        WorldInfo.ServerTravel("?restart", false);
                                                        return true;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    adminuser = Admin(PC);
    if(adminuser != none)
    {
        if(Cmd ~= "KickBan")
        {
            WorldInfo.Game.ExileServerUsingKickBan();
            adminuser.KickBan(args);
            return true;            
        }
        else
        {
            if(Cmd ~= "Kick")
            {
                WorldInfo.Game.ExileServerUsingKickBan();
                adminuser.Kick(args);
                return true;                
            }
            else
            {
                if(Cmd ~= "PlayerList")
                {
                    adminuser.PlayerList();
                    return true;                    
                }
                else
                {
                    if(Cmd ~= "RestartMap")
                    {
                        adminuser.RestartMap();
                        return true;                        
                    }
                    else
                    {
                        if(Cmd ~= "switch")
                        {
                            adminuser.Switch(args);
                            return true;
                        }
                    }
                }
            }
        }
    }
    if(adminuser.CheatManager != none)
    {
        if(Cmd ~= "SloMo")
        {
            adminuser.CheatManager.Slomo(float(args));
            return true;            
        }
        else
        {
            if(Cmd ~= "SetJumpZ")
            {
                adminuser.CheatManager.SetJumpZ(float(args));
                return true;                
            }
            else
            {
                if(Cmd ~= "SetGravity")
                {
                    adminuser.CheatManager.SetGravity(float(args));
                    return true;                    
                }
                else
                {
                    if(Cmd ~= "SetSpeed")
                    {
                        adminuser.CheatManager.SetSpeed(float(args));
                        return true;
                    }
                }
            }
        }
    }
    return false;
}

function string MutePlayer(string TargetPlayer, bool bMute, bool bVoice)
{
    local PlayerController PC;
    local KFPlayerController TargetPlayerPC;

    TargetPlayer -= " ";
    TargetPlayerPC = KFPlayerController(WorldInfo.Game.AccessControl.GetControllerFromString(TargetPlayer));
    if(TargetPlayerPC != none)
    {
        if(bVoice)
        {
            foreach WorldInfo.AllControllers(Class'PlayerController', PC)
            {
                if(bMute)
                {
                    PC.ServerMutePlayer(TargetPlayerPC.PlayerReplicationInfo.UniqueId);
                    continue;
                }
                PC.ServerUnmutePlayer(TargetPlayerPC.PlayerReplicationInfo.UniqueId);                
            }                        
        }
        return (((("Mute player: " $ TargetPlayerPC.PlayerReplicationInfo.PlayerName) $ " mute=") $ string(bMute)) $ " voice=") $ string(bVoice);
    }
    return "";
}

function string SessionBan(string TargetPlayer, optional string Reason)
{
    local PlayerController TargetPlayerPC;

    TargetPlayer -= " ";
    TargetPlayerPC = PlayerController(WorldInfo.Game.AccessControl.GetControllerFromString(TargetPlayer));
    if(TargetPlayerPC != none)
    {
        KFAccessControl(WorldInfo.Game.AccessControl).KickSessionBanPlayer(TargetPlayerPC, TargetPlayerPC.PlayerReplicationInfo.UniqueId, "Engine.AccessControl.KickAndSessionBan");
        WorldInfo.Game.ExileServerUsingKickBan();
        return TargetPlayer $ " banned for this session";
    }
    return ("Player " $ TargetPlayer) $ " not found";
}

defaultproperties
{
    begin object name=Sprite class=SpriteComponent
        ReplacementPrimitive=none
    object end
    // Reference: SpriteComponent'Default__AdminCommandHandler.Sprite'
    Components(0)=Sprite
}