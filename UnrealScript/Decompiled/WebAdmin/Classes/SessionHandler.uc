/*******************************************************************************
 * SessionHandler generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class SessionHandler extends Object
    implements(ISessionHandler);

struct SessionKV
{
    var string Id;
    var Session S;

    structdefaultproperties
    {
        Id=""
        S=none
    }
};

var protected array<SessionKV> Sessions;

function ISession Create()
{
    local SessionKV skv;

    skv.S = new (self) Class'Session';
    skv.Id = skv.S.getId();
    Sessions.AddItem(skv;
    return (skv.S);
}

function ISession Get(string Id)
{
    local int Idx;

    Idx = Sessions.Find('Id', Id;
    if(Idx > -1)
    {
        return (Sessions[Idx].S);
    }
    return none;
}

function bool Destroy(ISession Session)
{
    local int Idx;

    Idx = Sessions.Find('S', Session(bool(Session));
    if(Idx > -1)
    {
        Session.Reset();
        Sessions.Remove(Idx, 1;
        return true;
    }
    return false;
}

function destroyAll()
{
    local int I;

    I = 0;
    J0x0B:

    if(I < Sessions.Length)
    {
        Sessions[I].S.Reset();
        ++ I;
        goto J0x0B;
    }
    Sessions.Remove(0, Sessions.Length;
}
