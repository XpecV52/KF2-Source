/*******************************************************************************
 * BasicWebAdminUser generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class BasicWebAdminUser extends Info
    hidecategories(Navigation,Movement,Collision)
    implements(IWebAdminUser);

var class<MessagingSpectator> PCClass;
var MessagingSpectator PC;
var int MaxHistory;
var int Counter;
var array<MessageEntry> msgHistory;
var array<string> checkedPrivileges;

function ReceiveMessage(PlayerReplicationInfo Sender, string msg, name Type)
{
    local int Idx;

    Idx = msgHistory.Length;
    msgHistory.Add(1;
    msgHistory[Idx].Counter = ++ Counter;
    msgHistory[Idx].Sender = Sender;
    if(Sender != none)
    {
        msgHistory[Idx].senderName = Sender.PlayerName;        
    }
    else
    {
        msgHistory[Idx].senderName = "";
    }
    msgHistory[Idx].Message = msg;
    msgHistory[Idx].Type = Type;
    if(Sender.Team != none)
    {
        msgHistory[Idx].TeamName = Class'WebAdminUtils'.static.getTeamNameEx(Sender.Team);
        msgHistory[Idx].TeamColor = Sender.Team.TeamColor;
        msgHistory[Idx].TeamID = Sender.Team.TeamIndex;        
    }
    else
    {
        msgHistory[Idx].TeamID = -1;
    }
    Idx = msgHistory.Length - MaxHistory;
    if(Idx > 0)
    {
        msgHistory.Remove(0, Idx;
    }
}

function Init()
{
    local TeamChatProxy tcp;

    foreach WorldInfo.AllControllers(Class'TeamChatProxy', tcp)
    {
        tcp.AddReceiver(ReceiveMessage);        
    }    
}

function Logout()
{
    Destroy();
}

event Destroyed()
{
    local TeamChatProxy tcp;

    if(PC != none)
    {
        PC.ClearReceiver(ReceiveMessage);
        PC = none;
    }
    foreach WorldInfo.AllControllers(Class'TeamChatProxy', tcp)
    {
        tcp.ClearReceiver(ReceiveMessage);        
    }    
    super(Actor).Destroyed();
}

function setUsername(string UserName)
{
    linkPlayerController(UserName);
}

protected function linkPlayerController(string UserName)
{
    if(PC != none)
    {
        if(PC.PlayerReplicationInfo.PlayerName == UserName)
        {
            return;
        }
        PC.ClearReceiver(ReceiveMessage);
        PC = none;
    }
    foreach WorldInfo.AllControllers(Class'MessagingSpectator', PC)
    {
        if(PC.IsA(PCClass.Name) && PC.PlayerReplicationInfo.PlayerName == UserName)
        {
            PC.AddReceiver(ReceiveMessage);            
            return;
        }        
    }    
    PC = WorldInfo.Spawn(PCClass);
    PC.PlayerReplicationInfo.PlayerName = UserName;
    PC.PlayerReplicationInfo.bAdmin = true;
    PC.AddReceiver(ReceiveMessage);
}

function string getUsername()
{
    if((PC == none) || PC.PlayerReplicationInfo == none)
    {
        return "";
    }
    return PC.PlayerReplicationInfo.PlayerName;
}

function string getUserid()
{
    return getUsername();
}

function PlayerController GetPC()
{
    return PC;
}

function bool canPerform(string URI)
{
    addCheckedPrivileges(URI);
    return true;
}

function addCheckedPrivileges(string URI)
{
    if(checkedPrivileges.Find(URI == -1)
    {
        checkedPrivileges.AddItem(URI;
    }
}

function clearCheckedPrivileges()
{
    checkedPrivileges.Length = 0;
}

function array<string> getCheckedPrivileges()
{
    return checkedPrivileges;
}

function messageHistory(out array<MessageEntry> History, optional int startingFrom)
{
    local int Idx, I;

    Idx = msgHistory.Find('Counter', startingFrom;
    I = Idx + 1;
    J0x40:

    if(I < msgHistory.Length)
    {
        History.AddItem(msgHistory[I];
        ++ I;
        goto J0x40;
    }
}

function ISettingsPrivileges getSettingsPrivileges();

defaultproperties
{
    PCClass=Class'MessagingSpectator'
    MaxHistory=50
    begin object name=Sprite class=SpriteComponent
        ReplacementPrimitive=none
    object end
    // Reference: SpriteComponent'Default__BasicWebAdminUser.Sprite'
    Components(0)=Sprite
}