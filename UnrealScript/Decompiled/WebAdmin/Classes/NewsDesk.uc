/*******************************************************************************
 * NewsDesk generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class NewsDesk extends Object
    config(webadmin);

var config array<config string> GameNews;
var config array<config string> ContentNews;
var config string LastUpdate;
var OnlineNewsInterface newsIface;

function Cleanup()
{
    if(NotEqual_InterfaceInterface(newsIface, (none)))
    {
        newsIface.ClearReadNewsCompletedDelegate(OnReadNewsCompleted);
    }
    newsIface = none;
}

function GetNews(optional bool ForceUpdate)
{
    local DateTime Last, now;

    if((Len(LastUpdate) > 0) && !ForceUpdate)
    {
        Class'WebAdminUtils'.static.getDateTime(now, TimeStamp());
        Class'WebAdminUtils'.static.getDateTime(Last, LastUpdate);
        if((((Last.Year * 10000) + (Last.Month * 100)) + Last.Day) >= (((now.Year * 10000) + (now.Month * 100)) + now.Day))
        {
            return;
        }
    }
    LogInternal("Updating news...", 'webadmin');
    if(Class'GameEngine'.static.GetOnlineSubsystem() != none)
    {
        newsIface = Class'GameEngine'.static.GetOnlineSubsystem().NewsInterface;
        if(EqualEqual_InterfaceInterface(newsIface, (none)))
        {
            LogInternal("No OnlineNewsInterface; news desk is unavailable", 'webadmin');
            return;
        }
        newsIface.AddReadNewsCompletedDelegate(OnReadNewsCompleted);
        newsIface.ReadNews(0, 1);
        newsIface.ReadNews(0, 2);
    }
}

function OnReadNewsCompleted(bool bWasSuccessful, Engine.OnlineSubsystem.EOnlineNewsType NewsType)
{
    local array<string> Data, parsedData;
    local string ln;
    local int I, J;

    if(bWasSuccessful)
    {
        ParseStringIntoArray(newsIface.GetNews(0, NewsType), Data, Chr(10), false);
        parsedData.Length = Data.Length;
        J = 0;
        I = 0;
        J0x7B:

        if(I < Data.Length)
        {
            ln = Class'WebAdminUtils'.static.Trim(Data[I]);
            if((Len(ln) > 0) || J > 0)
            {
                parsedData[J] = ln;
                ++ J;
            }
            ++ I;
            goto J0x7B;
        }
        parsedData.Length = J;
        if(NewsType == 1)
        {
            GameNews = parsedData;            
        }
        else
        {
            if(NewsType == 2)
            {
                ContentNews = parsedData;
            }
        }
        LastUpdate = TimeStamp();
        SaveConfig();
    }
}

function string renderNews(webadmin webadmin, WebAdminQuery Q)
{
    local int I;
    local string tmp;

    if((GameNews.Length > 0) || ContentNews.Length > 0)
    {
        I = 0;
        J0x2D:

        if(I < GameNews.Length)
        {
            if(I > 0)
            {                
                tmp $= "<br />";
            }            
            tmp $= Class'WebAdminUtils'.static.HTMLEscape(GameNews[I]);
            ++ I;
            goto J0x2D;
        }
        Q.Response.Subst("news.game", tmp);
        tmp = "";
        I = 0;
        J0x124:

        if(I < ContentNews.Length)
        {
            if(I > 0)
            {                
                tmp $= "<br />";
            }            
            tmp $= Class'WebAdminUtils'.static.HTMLEscape(ContentNews[I]);
            ++ I;
            goto J0x124;
        }
        Q.Response.Subst("news.content", tmp);
        Q.Response.Subst("news.timestamp", Class'WebAdminUtils'.static.HTMLEscape(LastUpdate));
    }
    return webadmin.Include(Q, "news.inc");
}
