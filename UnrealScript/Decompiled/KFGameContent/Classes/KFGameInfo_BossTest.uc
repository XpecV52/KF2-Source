/*******************************************************************************
 * KFGameInfo_BossTest generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFGameInfo_BossTest extends KFGameInfo_Survival
    config(Game)
    hidecategories(Navigation,Movement,Collision);

function StartWave()
{
    WaveNum = WaveMax - 1;
    super.StartWave();
}

function ReduceDamage(out int Damage, Pawn injured, Controller InstigatedBy, Vector HitLocation, out Vector Momentum, class<DamageType> DamageType, Actor DamageCauser)
{
    local string VictimName, InstigatorName;
    local int InDamage;

    InDamage = Damage;
    super.ReduceDamage(Damage, injured, InstigatedBy, HitLocation, Momentum, DamageType, DamageCauser);
    if(KFPawn_Human(injured) != none)
    {
        VictimName = injured.PlayerReplicationInfo.PlayerName;        
    }
    else
    {
        VictimName = string(injured.Name);
    }
    if(PlayerController(InstigatedBy) != none)
    {
        InstigatorName = InstigatedBy.PlayerReplicationInfo.PlayerName;        
    }
    else
    {
        InstigatorName = string(InstigatedBy.Pawn.Name);
    }
    LogInternal((((((((((((((((((((("QA - " $ string(Damage)) $ "(") $ string(InDamage)) $ ")") @ string(DamageType)) $ " to ") $ VictimName) $ "(") $ string(injured.Controller)) $ ",") $ string(injured.GetTeamNum())) $ ") by ") $ InstigatorName) $ "(") $ string(InstigatedBy)) $ ",") $ string(InstigatedBy.GetTeamNum())) $ "); DamageCauser: ") $ string(DamageCauser)) $ "; FFScale: ") $ string(FriendlyFireScale));
    if(((Damage > 0) && KFPawn_Human(injured) != none) && KFPawn_Human(InstigatedBy.Pawn) != none)
    {
        ScriptTrace();
    }
}
