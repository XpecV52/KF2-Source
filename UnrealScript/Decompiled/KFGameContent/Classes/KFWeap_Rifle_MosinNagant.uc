/*******************************************************************************
 * KFWeap_Rifle_MosinNagant generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFWeap_Rifle_MosinNagant extends KFWeap_MeleeBase
    config(Game)
    hidecategories(Navigation,Advanced,Collision,Mobile,Movement,Object,Physics,Attachment,Debug);

var float LastFireInterval;

static simulated event KFGame.KFGFxObject_TraderItems.EFilterTypeUI GetTraderFilter()
{
    return 2;
}

simulated function ProcessInstantHitEx(byte FiringMode, ImpactInfo Impact, optional int NumHits, optional out float out_PenetrationVal, optional int ImpactNum)
{
    local KFPerk InstigatorPerk;

    InstigatorPerk = GetPerk();
    if(InstigatorPerk != none)
    {
        InstigatorPerk.UpdatePerkHeadShots(Impact, InstantHitDamageTypes[FiringMode], ImpactNum);
    }
    super(KFWeapon).ProcessInstantHitEx(FiringMode, Impact, NumHits, out_PenetrationVal, ImpactNum);
}

event RecieveClientImpact(byte FiringMode, const out ImpactInfo Impact, optional out float PenetrationValue, optional int ImpactNum)
{
    super(KFWeapon).RecieveClientImpact(FiringMode, Impact, PenetrationValue, ImpactNum);
}

simulated function SetIronSights(bool bNewIronSights)
{
    super(KFWeapon).SetIronSights(bNewIronSights);
}

simulated function bool ShouldOwnerWalk()
{
    return super(KFWeapon).ShouldOwnerWalk();
}

simulated function StartFire(byte FireModeNum)
{
    if((FireModeNum == 0) && ShouldAutoReload(FireModeNum))
    {
        FireModeNum = 2;
    }
    if(FireModeNum == 2)
    {
        BeginFire(FireModeNum);
        return;
    }
    super.StartFire(FireModeNum);
}

simulated function name GetReloadAnimName(bool bTacticalReload)
{
    local name ReloadAnimName;

    if(AmmoCount[0] > 0)
    {
        ReloadAnimName = ((bTacticalReload) ? 'Reload_Half_Elite' : 'Reload_Half');
        ReloadAnimName = name((string(ReloadAnimName) $ string('_')) $ string(AmmoCount[0]));
        return ReloadAnimName;        
    }
    else
    {
        return ((bTacticalReload) ? 'Reload_Empty_Elite' : 'Reload_Empty');
    }
}

simulated function AltFireMode()
{
    if(!Instigator.IsLocallyControlled())
    {
        return;
    }
    if(bUsingSights)
    {
        SetIronSights(false);
    }
    StartFire(1);
}

simulated function float GetFireInterval(byte FireModeNum)
{
    if((FireModeNum == 0) && AmmoCount[FireModeNum] == 0)
    {
        return LastFireInterval;
    }
    return super(Weapon).GetFireInterval(FireModeNum);
}

simulated function bool CanOverrideMagReload(byte FireModeNum)
{
    if(FireModeNum == 1)
    {
        return true;
    }
    return super.CanOverrideMagReload(FireModeNum);
}

simulated state MeleeBlocking
{
    simulated function bool AllowIronSights()
    {
        return false;
    }
    stop;    
}

defaultproperties
{
    LastFireInterval=0.5
    ParryStrength=5
    ParryDamageMitigationPercent=0.4
    BlockSound=AkEvent'WW_WEP_Bullet_Impacts.Play_Block_MEL_Hammer'
    ParrySound=AkEvent'WW_WEP_Bullet_Impacts.Play_Parry_Wood'
    PackageKey="Mosin"
    FirstPersonMeshName="wep_1p_mosin_mesh.Wep_1stP_Mosin_Rig"
    FirstPersonAnimSetNames=/* Array type was not detected. */
    PickupMeshName="wep_3p_mosin_mesh.Wep_3rdP_Mosin_Pickup"
    AttachmentArchetypeName="WEP_Mosin_ARCH.Wep_Mosin_3P"
    MuzzleFlashTemplateName="WEP_Mosin_ARCH.Wep_Mosin_MuzzleFlash"
    bHasIronSights=true
    bWarnAIWhenAiming=true
    bCanBeReloaded=true
    bReloadFromMagazine=true
    bHasFireLastAnims=true
    bUseAdditiveMoveAnim=false
    FireModeIconPaths=/* Array type was not detected. */
    InventoryGroup=EInventoryGroup.IG_Primary
    InventorySize=7
    MagazineCapacity=5
    PenetrationPower=/* Array type was not detected. */
    AimCorrectionSize=40
    MeshFOV=65
    MeshIronSightFOV=45
    PlayerIronSightFOV=65
    DOF_FG_MaxNearBlurSize=3.5
    AimWarningDelay=(X=0.4,Y=0.8)
    GroupPriority=75
    WeaponSelectTexture=Texture2D'wep_ui_mosin_tex.UI_WeaponSelect_MosinNagant'
    AmmoCost=/* Array type was not detected. */
    SpareAmmoCapacity=60
    InitialSpareMags=5
    WeaponFireWaveForm=ForceFeedbackWaveform'FX_ForceFeedback_ARCH.Gunfire.Medium_Recoil'
    FireSightedAnims=/* Array type was not detected. */
    BonesToLockOnEmpty=/* Array type was not detected. */
    WeaponFireSnd=/* Array type was not detected. */
    WeaponDryFireSnd=/* Array type was not detected. */
    PlayerViewOffset=(X=8,Y=7,Z=-3.5)
    begin object name=MeleeHelper class=KFMeleeHelperWeapon
        MeleeImpactCamShakeScale=0.03
        MaxHitRange=250
        HitboxChain=/* Array type was not detected. */
        WorldImpactEffects=KFImpactEffectInfo'FX_Impacts_ARCH.Bladed_melee_impact'
    object end
    // Reference: KFMeleeHelperWeapon'Default__KFWeap_Rifle_MosinNagant.MeleeHelper'
    MeleeAttackHelper=MeleeHelper
    EjectedShellForegroundDuration=1.5
    maxRecoilPitch=550
    minRecoilPitch=400
    maxRecoilYaw=150
    minRecoilYaw=-150
    RecoilRate=0.08
    RecoilViewRotationScale=0.6
    RecoilMaxYawLimit=500
    RecoilMinYawLimit=65035
    RecoilMaxPitchLimit=1250
    RecoilMinPitchLimit=64785
    RecoilISMaxYawLimit=50
    RecoilISMinYawLimit=65485
    RecoilISMaxPitchLimit=500
    RecoilISMinPitchLimit=65485
    IronSightMeshFOVCompensationScale=1.5
    AssociatedPerkClasses=/* Array type was not detected. */
    WeaponUpgrades=/* Array type was not detected. */
    FiringStatesArray=/* Array type was not detected. */
    WeaponFireTypes=/* Array type was not detected. */
    WeaponProjectiles=/* Array type was not detected. */
    Spread=/* Array type was not detected. */
    InstantHitDamage=/* Array type was not detected. */
    InstantHitMomentum=/* Array type was not detected. */
    InstantHitDamageTypes=/* Array type was not detected. */
    FireOffset=(X=25,Y=3,Z=-2.5)
    bMeleeWeapon=false
    begin object name=FirstPersonMesh class=KFSkeletalMeshComponent
        ReplacementPrimitive=none
    object end
    // Reference: KFSkeletalMeshComponent'Default__KFWeap_Rifle_MosinNagant.FirstPersonMesh'
    Mesh=FirstPersonMesh
    ItemName="Mosin Nagant"
    begin object name=StaticPickupComponent class=StaticMeshComponent
        ReplacementPrimitive=none
    object end
    // Reference: StaticMeshComponent'Default__KFWeap_Rifle_MosinNagant.StaticPickupComponent'
    DroppedPickupMesh=StaticPickupComponent
    begin object name=StaticPickupComponent class=StaticMeshComponent
        ReplacementPrimitive=none
    object end
    // Reference: StaticMeshComponent'Default__KFWeap_Rifle_MosinNagant.StaticPickupComponent'
    PickupFactoryMesh=StaticPickupComponent
}