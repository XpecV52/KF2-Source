/*******************************************************************************
 * KFAISpawnManager_Endless generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFAISpawnManager_Endless extends KFAISpawnManager within KFGameInfo_Endless
    config(Game);

struct MacroDifficultyWaveInfo
{
    var array<DifficultyWaveInfo> MacroDifficultyWaveSettings;

    structdefaultproperties
    {
        MacroDifficultyWaveSettings=none
    }
};

var array<MacroDifficultyWaveInfo> DifficultyWaves;

function SetupNextWave(byte NextWaveIndex, optional int TimeToNextWaveBuffer)
{
    TimeToNextWaveBuffer = 0;
    super.SetupNextWave(byte(NextWaveIndex % WaveSettings.Waves.Length), TimeToNextWaveBuffer);
}

function GetAvailableSquads(byte MyWaveIndex, optional bool bNeedsSpecialSquad)
{
    bNeedsSpecialSquad = false;
    super.GetAvailableSquads(byte(MyWaveIndex % WaveSettings.Waves.Length), bNeedsSpecialSquad);
}

function GetWaveSettings(out DifficultyWaveInfo WaveInfo)
{
    local int AdjustedGameDifficulty;

    AdjustedGameDifficulty = Outer.EndlessDifficulty.GetCurrentDifficultyIndex();
    WaveInfo = DifficultyWaves[int(Outer.GameDifficulty)].MacroDifficultyWaveSettings[AdjustedGameDifficulty];
    LogInternal((("KFAISpawnManager_Endless - Setting WaveInfo to Base Game Difficulty:" @ string(Outer.GameDifficulty)) @ "AdjustedGameDifficulty:") @ string(AdjustedGameDifficulty));
}

function OnDifficultyUpdated()
{
    GetWaveSettings(WaveSettings);
}

function OnBossDied()
{
    BossMinionsSpawnSquads.Length = 0;
    AvailableSquads.Length = 0;
}

function float GetNextSpawnTimeMod()
{
    local float SpawnTimeMod, SpawnTimeModMin;
    local int TempModIdx;

    SpawnTimeMod = super.GetNextSpawnTimeMod();
    if(Outer.MyKFGRI.IsSpecialWave(TempModIdx))
    {
        SpawnTimeModMin = Outer.EndlessDifficulty.GetSpecialWaveSpawnTimeModMin(Outer.SpecialWaveType);
        SpawnTimeMod = float(Max(int(SpawnTimeMod), int(SpawnTimeModMin)));
    }
    return SpawnTimeMod;
}

defaultproperties
{
    DifficultyWaves(0)=MacroDifficultyWaveSettings=(Waves=/* Array type was not detected. */,
/* Exception thrown while deserializing MacroDifficultyWaveSettings
System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
   at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)
   at UELib.Core.UDefaultProperty.DeserializeTagUE3()
   at UELib.Core.UDefaultProperty.Deserialize()
   at UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) */,
/* Exception thrown while deserializing MacroDifficultyWaveSettings
System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
   at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)
   at UELib.Core.UDefaultProperty.DeserializeTagUE3()
   at UELib.Core.UDefaultProperty.Deserialize()
   at UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) */,
/* Exception thrown while deserializing MacroDifficultyWaveSettings
System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
   at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)
   at UELib.Core.UDefaultProperty.DeserializeTagUE3()
   at UELib.Core.UDefaultProperty.Deserialize()
   at UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) */,
/* Exception thrown while deserializing MacroDifficultyWaveSettings
System.ArgumentException: Requested value '0_481' was not found.
   at System.Enum.TryParseEnum(Type enumType, String value, Boolean ignoreCase, EnumResult& parseResult)
   at System.Enum.Parse(Type enumType, String value, Boolean ignoreCase)
   at UELib.Core.UDefaultProperty.DeserializeTagUE3()
   at UELib.Core.UDefaultProperty.Deserialize()
   at UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) */,
/* Exception thrown while deserializing MacroDifficultyWaveSettings
System.ArgumentException: Requested value '0_4' was not found.
   at System.Enum.TryParseEnum(Type enumType, String value, Boolean ignoreCase, EnumResult& parseResult)
   at System.Enum.Parse(Type enumType, String value, Boolean ignoreCase)
   at UELib.Core.UDefaultProperty.DeserializeTagUE3()
   at UELib.Core.UDefaultProperty.Deserialize()
   at UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) */),
/* Exception thrown while deserializing DifficultyWaves
System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
   at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)
   at UELib.Core.UDefaultProperty.DeserializeTagUE3()
   at UELib.Core.UDefaultProperty.Deserialize()
   at UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) */
    DifficultyWaves(1)=
/* Exception thrown while deserializing DifficultyWaves
System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
   at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)
   at UELib.Core.UDefaultProperty.DeserializeTagUE3()
   at UELib.Core.UDefaultProperty.Deserialize()
   at UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) */
    DifficultyWaves(2)=
/* Exception thrown while deserializing DifficultyWaves
System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
   at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)
   at UELib.Core.UDefaultProperty.DeserializeTagUE3()
   at UELib.Core.UDefaultProperty.Deserialize()
   at UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) */
    DifficultyWaves(3)=
/* Exception thrown while deserializing DifficultyWaves
System.ArgumentException: Requested value '0_481' was not found.
   at System.Enum.TryParseEnum(Type enumType, String value, Boolean ignoreCase, EnumResult& parseResult)
   at System.Enum.Parse(Type enumType, String value, Boolean ignoreCase)
   at UELib.Core.UDefaultProperty.DeserializeTagUE3()
   at UELib.Core.UDefaultProperty.Deserialize()
   at UELib.Core.UDefaultProperty.DeserializeDefaultPropertyValue(PropertyType type, DeserializeFlags& deserializeFlags) */
}