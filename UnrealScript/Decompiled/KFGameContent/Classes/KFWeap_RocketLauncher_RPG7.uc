/*******************************************************************************
 * KFWeap_RocketLauncher_RPG7 generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFWeap_RocketLauncher_RPG7 extends KFWeap_GrenadeLauncher_Base
    config(Game)
    hidecategories(Navigation,Advanced,Collision,Mobile,Movement,Object,Physics,Attachment,Debug);

/** Back blash explosion template. */
var() GameExplosion ExplosionTemplate;
/** Holds an offest for spawning back blast effects. */
var() Vector BackBlastOffset;

simulated function CustomFire()
{
    local KFExplosionActorReplicated ExploActor;
    local Vector SpawnLoc;
    local Rotator SpawnRot;

    ProjectileFire();
    if(Instigator.Role < ROLE_Authority)
    {
        return;
    }
    GetBackBlastLocationAndRotation(SpawnLoc, SpawnRot);
    ExploActor = Spawn(Class'KFExplosionActorReplicated', self,, SpawnLoc, SpawnRot,, true);
    if(ExploActor != none)
    {
        ExploActor.InstigatorController = Instigator.Controller;
        ExploActor.Instigator = Instigator;
        ExploActor.bTraceForHitActorWhenDirectionalExplosion = true;
        ExploActor.Explode(ExplosionTemplate, vector(SpawnRot));
    }
    if(bDebug)
    {
        DrawDebugCone(SpawnLoc, vector(SpawnRot), ExplosionTemplate.DamageRadius, ExplosionTemplate.DirectionalExplosionAngleDeg * 0.01745329, ExplosionTemplate.DirectionalExplosionAngleDeg * 0.01745329, 16, MakeColor(64, 64, 255, 0), true);
    }
}

simulated function GetBackBlastLocationAndRotation(out Vector BlastLocation, out Rotator BlastRotation)
{
    local Vector X, Y, Z;
    local Rotator ViewRotation;

    if(Instigator != none)
    {
        if(bUsingSights)
        {
            ViewRotation = Instigator.GetViewRotation();
            if(KFPlayerController(Instigator.Controller) != none)
            {
                ViewRotation += KFPlayerController(Instigator.Controller).WeaponBufferRotation;
            }
            GetAxes(ViewRotation, X, Y, Z);
            BlastRotation = rotator(vector(ViewRotation) * float(-1));
            BlastLocation = Instigator.GetWeaponStartTraceLocation() + (X * BackBlastOffset.X);            
        }
        else
        {
            ViewRotation = Instigator.GetViewRotation();
            if(KFPlayerController(Instigator.Controller) != none)
            {
                ViewRotation += KFPlayerController(Instigator.Controller).WeaponBufferRotation;
            }
            BlastRotation = rotator(vector(ViewRotation) * float(-1));
            BlastLocation = Instigator.GetPawnViewLocation() + (BackBlastOffset >> ViewRotation);
        }
    }
}

simulated function ANIMNOTIFY_LockBolt()
{
    EmptyMagBlendNode.SetBlendTarget(1, 0);
}

defaultproperties
{
    ExplosionTemplate=KFGameExplosion'WEP_RPG7_ARCH.Wep_RPG7_BackBlastExplosion'
    BackBlastOffset=(X=-20,Y=4,Z=-3)
    ForceReloadTime=0.4
    FireModeIconPaths=/* Array type was not detected. */
    InventorySize=9
    MagazineCapacity=1
    bHasIronSights=true
    bCanBeReloaded=true
    bReloadFromMagazine=true
    bHasFireLastAnims=true
    MeshFOV=75
    MeshIronSightFOV=65
    PlayerIronSightFOV=70
    FastZoomOutTime=0.2
    DOF_FG_MaxNearBlurSize=2.5
    GroupPriority=100
    WeaponSelectTexture=Texture2D'WEP_UI_RPG7_TEX.UI_WeaponSelect_RPG7'
    MaxSpareAmmo=15
    InitialSpareMags=4
    AmmoPickupScale=2
    IdleFidgetAnims=/* Array type was not detected. */
    BonesToLockOnEmpty=/* Array type was not detected. */
    WeaponFireSnd=/* Array type was not detected. */
    WeaponDryFireSnd=/* Array type was not detected. */
    PlayerViewOffset=(X=10,Y=10,Z=-2)
    AttachmentArchetype=KFWeaponAttachment'WEP_RPG7_ARCH.Wep_RPG7_3P'
    MeleeAttackHelper=KFMeleeHelperWeapon'Default__KFWeap_RocketLauncher_RPG7.MeleeHelper'
    MuzzleFlashTemplate=KFMuzzleFlash'WEP_RPG7_ARCH.Wep_RPG7_MuzzleFlash'
    maxRecoilPitch=900
    minRecoilPitch=775
    maxRecoilYaw=500
    minRecoilYaw=-500
    RecoilRate=0.085
    RecoilBlendOutRatio=0.35
    RecoilViewRotationScale=0.8
    RecoilMaxYawLimit=500
    RecoilMinYawLimit=65035
    RecoilMinPitchLimit=64785
    RecoilISMaxYawLimit=50
    RecoilISMinYawLimit=65485
    RecoilISMaxPitchLimit=500
    RecoilISMinPitchLimit=65485
    HippedRecoilModifier=1.25
    FallingRecoilModifier=1.5
    AssociatedPerkClass=Class'KFGame.KFPerk_Demolitionist'
    FiringStatesArray=/* Array type was not detected. */
    WeaponFireTypes=/* Array type was not detected. */
    WeaponProjectiles=/* Array type was not detected. */
    FireInterval=/* Array type was not detected. */
    Spread=/* Array type was not detected. */
    InstantHitDamage=/* Array type was not detected. */
    InstantHitDamageTypes=/* Array type was not detected. */
    FireOffset=(X=20,Y=4,Z=-3)
    begin object name=FirstPersonMesh class=KFSkeletalMeshComponent
        SkeletalMesh=SkeletalMesh'WEP_1P_RPG7_MESH.Wep_1stP_RPG7_Rig'
        AnimSets(0)=AnimSet'WEP_1P_RPG7_ANIM.Wep_1stP_RPG7_Anim'
        ReplacementPrimitive=none
    object end
    // Reference: KFSkeletalMeshComponent'Default__KFWeap_RocketLauncher_RPG7.FirstPersonMesh'
    Mesh=FirstPersonMesh
    ItemName="RPG-7"
    begin object name=StaticPickupComponent class=StaticMeshComponent
        StaticMesh=StaticMesh'WEP_3P_RPG7_MESH.Wep_rpg7_Pickup'
        ReplacementPrimitive=none
    object end
    // Reference: StaticMeshComponent'Default__KFWeap_RocketLauncher_RPG7.StaticPickupComponent'
    DroppedPickupMesh=StaticPickupComponent
    begin object name=StaticPickupComponent class=StaticMeshComponent
        StaticMesh=StaticMesh'WEP_3P_RPG7_MESH.Wep_rpg7_Pickup'
        ReplacementPrimitive=none
    object end
    // Reference: StaticMeshComponent'Default__KFWeap_RocketLauncher_RPG7.StaticPickupComponent'
    PickupFactoryMesh=StaticPickupComponent
}