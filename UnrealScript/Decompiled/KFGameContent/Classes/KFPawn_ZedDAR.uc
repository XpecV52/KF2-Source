/*******************************************************************************
 * KFPawn_ZedDAR generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFPawn_ZedDAR extends KFPawn_Monster
    abstract
    config(Game)
    hidecategories(Navigation);

var protected KFAIController_ZedDAR MyDARController;
var class<KFProjectile> RangedProjectileClass;
var const name FiringSocketLName;
var const name FiringSocketRName;
var name FiringSocketName;

function PossessedBy(Controller C, bool bVehicleTransition)
{
    super.PossessedBy(C, bVehicleTransition);
    MyDARController = KFAIController_ZedDAR(C);
}

simulated function StartRangedAttack()
{
    local KFSM_RangedAttack RangedSM;

    if(MyDARController != none)
    {
        RangedSM = KFSM_RangedAttack(SpecialMoves[SpecialMove]);
        MyDARController.FireRangedAttack(RangedProjectileClass, RangedSM.GetFireOffset());
    }
}

function OnStackingAfflictionChanged(byte Id)
{
    super.OnStackingAfflictionChanged(Id);
    if((MyKFAIC == none) || !IsAliveAndWell())
    {
        return;
    }
    if(bEmpDisrupted)
    {
        if(IsDoingSpecialMove(22))
        {
            EndSpecialMove();
        }
    }
}

function PlayHit(float Damage, Controller InstigatedBy, Vector HitLocation, class<DamageType> DamageType, Vector Momentum, TraceHitInfo HitInfo)
{
    if(Damage == float(0))
    {
        HitInfo.BoneName = 'KBArmor';
        super.PlayHit(1, InstigatedBy, HitLocation, DamageType, Momentum, HitInfo);        
    }
    else
    {
        super.PlayHit(Damage, InstigatedBy, HitLocation, DamageType, Momentum, HitInfo);
    }
}

function int GetHitZoneIndex(name BoneName)
{
    if(BoneName == 'KBArmor')
    {
        return OverrideArmorFXIndex;
    }
    return super(KFPawn).GetHitZoneIndex(BoneName);
}

simulated function KFSkinTypeEffects GetHitZoneSkinTypeEffects(int HitZoneIdx)
{
    if(HitZoneIdx == OverrideArmorFXIndex)
    {
        return CharacterArch.ImpactSkins[3];
    }
    return super(KFPawn).GetHitZoneSkinTypeEffects(HitZoneIdx);
}

function CauseHeadTrauma(optional float BleedOutTime)
{
    BleedOutTime = 5;
}

function ZedExplodeArmor(int ArmorZoneIdx, name ArmorZoneName)
{
    super.ZedExplodeArmor(ArmorZoneIdx, ArmorZoneName);
    if(MyDARController != none)
    {
        MyDARController.OnArmorLoss(ArmorZoneName);
    }
}

function SetSprinting(bool bNewSprintStatus)
{
    if(bNewSprintStatus)
    {
        if(CanDoSpecialMove(20))
        {
            DoSpecialMove(20, true,, SpecialMoves[20].PackFlagsBase(self));
        }        
    }
    else
    {
        super.SetSprinting(bNewSprintStatus);
    }
}

simulated function NotifySpecialMoveEnded(KFSpecialMove FinishedMove, KFGame.KFPawn.ESpecialMove SMHandle)
{
    super.NotifySpecialMoveEnded(FinishedMove, SMHandle);
    if(SMHandle == 20)
    {
        SetSprinting(true);
    }
}

defaultproperties
{
    MinSpawnSquadSizeType=ESquadType.EST_Medium
    RepArmorPct[0]=255
    RepArmorPct[1]=255
    ArmorZoneStatus=3
    PreviousArmorZoneStatus=3
    begin object name=MeleeHelper class=KFMeleeHelperAI
        BaseDamage=10
        MyDamageType=Class'KFDT_Slashing_ZedWeak'
        MomentumTransfer=25000
    object end
    // Reference: KFMeleeHelperAI'Default__KFPawn_ZedDAR.MeleeHelper'
    MeleeAttackHelper=MeleeHelper
    DoshValue=17
    XPValues[0]=15
    XPValues[1]=20
    XPValues[2]=27
    XPValues[3]=31
    DamageTypeModifiers=/* Array type was not detected. */
    SprintAkComponent=AkComponent'Default__KFPawn_ZedDAR.SprintAkComponent0'
    StartSprintingSound=AkEvent'WW_ZED_Evil_DAR.Play_ZED_EvilDAR_SFX_Thruster_Start'
    SprintLoopingSound=AkEvent'WW_ZED_Evil_DAR.Play_ZED_EvilDAR_SFX_Thruster_LP'
    StopSprintingSound=AkEvent'WW_ZED_Evil_DAR.Play_ZED_EvilDAR_SFX_Thruster_Stop'
    ArmorInfoClass=Class'KFZedArmorInfo_EvilDAR'
    OverrideArmorFXIndex=200
    begin object name=ThirdPersonHead0 class=SkeletalMeshComponent
        ReplacementPrimitive=none
    object end
    // Reference: SkeletalMeshComponent'Default__KFPawn_ZedDAR.ThirdPersonHead0'
    ThirdPersonHeadMeshComponent=ThirdPersonHead0
    bEnableAimOffset=true
    HitZones=/* Array type was not detected. */
    AfflictionHandler=KFAfflictionManager'Default__KFPawn_ZedDAR.Afflictions'
    IncapSettings=/* Array type was not detected. */
    SprintSpeed=600
    begin object name=FirstPersonArms class=KFSkeletalMeshComponent
        ReplacementPrimitive=none
    object end
    // Reference: KFSkeletalMeshComponent'Default__KFPawn_ZedDAR.FirstPersonArms'
    ArmsMesh=FirstPersonArms
    begin object name=SpecialMoveHandler class=KFSpecialMoveHandler
        SpecialMoveClasses=/* Array type was not detected. */
    object end
    // Reference: KFSpecialMoveHandler'Default__KFPawn_ZedDAR.SpecialMoveHandler'
    SpecialMoveHandler=SpecialMoveHandler
    AmbientAkComponent=AkComponent'Default__KFPawn_ZedDAR.AmbientAkSoundComponent_1'
    WeaponAkComponent=AkComponent'Default__KFPawn_ZedDAR.AmbientAkSoundComponent'
    WeaponAmbientEchoHandler=KFWeaponAmbientEchoHandler'Default__KFPawn_ZedDAR.WeaponAmbientEchoHandler'
    FootstepAkComponent=AkComponent'Default__KFPawn_ZedDAR.FootstepAkSoundComponent'
    DialogAkComponent=AkComponent'Default__KFPawn_ZedDAR.DialogAkSoundComponent'
    Mass=85
    GroundSpeed=170
    Health=775
    begin object name=KFPawnSkeletalMeshComponent class=KFSkeletalMeshComponent
        ReplacementPrimitive=none
    object end
    // Reference: KFSkeletalMeshComponent'Default__KFPawn_ZedDAR.KFPawnSkeletalMeshComponent'
    Mesh=KFPawnSkeletalMeshComponent
    begin object name=CollisionCylinder class=CylinderComponent
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__KFPawn_ZedDAR.CollisionCylinder'
    CylinderComponent=CollisionCylinder
    begin object name=Sprite class=SpriteComponent
        ReplacementPrimitive=none
    object end
    // Reference: SpriteComponent'Default__KFPawn_ZedDAR.Sprite'
    Components(0)=Sprite
    begin object name=CollisionCylinder class=CylinderComponent
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__KFPawn_ZedDAR.CollisionCylinder'
    Components(1)=CollisionCylinder
    begin object name=Arrow class=ArrowComponent
        ReplacementPrimitive=none
    object end
    // Reference: ArrowComponent'Default__KFPawn_ZedDAR.Arrow'
    Components(2)=Arrow
    begin object name=KFPawnSkeletalMeshComponent class=KFSkeletalMeshComponent
        ReplacementPrimitive=none
    object end
    // Reference: KFSkeletalMeshComponent'Default__KFPawn_ZedDAR.KFPawnSkeletalMeshComponent'
    Components(3)=KFPawnSkeletalMeshComponent
    Components(4)=AkComponent'Default__KFPawn_ZedDAR.AmbientAkSoundComponent'
    Components(5)=AkComponent'Default__KFPawn_ZedDAR.AmbientAkSoundComponent_1'
    Components(6)=AkComponent'Default__KFPawn_ZedDAR.FootstepAkSoundComponent'
    Components(7)=AkComponent'Default__KFPawn_ZedDAR.DialogAkSoundComponent'
    Components(8)=AkComponent'Default__KFPawn_ZedDAR.SprintAkComponent0'
    begin object name=CollisionCylinder class=CylinderComponent
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__KFPawn_ZedDAR.CollisionCylinder'
    CollisionComponent=CollisionCylinder
    RotationRate=(Pitch=50000,Yaw=66000,Roll=50000)
}