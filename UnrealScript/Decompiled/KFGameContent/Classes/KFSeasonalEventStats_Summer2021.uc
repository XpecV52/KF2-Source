/*******************************************************************************
 * KFSeasonalEventStats_Summer2021 generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFSeasonalEventStats_Summer2021 extends KFSeasonalEventStats within KFOnlineStatsWrite;

var private const transient int ZedsStompRequired;
var private const transient int LaserKillsRequired;
var private const transient int JumpKillsRequired;
var private const transient int EndlessWaveRequired;

private final event Initialize(string MapName)
{
    local string CapsMapName;

    CapsMapName = Caps(MapName);
    bObjectiveIsValidForMap[0] = 1;
    bObjectiveIsValidForMap[1] = 0;
    bObjectiveIsValidForMap[2] = 0;
    bObjectiveIsValidForMap[3] = 0;
    bObjectiveIsValidForMap[4] = 0;
    if(CapsMapName == "KF-MOONBASE")
    {
        bObjectiveIsValidForMap[1] = 1;
        bObjectiveIsValidForMap[2] = 1;
        bObjectiveIsValidForMap[3] = 1;
        bObjectiveIsValidForMap[4] = 1;
    }
    SetSeasonalEventStatsMax(ZedsStompRequired, 0, LaserKillsRequired, JumpKillsRequired, 0);
}

private final event GrantEventItems()
{
    if((((Outer.IsEventObjectiveComplete(0) && Outer.IsEventObjectiveComplete(1)) && Outer.IsEventObjectiveComplete(2)) && Outer.IsEventObjectiveComplete(3)) && Outer.IsEventObjectiveComplete(4))
    {
        GrantEventItem(8844);
    }
}

simulated event OnGameWon(class<GameInfo> GameClass, int Difficulty, int GameLength, bool bCoop)
{
    if(bObjectiveIsValidForMap[1] != 0)
    {
        if(GameClass == Class'KFGameInfo_WeeklySurvival')
        {
            FinishedObjective(2, 1);
        }
    }
}

simulated function OnZedKilled(class<KFPawn_Monster> MonsterClass, int Difficulty, class<DamageType> DT)
{
    local int ObjIdx;
    local KFPlayerController KFPC;
    local KFPawn_Human KFP;

    ObjIdx = 2;
    if(bObjectiveIsValidForMap[ObjIdx] != 0)
    {
        if(ClassIsChildOf(DT, Class'KFDT_EMPTrap'))
        {
            IncrementSeasonalEventStat(ObjIdx, 1);
            if(Outer.GetSeasonalEventStatValue(ObjIdx) >= LaserKillsRequired)
            {
                FinishedObjective(2, ObjIdx);
            }
        }
    }
    ObjIdx = 3;
    if(bObjectiveIsValidForMap[ObjIdx] != 0)
    {
        KFPC = Outer.MyKFPC;
        if(KFPC != none)
        {
            KFP = KFPawn_Human(KFPC.Pawn);
            if((KFP != none) && KFP.Physics == 2)
            {
                IncrementSeasonalEventStat(ObjIdx, 1);
                if(Outer.GetSeasonalEventStatValue(ObjIdx) >= JumpKillsRequired)
                {
                    FinishedObjective(2, ObjIdx);
                }
            }
        }
    }
}

simulated function OnHitGiven(class<DamageType> DT)
{
    local int ObjIdx;

    ObjIdx = 0;
    if(ClassIsChildOf(DT, Class'DmgType_Crushed'))
    {
        IncrementSeasonalEventStat(ObjIdx, 1);
        if(Outer.GetSeasonalEventStatValue(ObjIdx) >= ZedsStompRequired)
        {
            FinishedObjective(2, ObjIdx);
        }
    }
}

simulated event OnWaveCompleted(class<GameInfo> GameClass, int Difficulty, int WaveNum)
{
    local int ObjIdx;

    ObjIdx = 4;
    if(bObjectiveIsValidForMap[ObjIdx] != 0)
    {
        if(((WaveNum >= EndlessWaveRequired) && GameClass == Class'KFGameInfo_Endless') && float(Difficulty) >= 1)
        {
            FinishedObjective(2, ObjIdx);
        }
    }
}

defaultproperties
{
    ZedsStompRequired=50
    LaserKillsRequired=20
    JumpKillsRequired=300
    EndlessWaveRequired=15
}