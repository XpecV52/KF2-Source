/*******************************************************************************
 * KFWeapAttach_Mine_Reconstructor generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFWeapAttach_Mine_Reconstructor extends KFWeaponAttachment
    hidecategories(Navigation,Object,Movement,Attachment,Collision,Physics,Advanced,Debug,Mobile);

var export editinline transient ParticleSystemComponent ChargingPSC;
var ParticleSystem ChargingEffect;
var ParticleSystem ChargedEffect;
var bool bIsCharging;
var bool bIsFullyCharged;
var repnotify float StartFireTime;
var int ChargeLevel;
var float FXScalingFactorByCharge;
var float ChargeRTPC;

simulated function StartFire()
{
    StartFireTime = WorldInfo.TimeSeconds;
    bIsCharging = true;
    if(ChargingPSC == none)
    {
        ChargingPSC = new (self) Class'ParticleSystemComponent';
        if(WeapMesh != none)
        {
            WeapMesh.AttachComponentToSocket(ChargingPSC, 'MuzzleFlash');            
        }
        else
        {
            AttachComponent(ChargingPSC);
        }        
    }
    else
    {
        ChargingPSC.ActivateSystem();
    }
    if(ChargingPSC != none)
    {
        ChargingPSC.SetTemplate(ChargingEffect);
    }
}

simulated event Tick(float DeltaTime)
{
    local Vector vec;

    if(bIsCharging && !bIsFullyCharged)
    {
        ChargeRTPC = FMin(Class'KFWeap_Mine_Reconstructor'.default.MaxChargeTime, WorldInfo.TimeSeconds - StartFireTime) / Class'KFWeap_Mine_Reconstructor'.default.MaxChargeTime;
        if(ChargeRTPC >= 1)
        {
            bIsFullyCharged = true;
            vec.X = FMin(1, ChargeRTPC);
            vec.Y = FMin(1, ChargeRTPC);
            vec.Z = FMin(1, ChargeRTPC);
            ChargingPSC.SetVectorParameter(name("BlobCharge"), vec);
        }
        if((ChargingPSC != none) && !bIsFullyCharged)
        {
            vec.X = ChargeRTPC;
            vec.Y = ChargeRTPC;
            vec.Z = ChargeRTPC;
            ChargingPSC.SetVectorParameter(name("BlobCharge"), vec);
        }
    }
    super.Tick(DeltaTime);
}

simulated function FirstPersonFireEffects(Weapon W, Vector HitLocation)
{
    super.FirstPersonFireEffects(W, HitLocation);
    if(ChargingPSC != none)
    {
        ChargingPSC.DeactivateSystem();
    }
}

simulated function bool ThirdPersonFireEffects(Vector HitLocation, KFPawn P, byte ThirdPersonAnimRateByte)
{
    bIsCharging = false;
    bIsFullyCharged = false;
    ChargeRTPC = 0;
    if(ChargingPSC != none)
    {
        ChargingPSC.DeactivateSystem();
    }
    return super.ThirdPersonFireEffects(HitLocation, P, ThirdPersonAnimRateByte);
}

simulated function CauseMuzzleFlash(byte FiringMode)
{
    if((MuzzleFlash == none) && MuzzleFlashTemplate != none)
    {
        AttachMuzzleFlash();
    }
    super.CauseMuzzleFlash(FiringMode);
}

defaultproperties
{
    ChargingEffect=ParticleSystem'WEP_Mine_Reconstructor_EMIT.FX_Bile_BlobCharge_01'
    ChargedEffect=ParticleSystem'WEP_Mine_Reconstructor_EMIT.FX_Mine_Reconstructor_FullCharge'
    begin object name=SkeletalMeshComponent0 class=SkeletalMeshComponent
        Animations=AnimNodeSequence'Default__KFWeapAttach_Mine_Reconstructor.SkeletalMeshComponent0.MeshSequenceA'
        ReplacementPrimitive=none
    object end
    // Reference: SkeletalMeshComponent'Default__KFWeapAttach_Mine_Reconstructor.SkeletalMeshComponent0'
    WeapMesh=SkeletalMeshComponent0
    MuzzleFlashTemplate=KFMuzzleFlash'WEP_Mine_Reconstructor_Arch.Wep_Mine_Reconstructor_MuzzleFlash_3P'
}