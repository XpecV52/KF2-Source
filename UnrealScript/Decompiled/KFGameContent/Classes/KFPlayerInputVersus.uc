/*******************************************************************************
 * KFPlayerInputVersus generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFPlayerInputVersus extends KFPlayerInput within KFPlayerController
    transient
    config(Input)
    hidecategories(Object,UIRoot);

simulated exec function IronSights(optional bool bHoldButtonMode)
{
    if((Outer.Pawn != none) && (Outer.Pawn.Weapon == none) || Outer.Pawn.Weapon.ShouldWeaponIgnoreStartFire())
    {
        Outer.Pawn.StartFire(1);
        return;
    }
    super.IronSights(bHoldButtonMode);
}

simulated exec function IronSightsRelease(optional bool bHoldButtonMode)
{
    if((Outer.Pawn != none) && (Outer.Pawn.Weapon == none) || Outer.Pawn.Weapon.ShouldWeaponIgnoreStartFire())
    {
        Outer.Pawn.StopFire(1);
        return;
    }
    super.IronSightsRelease(bHoldButtonMode);
}

exec function SwitchFire()
{
    if((Outer.Pawn != none) && (Outer.Pawn.Weapon == none) || Outer.Pawn.Weapon.ShouldWeaponIgnoreStartFire())
    {
        Outer.Pawn.StartFire(4);
        return;
    }
    super.SwitchFire();
}

exec function SwitchFireRelease()
{
    if((Outer.Pawn != none) && (Outer.Pawn.Weapon == none) || Outer.Pawn.Weapon.ShouldWeaponIgnoreStartFire())
    {
        Outer.Pawn.StopFire(4);
        return;
    }
    super.SwitchFireRelease();
}

exec function Jump()
{
    local KFPawn_Monster KFPM;

    if(Outer.WorldInfo.Pauser == Outer.PlayerReplicationInfo)
    {
        Outer.SetPause(false);        
    }
    else
    {
        if(Outer.Pawn != none)
        {
            KFPM = KFPawn_Monster(Outer.Pawn);
            if(KFPM != none)
            {
                if(KFPM.GetSpecialMoveCooldownTimeRemainingByHandle(12) > 0)
                {
                    return;
                }
            }
        }
        Outer.bPressedJump = true;
    }
}

exec function Grenade()
{
    if((Outer.Pawn != none) && (Outer.Pawn.Weapon == none) || Outer.Pawn.Weapon.ShouldWeaponIgnoreStartFire())
    {
        Outer.Pawn.StartFire(6);
        return;
    }
    super.Grenade();
}

exec function QuickHeal()
{
    if((Outer.Pawn != none) && (Outer.Pawn.Weapon == none) || Outer.Pawn.Weapon.ShouldWeaponIgnoreStartFire())
    {
        Outer.Pawn.StartFire(5);
        return;
    }
    super.QuickHeal();
}

exec function GrenadeRelease()
{
    if((Outer.Pawn != none) && (Outer.Pawn.Weapon == none) || Outer.Pawn.Weapon.ShouldWeaponIgnoreStartFire())
    {
        Outer.Pawn.StopFire(6);
        return;
    }
    super.GrenadeRelease();
}

exec function ShowVoiceComms()
{
    if(Outer.PlayerReplicationInfo.GetTeamNum() == 255)
    {
        return;
    }
    super.ShowVoiceComms();
}
