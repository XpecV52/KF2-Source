/*******************************************************************************
 * KFSM_PlayerZedBlockBase generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFSM_PlayerZedBlockBase extends KFSM_PlaySingleAnim
    abstract;

var float MinimumBlockTime;

function SpecialMoveStarted(bool bForced, name PrevMove)
{
    super.SpecialMoveStarted(bForced, PrevMove);
    KFPawn_Monster(KFPOwner).bIsBlocking = true;
    if(KFPOwner.bIsSprinting)
    {
        KFPOwner.SetSprinting(false);
    }
    if(KFPOwner.IsLocallyControlled())
    {
        KFPOwner.SetTimer(MinimumBlockTime, false, 'Timer_CheckIfBlockReleased', self);
    }
}

function SpecialMoveEnded(name PrevMove, name NextMove)
{
    super.SpecialMoveEnded(PrevMove, NextMove);
    if(KFPOwner != none)
    {
        KFPOwner.ClearTimer('Timer_CheckIfBlockReleased', self);
        KFPOwner.StopBodyAnim(AnimStance, BlendOutTime);
        KFPawn_Monster(KFPOwner).bIsBlocking = false;
    }
}

function Timer_CheckIfBlockReleased()
{
    if(bPendingStopFire)
    {
        KFPOwner.EndSpecialMove();
        if((KFPOwner.Role < ROLE_Authority) && KFPOwner.IsLocallyControlled())
        {
            KFPOwner.ServerDoSpecialMove(0, true);
        }
    }
}

function SpecialMoveButtonRetriggered()
{
    bPendingStopFire = false;
}

function SpecialMoveButtonReleased()
{
    bPendingStopFire = true;
    if(KFPOwner.IsTimerActive('Timer_CheckIfBlockReleased', self))
    {
        return;
    }
    KFPOwner.EndSpecialMove();
    if((KFPOwner.Role < ROLE_Authority) && KFPOwner.IsLocallyControlled())
    {
        KFPOwner.ServerDoSpecialMove(0, true);
    }
}

defaultproperties
{
    MinimumBlockTime=0.4
    AnimStance=EAnimSlotStance.EAS_UpperBody
    bLoopAnim=true
    BlendInTime=0.2
    Handle=KFSM_PlayerBlockBase
}