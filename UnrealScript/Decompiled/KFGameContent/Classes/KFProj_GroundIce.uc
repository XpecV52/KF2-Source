/*******************************************************************************
 * KFProj_GroundIce generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFProj_GroundIce extends KFProjectile
    hidecategories(Navigation);

var() float DamageInterval;

function WarnAI(Vector Direction)
{
    local KFPawn_Monster KFPM;
    local Vector DangerPoint;

    DangerPoint = Location;
    foreach WorldInfo.AllPawns(Class'KFPawn_Monster', KFPM)
    {
        if((KFPM.MyKFAIC != none) && KFPM.IsAliveAndWell())
        {
            if(VSizeSq(KFPM.Location - Location) > 90000)
            {
                continue;                
            }
            if(Class'KFGameEngine'.static.FastTrace_PhysX(Location, KFPM.Location))
            {
                DangerPoint.Z = KFPM.Location.Z;
                KFPM.MyKFAIC.ReceiveLocationalWarning(DangerPoint, Location, self);
            }
        }        
    }    
}

simulated event ReplicatedEvent(name VarName)
{
    if(VarName == 'bHasExploded')
    {
        return;        
    }
    else
    {
        super.ReplicatedEvent(VarName);
    }
}

simulated function PostBeginPlay()
{
    local KFPlayerReplicationInfo InstigatorPRI;

    if(AltExploEffects != none)
    {
        InstigatorPRI = KFPlayerReplicationInfo(Instigator.PlayerReplicationInfo);
        if(InstigatorPRI != none)
        {
            bAltExploEffects = InstigatorPRI.bSplashActive;
        }        
    }
    else
    {
        bAltExploEffects = false;
    }
    TriggerExplosion(Location, vector(Rotation), none);
    super.PostBeginPlay();
}

simulated event Touch(Actor Other, PrimitiveComponent OtherComp, Vector HitLocation, Vector HitNormal);

protected simulated function PrepareExplosionActor(GameExplosionActor GEA)
{
    local KFExplosionActorLingering KFE_GroundFire;

    KFE_GroundFire = KFExplosionActorLingering(GEA);
    if(KFE_GroundFire != none)
    {
        KFE_GroundFire.interval = DamageInterval;
    }
}

protected simulated function PrepareExplosionTemplate()
{
    ExplosionTemplate.bIgnoreInstigator = true;
    if(bAltExploEffects)
    {
        ExplosionTemplate.ExplosionEffects = AltExploEffects;
    }
}

defaultproperties
{
    DamageInterval=0.25
    bAutoStartAmbientSound=true
    ExplosionActorClass=Class'KFExplosion_GroundIce'
    begin object name=ExploTemplate0 class=KFGameExplosion
        ExplosionEffects=KFImpactEffectInfo'WEP_CryoGun_ARCH.GroundCryo_Impacts'
        bAllowPerMaterialFX=true
        Damage=5
        DamageRadius=180
        MyDamageType=Class'KFGame.KFDT_Freeze_Ground'
        KnockDownStrength=0
        MomentumTransferScale=0
        FractureMeshRadius=0
        FracturePartVel=0
        CamShake=none
    object end
    // Reference: KFGameExplosion'Default__KFProj_GroundIce.ExploTemplate0'
    ExplosionTemplate=ExploTemplate0
    PostExplosionLifetime=2.5
    begin object name=CollisionCylinder class=CylinderComponent
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__KFProj_GroundIce.CollisionCylinder'
    CylinderComponent=CollisionCylinder
    begin object name=CollisionCylinder class=CylinderComponent
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__KFProj_GroundIce.CollisionCylinder'
    Components(0)=CollisionCylinder
    RemoteRole=ENetRole.ROLE_None
    begin object name=CollisionCylinder class=CylinderComponent
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__KFProj_GroundIce.CollisionCylinder'
    CollisionComponent=CollisionCylinder
}