/*******************************************************************************
 * KFWeap_PowerClaw_Matriarch generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFWeap_PowerClaw_Matriarch extends KFWeap_RifleBase
    config(Game)
    hidecategories(Navigation,Advanced,Collision,Mobile,Movement,Object,Physics,Attachment,Debug);

var float ChainMaxDist;
var array<ImpactInfo> Impacts;

simulated function StartFire(byte FireModeNum)
{
    Impacts.Length = 0;
    super(KFWeapon).StartFire(FireModeNum);
}

simulated function Projectile ProjectileFire()
{
    InstantFireClient();
    return none;
}

simulated function ProcessInstantHitEx(byte FiringMode, ImpactInfo Impact, optional int NumHits, optional out float out_PenetrationVal, optional int ImpactNum)
{
    local KFPawn HitPawn, NearbyPawn;
    local float DistSqToNearbyPawn, MaxDistSQ;
    local Vector StartTrace, EndTrace, TraceNormal, HitPawnBoneLocation, NearbyPawnBoneLocation;

    local array<KFPawn> SourcePawns, TargetPawns, HitPawns, NewHitPawns;
    local int I;
    local KFProj_Bullet_MatriarchTeslaBlast MatProj;

    if(Role == ROLE_Authority)
    {
        HitPawn = KFPawn(Impact.HitActor);
        if(HitPawn == none)
        {
            return;
        }
        HitPawns.AddItem(HitPawn;
        NewHitPawns.AddItem(HitPawn;
        SourcePawns.AddItem(KFPawn(Owner);
        TargetPawns.AddItem(HitPawn;
        Impacts.AddItem(Impact;
        MaxDistSQ = ChainMaxDist * ChainMaxDist;
        J0xEC:

        if(NewHitPawns.Length > 0)
        {
            HitPawn = NewHitPawns[0];
            NewHitPawns.Remove(0, 1;
            foreach WorldInfo.AllPawns(Class'KFPawn', NearbyPawn)
            {
                if(NearbyPawn == Owner)
                {
                    continue;                    
                }
                if(HitPawns.Find(NearbyPawn != -1)
                {
                    continue;                    
                }
                HitPawnBoneLocation = HitPawn.Mesh.GetBoneLocation(Class'KFPawn_ZedMatriarch'.default.GunTargetBoneName);
                NearbyPawnBoneLocation = NearbyPawn.Mesh.GetBoneLocation(Class'KFPawn_ZedMatriarch'.default.GunTargetBoneName);
                DistSqToNearbyPawn = VSizeSq(NearbyPawnBoneLocation - HitPawnBoneLocation);
                if(DistSqToNearbyPawn < MaxDistSQ)
                {
                    TraceNormal = Normal(NearbyPawnBoneLocation - HitPawnBoneLocation);
                    StartTrace = HitPawnBoneLocation + (TraceNormal * HitPawn.GetCollisionRadius());
                    EndTrace = NearbyPawnBoneLocation + (TraceNormal * NearbyPawn.GetCollisionRadius());
                    Impact = CalcWeaponFire(StartTrace, EndTrace);
                    if(Impact.HitActor == NearbyPawn)
                    {
                        HitPawns.AddItem(NearbyPawn;
                        NewHitPawns.AddItem(NearbyPawn;
                        SourcePawns.AddItem(HitPawn;
                        TargetPawns.AddItem(NearbyPawn;
                        Impacts.AddItem(Impact;
                    }
                }                
            }            
            goto J0xEC;
        }
        I = 0;
        J0x3F2:

        if(I < Impacts.Length)
        {
            super.ProcessInstantHitEx(FiringMode, Impacts[I], NumHits, out_PenetrationVal);
            MatProj = Spawn(Class'KFProj_Bullet_MatriarchTeslaBlast', self,, Impacts[I].StartTrace, rotator(Impacts[I].RayDir),, true);
            MatProj.SourcePawn = SourcePawns[I];
            MatProj.TargetPawn = TargetPawns[I];
            MatProj.bSyncToOriginalLocation = I == 0;
            MatProj.Init(Impacts[I].RayDir);
            MatProj.bForceNetUpdate = true;
            if(WorldInfo.NetMode != NM_DedicatedServer)
            {
                MatProj.ActivateVFX();
            }
            MatProj.ShutDown();
            ++ I;
            goto J0x3F2;
        }
    }
}

simulated function ConsumeAmmo(byte FireModeNum);

simulated function StopPawnSprint(bool bClearPlayerInput);

simulated state Active
{
    ignores GotoWeaponSprinting;
    stop;    
}

defaultproperties
{
    ChainMaxDist=650
    WeaponContentLoaded=true
    bHasIronSights=true
    bUseAnimLenEquipTime=false
    SingleFireSoundIndex=1
    InventorySize=6
    MeshFOV=75
    MeshIronSightFOV=33
    PlayerIronSightFOV=70
    GroupPriority=50
    MagazineCapacity=60
    SpareAmmoCapacity=270
    InitialSpareMags=3
    bLoopingFireAnim=/* Array type was not detected. */
    bLoopingFireSnd=/* Array type was not detected. */
    WeaponFireSnd=/* Array type was not detected. */
    WeaponDryFireSnd=/* Array type was not detected. */
    PlayerViewOffset=(X=2,Y=8,Z=-3)
    AttachmentArchetype=KFWeaponAttachment'WEP_Matriarch_ARCH.Wep_Matriarch_PowerClaw_3P'
    MeleeAttackHelper=KFMeleeHelperWeapon'Default__KFWeap_PowerClaw_Matriarch.MeleeHelper'
    MuzzleFlashTemplate=KFMuzzleFlash'ZED_Matriarch_ARCH.Tesla_Blast_MuzzleFlash_Arch'
    maxRecoilPitch=200
    minRecoilPitch=150
    maxRecoilYaw=175
    minRecoilYaw=-125
    RecoilRate=0.085
    RecoilMaxYawLimit=500
    RecoilMinYawLimit=65035
    RecoilMaxPitchLimit=900
    RecoilMinPitchLimit=65035
    RecoilISMaxYawLimit=75
    RecoilISMinYawLimit=65460
    RecoilISMaxPitchLimit=375
    RecoilISMinPitchLimit=65460
    IronSightMeshFOVCompensationScale=2.5
    AssociatedPerkClasses=/* Array type was not detected. */
    FiringStatesArray=/* Array type was not detected. */
    WeaponFireTypes=/* Array type was not detected. */
    WeaponProjectiles=/* Array type was not detected. */
    FireInterval=/* Array type was not detected. */
    Spread=/* Array type was not detected. */
    InstantHitDamage=/* Array type was not detected. */
    InstantHitDamageTypes=/* Array type was not detected. */
    FireOffset=(X=32,Y=4,Z=-5)
    bCanThrow=false
    begin object name=FirstPersonMesh class=KFSkeletalMeshComponent
        ReplacementPrimitive=none
    object end
    // Reference: KFSkeletalMeshComponent'Default__KFWeap_PowerClaw_Matriarch.FirstPersonMesh'
    Mesh=FirstPersonMesh
    bDropOnDeath=false
    begin object name=StaticPickupComponent class=StaticMeshComponent
        ReplacementPrimitive=none
    object end
    // Reference: StaticMeshComponent'Default__KFWeap_PowerClaw_Matriarch.StaticPickupComponent'
    DroppedPickupMesh=StaticPickupComponent
    begin object name=StaticPickupComponent class=StaticMeshComponent
        ReplacementPrimitive=none
    object end
    // Reference: StaticMeshComponent'Default__KFWeap_PowerClaw_Matriarch.StaticPickupComponent'
    PickupFactoryMesh=StaticPickupComponent
}