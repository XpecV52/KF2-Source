/*******************************************************************************
 * AICommand_Patriarch_MortarAttack generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class AICommand_Patriarch_MortarAttack extends AICommand_SpecialMove within KFAIController_ZedPatriarch;

var bool bDoBarrage;

static function bool FireMortar(KFAIController_ZedPatriarch AI, bool bIsBarrageAttack)
{
    local AICommand_Patriarch_MortarAttack Cmd;

    if(AI != none)
    {
        Cmd = new (AI) default.Class;
        if(Cmd != none)
        {
            Cmd.bDoBarrage = bIsBarrageAttack;
            AI.PushCommand(Cmd);
            return true;
        }
    }
    return false;
}

function Pushed()
{
    super.Pushed();
    Outer.StopAllLatentMovement();
    Outer.AIZeroMovementVariables();
    if(Outer.Enemy != none)
    {
        Outer.Focus = Outer.Enemy;
    }
    Outer.AIActionStatus = "Starting Mortar Attack AICommand";
    if(Outer.Focus != none)
    {
        Outer.SetDesiredRotation(rotator(Outer.Focus.Location - Outer.Pawn.Location));
    }
    Outer.DisableMeleeRangeEventProbing();
    Outer.bCanEvaluateAttacks = false;
}

function Popped()
{
    Outer.AIActionStatus = "Finished Mortar Attack AICommand";
    Outer.MyPatPawn.ClearMortarTargets();
    super.Popped();
}

state Command_SpecialMove
{
    function bool IsSpecialMoveComplete()
    {
        if(((!Outer.bPreparingMove || Outer.MyKFPawn == none) || Outer.MyKFPawn.SpecialMove == 0) || Outer.MyKFPawn.SpecialMove != GetSpecialMove())
        {
            return true;
        }
        return false;
    }

    function byte GetSpecialMoveFlags(KFGame.KFPawn.ESpecialMove InSpecialMove)
    {
        if(Outer.bRaging)
        {
            return 1;            
        }
        else
        {
            if(bDoBarrage)
            {
                return 2;
            }
        }
        return 0;
    }

    function KFGame.KFPawn.ESpecialMove GetSpecialMove()
    {
        return 20;
    }
    stop;    
}

defaultproperties
{
    bShouldCheckSpecialMove=true
    TimeOutDelaySeconds=25
    bIgnoreNotifies=true
}