/*******************************************************************************
 * KFSeasonalEventStats_Fall2022 generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFSeasonalEventStats_Fall2022 extends KFSeasonalEventStats within KFOnlineStatsWrite;

var private const transient int BossKillsRequired;
var private const transient int ZedsInBonfiresRequired;
var private const transient int EndlessWaveRequired;

private final event Initialize(string MapName)
{
    local string CapsMapName;

    CapsMapName = Caps(MapName);
    bObjectiveIsValidForMap[0] = 1;
    bObjectiveIsValidForMap[1] = 0;
    bObjectiveIsValidForMap[2] = 0;
    bObjectiveIsValidForMap[3] = 0;
    bObjectiveIsValidForMap[4] = 0;
    if(CapsMapName == "KF-BARMWICHTOWN")
    {
        bObjectiveIsValidForMap[1] = 1;
        bObjectiveIsValidForMap[2] = 1;
        bObjectiveIsValidForMap[3] = 1;
        bObjectiveIsValidForMap[4] = 1;
    }
    SetSeasonalEventStatsMax(BossKillsRequired, 0, 0, ZedsInBonfiresRequired, EndlessWaveRequired);
}

private final event GrantEventItems()
{
    if((((Outer.IsEventObjectiveComplete(0) && Outer.IsEventObjectiveComplete(1)) && Outer.IsEventObjectiveComplete(2)) && Outer.IsEventObjectiveComplete(3)) && Outer.IsEventObjectiveComplete(4))
    {
        GrantEventItem(9424);
    }
}

simulated function OnBossDied()
{
    local int ObjIdx;

    ObjIdx = 0;
    if(bObjectiveIsValidForMap[ObjIdx] != 0)
    {
        IncrementSeasonalEventStat(ObjIdx, 1);
        if(Outer.GetSeasonalEventStatValue(ObjIdx) >= BossKillsRequired)
        {
            FinishedObjective(3, ObjIdx);
        }
    }
}

simulated event OnGameWon(class<GameInfo> GameClass, int Difficulty, int GameLength, bool bCoop)
{
    local int ObjIdx;

    ObjIdx = 1;
    if(bObjectiveIsValidForMap[ObjIdx] != 0)
    {
        if(GameClass == Class'KFGameInfo_WeeklySurvival')
        {
            FinishedObjective(3, ObjIdx);
        }
    }
}

simulated event OnWaveCompleted(class<GameInfo> GameClass, int Difficulty, int WaveNum)
{
    local int ObjIdx;

    ObjIdx = 4;
    if(bObjectiveIsValidForMap[ObjIdx] != 0)
    {
        if(((WaveNum >= EndlessWaveRequired) && GameClass == Class'KFGameInfo_Endless') && float(Difficulty) >= 1)
        {
            FinishedObjective(3, ObjIdx);
        }
    }
}

simulated function OnTryCompleteObjective(int ObjectiveIndex, int EventIndex)
{
    local int WeaponRoomIdx, BonfireIdx;

    WeaponRoomIdx = 2;
    BonfireIdx = 3;
    if(EventIndex == 3)
    {
        if(ObjectiveIndex == WeaponRoomIdx)
        {
            if(bObjectiveIsValidForMap[ObjectiveIndex] != 0)
            {
                FinishedObjective(3, ObjectiveIndex);
            }            
        }
        else
        {
            if(ObjectiveIndex == BonfireIdx)
            {
                if(bObjectiveIsValidForMap[ObjectiveIndex] != 0)
                {
                    IncrementSeasonalEventStat(ObjectiveIndex, 1);
                    if(Outer.GetSeasonalEventStatValue(ObjectiveIndex) >= ZedsInBonfiresRequired)
                    {
                        FinishedObjective(3, ObjectiveIndex);
                    }
                }
            }
        }
    }
}

defaultproperties
{
    BossKillsRequired=15
    ZedsInBonfiresRequired=50
    EndlessWaveRequired=15
}