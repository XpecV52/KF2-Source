/*******************************************************************************
 * KFPawn_ZedHusk_Versus generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFPawn_ZedHusk_Versus extends KFPawn_ZedHusk
    config(Game)
    hidecategories(Navigation);

var protected const float FireballSpeed;
var protected const Vector2D FireballStrengthRange;
var protected const float FireballStrengthPerSecond;
var protected const float FireballStrengthRadiusMultiplier;
var protected float FireballStrength;

simulated function ANIMNOTIFY_FlameThrowerOn()
{
    if(IsDoingSpecialMove(24))
    {
        KFSM_Husk_FlameThrowerAttack(SpecialMoves[SpecialMove]).TurnOnFlamethrower();
    }
}

function ANIMNOTIFY_HuskFireballAttack()
{
    local float FireballStartTime;

    if(IsDoingSpecialMove(23))
    {
        FireballStartTime = KFSM_PlayerHusk_FireBallAttack(SpecialMoves[SpecialMove]).HoldStartTime;
        FireballStrength = FClamp((WorldInfo.TimeSeconds - FireballStartTime) * FireballStrengthPerSecond, FireballStrengthRange.X, FireballStrengthRange.Y);        
    }
    else
    {
        FireballStrength = 1;
    }
    ShootFireball();
}

function ShootFireball()
{
    local PlayerController PC;
    local KFProjectile MyFireball;
    local KFProj_Husk_Fireball_Versus HuskFireball;
    local Actor HitActor;
    local Vector SocketLocation;
    local Rotator ShootRotation;
    local Vector HitLocation, HitNormal, Dir, TraceStart, TraceEnd;

    if((((Role == ROLE_Authority) && float(Health) > 0) && IsDoingSpecialMove(23)) && IsHumanControlled())
    {
        PC = PlayerController(Controller);
        if(PC == none)
        {
            return;
        }
        Mesh.GetSocketWorldLocationAndRotation('FireballSocket', SocketLocation);
        Dir = vector(Rotation);
        TraceStart = PC.PlayerCamera.CameraCache.POV.Location;
        TraceEnd = PC.PlayerCamera.CameraCache.POV.Location + (vector(PC.PlayerCamera.CameraCache.POV.Rotation) * float(100000));
        MyFireball = Spawn(FireballClass, self,, SocketLocation, Rotation);
        if(MyFireball == none)
        {
            return;
        }
        MyFireball.Instigator = self;
        MyFireball.InstigatorController = Controller;
        MyFireball.Speed = FireballSpeed;
        MyFireball.MaxSpeed = FireballSpeed;
        MyFireball.ExplosionTemplate.Damage = float(GetRallyBoostDamage(int(MyFireball.default.ExplosionTemplate.Damage))) * FireballStrength;
        MyFireball.ExplosionTemplate.DamageRadius = MyFireball.default.ExplosionTemplate.DamageRadius * (FireballStrength * FireballStrengthRadiusMultiplier);
        foreach TraceActors(Class'Actor', HitActor, HitLocation, HitNormal, TraceEnd, TraceStart,,, 1)
        {
            if((HitActor == self) || !HitActor.StopsProjectile(MyFireball))
            {
                HitActor = none;
                continue;                
            }
            if((Normal(HitActor.Location - SocketLocation) Dot Dir) < 0)
            {
                HitActor = none;
                continue;                
            }
            break;            
        }        
        if(HitActor != none)
        {
            ShootRotation = rotator(HitLocation - SocketLocation);            
        }
        else
        {
            ShootRotation = rotator(TraceEnd - SocketLocation);
        }
        MyFireball.SetRotation(ShootRotation);
        HuskFireball = KFProj_Husk_Fireball_Versus(MyFireball);
        if(HuskFireball != none)
        {
            HuskFireball.SetDrawScale(FMax(FireballStrength, 1));
        }
        MyFireball.Init(vector(ShootRotation));
    }
}

simulated function OnExploded(Controller SuicideController)
{
    local KFPlayerController KFPC;

    if(SuicideController != none)
    {
        KFPC = KFPlayerController(SuicideController);
        if(KFPC != none)
        {
            KFPC.SetCameraMode('ZedSuicide');
            KFPlayerCamera_Versus(KFPC.PlayerCamera).SwapToZedSuicideCam(Location);
        }
    }
}

simulated function bool UseAdjustedControllerSensitivity()
{
    return IsDoingSpecialMove(23);
}

simulated function Vector2D GetFireballStrengthRange()
{
    return FireballStrengthRange;
}

simulated function float GetFireballStrengthPerSecond()
{
    return FireballStrengthPerSecond;
}

defaultproperties
{
    FireballSpeed=4200
    FireballStrengthRange=(X=0.5,Y=1.3)
    FireballStrengthPerSecond=0.4
    FireballStrengthRadiusMultiplier=0.7
    FireballClass=Class'KFProj_Husk_Fireball_Versus'
    PlayerFireOffset=(X=15,Y=32,Z=-12)
    begin object name=ExploTemplate0 class=KFGameExplosion
        ExplosionEffects=KFImpactEffectInfo'FX_Impacts_ARCH.Explosions.HuskSuicide_Explosion'
        Damage=125
        DamageRadius=600
        DamageFalloffExponent=0.5
        MyDamageType=Class'KFDT_Explosive_HuskSuicide'
        MomentumTransferScale=1
        ExplosionSound=AkEvent'WW_ZED_Husk.ZED_Husk_SFX_Suicide_Explode'
        ExploLight=PointLightComponent'Default__KFPawn_ZedHusk_Versus.ExplosionPointLight'
        ExploLightFadeOutTime=0.5
        CamShake=KFCameraShake'FX_CameraShake_Arch.Misc_Explosions.HuskSuicide'
    object end
    // Reference: KFGameExplosion'Default__KFPawn_ZedHusk_Versus.ExploTemplate0'
    ExplosionTemplate=ExploTemplate0
    bVersusZed=true
    ThirdPersonViewOffset=(OffsetHigh=(X=-175,Y=75,Z=40),OffsetMid=(X=-160,Y=60,Z=0),OffsetLow=(X=-220,Y=75,Z=50))
    begin object name=MeleeHelper class=KFMeleeHelperAI
        PlayerDoorDamageMultiplier=5
        MeleeImpactCamScale=0.2
    object end
    // Reference: KFMeleeHelperAI'Default__KFPawn_ZedHusk_Versus.MeleeHelper'
    MeleeAttackHelper=MeleeHelper
    DoshValue=20
    XPValues=30
    DamageTypeModifiers=/* Array type was not detected. */
    MoveListGamepadScheme=/* Array type was not detected. */
    SpecialMoveCooldowns=/* Array type was not detected. */
    begin object name=ThirdPersonHead0 class=SkeletalMeshComponent
        ReplacementPrimitive=none
    object end
    // Reference: SkeletalMeshComponent'Default__KFPawn_ZedHusk_Versus.ThirdPersonHead0'
    ThirdPersonHeadMeshComponent=ThirdPersonHead0
    bNeedsCrosshair=true
    HitZones=/* Array type was not detected. */
    AfflictionHandler=KFAfflictionManager'Default__KFPawn_ZedHusk_Versus.Afflictions'
    IncapSettings=/* Array type was not detected. */
    SprintSpeed=550
    SprintStrafeSpeed=425
    TeammateCollisionRadiusPercent=0.3
    begin object name=FirstPersonArms class=KFSkeletalMeshComponent
        ReplacementPrimitive=none
    object end
    // Reference: KFSkeletalMeshComponent'Default__KFPawn_ZedHusk_Versus.FirstPersonArms'
    ArmsMesh=FirstPersonArms
    begin object name=SpecialMoveHandler class=KFSpecialMoveHandler
        SpecialMoveClasses=/* Array type was not detected. */
    object end
    // Reference: KFSpecialMoveHandler'Default__KFPawn_ZedHusk_Versus.SpecialMoveHandler'
    SpecialMoveHandler=SpecialMoveHandler
    AmbientAkComponent=AkComponent'Default__KFPawn_ZedHusk_Versus.AmbientAkSoundComponent_1'
    WeaponAkComponent=AkComponent'Default__KFPawn_ZedHusk_Versus.AmbientAkSoundComponent'
    WeaponAmbientEchoHandler=KFWeaponAmbientEchoHandler'Default__KFPawn_ZedHusk_Versus.WeaponAmbientEchoHandler'
    FootstepAkComponent=AkComponent'Default__KFPawn_ZedHusk_Versus.FootstepAkSoundComponent'
    DialogAkComponent=AkComponent'Default__KFPawn_ZedHusk_Versus.DialogAkSoundComponent'
    GroundSpeed=250
    Health=600
    begin object name=KFPawnSkeletalMeshComponent class=KFSkeletalMeshComponent
        ReplacementPrimitive=none
    object end
    // Reference: KFSkeletalMeshComponent'Default__KFPawn_ZedHusk_Versus.KFPawnSkeletalMeshComponent'
    Mesh=KFPawnSkeletalMeshComponent
    begin object name=CollisionCylinder class=CylinderComponent
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__KFPawn_ZedHusk_Versus.CollisionCylinder'
    CylinderComponent=CollisionCylinder
    begin object name=Sprite class=SpriteComponent
        ReplacementPrimitive=none
    object end
    // Reference: SpriteComponent'Default__KFPawn_ZedHusk_Versus.Sprite'
    Components(0)=Sprite
    begin object name=CollisionCylinder class=CylinderComponent
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__KFPawn_ZedHusk_Versus.CollisionCylinder'
    Components(1)=CollisionCylinder
    begin object name=Arrow class=ArrowComponent
        ReplacementPrimitive=none
    object end
    // Reference: ArrowComponent'Default__KFPawn_ZedHusk_Versus.Arrow'
    Components(2)=Arrow
    begin object name=KFPawnSkeletalMeshComponent class=KFSkeletalMeshComponent
        ReplacementPrimitive=none
    object end
    // Reference: KFSkeletalMeshComponent'Default__KFPawn_ZedHusk_Versus.KFPawnSkeletalMeshComponent'
    Components(3)=KFPawnSkeletalMeshComponent
    Components(4)=AkComponent'Default__KFPawn_ZedHusk_Versus.AmbientAkSoundComponent'
    Components(5)=AkComponent'Default__KFPawn_ZedHusk_Versus.AmbientAkSoundComponent_1'
    Components(6)=AkComponent'Default__KFPawn_ZedHusk_Versus.FootstepAkSoundComponent'
    Components(7)=AkComponent'Default__KFPawn_ZedHusk_Versus.DialogAkSoundComponent'
    begin object name=CollisionCylinder class=CylinderComponent
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__KFPawn_ZedHusk_Versus.CollisionCylinder'
    CollisionComponent=CollisionCylinder
}