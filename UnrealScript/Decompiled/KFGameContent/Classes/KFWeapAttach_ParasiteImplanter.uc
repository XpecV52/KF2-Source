/*******************************************************************************
 * KFWeapAttach_ParasiteImplanter generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFWeapAttach_ParasiteImplanter extends KFWeaponAttachment
    hidecategories(Navigation,Object,Movement,Attachment,Collision,Physics,Advanced,Debug,Mobile);

const SecondaryFireAnim = 'Shoot_Secondary';
const SecondaryFireAnimCrouch = 'Shoot_Secondary_CH';
const SecondaryFireIronAnim = 'Shoot_Secondary_Iron';
const SecondaryFireBodyAnim = 'ADD_Shoot_Secondary';
const SecondaryFireBodyAnimCH = 'ADD_Shoot_Secondary_CH';
const SecondaryFireBodyAnimIron = 'ADD_Shoot_Secondary_Iron';

var LinearColor NoAmmoMaterialColor;
var LinearColor AmmoReadyMaterialColor;

simulated function PlayWeaponFireAnim()
{
    local float Duration;
    local name Anim;

    if(Instigator.bIsWalking)
    {
        if(Instigator.FiringMode == 0)
        {
            Anim = 'Iron_Shoot';            
        }
        else
        {
            if(Instigator.FiringMode == 1)
            {
                Anim = 'Shoot_Secondary_Iron';
            }
        }        
    }
    else
    {
        if(Instigator.FiringMode == 0)
        {
            Anim = 'Shoot';            
        }
        else
        {
            if(Instigator.FiringMode == 1)
            {
                Anim = ((Instigator.bIsCrouched) ? 'Shoot_Secondary_CH' : 'Shoot_Secondary');
            }
        }
    }
    Duration = WeapMesh.GetAnimLength(Anim);
    WeapMesh.PlayAnim(Anim, Duration / ThirdPersonAnimRate,, true);
}

simulated function PlayPawnFireAnim(KFPawn P, KFGame.KFPawn.EAnimSlotStance AnimType)
{
    if(P.FiringMode == 0)
    {
        super.PlayPawnFireAnim(P, AnimType);        
    }
    else
    {
        if(P.FiringMode == 1)
        {
            if(P.bIsCrouched)
            {
                P.PlayBodyAnim('ADD_Shoot_Secondary_CH', AnimType, ThirdPersonAnimRate, ShootBlendInTime, ShootBlendOutTime);                
            }
            else
            {
                if(P.bIsWalking)
                {
                    P.PlayBodyAnim('ADD_Shoot_Secondary_Iron', AnimType, ThirdPersonAnimRate, ShootBlendInTime, ShootBlendOutTime);                    
                }
                else
                {
                    P.PlayBodyAnim('ADD_Shoot_Secondary', AnimType, ThirdPersonAnimRate, ShootBlendInTime, ShootBlendOutTime);
                }
            }
        }
    }
}

function OnSpecialEvent(int Arg)
{
    if(Arg <= 2)
    {
        UpdateMaterial(Arg == 2);
    }
}

simulated function UpdateMaterial(bool HasEnoughAmmo)
{
    local LinearColor Value;

    Value = ((HasEnoughAmmo) ? AmmoReadyMaterialColor : NoAmmoMaterialColor);
    if((WeaponMIC == none) && WeapMesh != none)
    {
        WeaponMIC = WeapMesh.CreateAndSetMaterialInstanceConstant(0);
    }
    WeaponMIC.SetVectorParameterValue('Vector_GlowColor', Value);
}

defaultproperties
{
    NoAmmoMaterialColor=(R=0,G=0,B=0,A=1)
    AmmoReadyMaterialColor=(R=0.08,G=1,B=0.08,A=1)
    begin object name=SkeletalMeshComponent0 class=SkeletalMeshComponent
        Animations=AnimNodeSequence'Default__KFWeapAttach_ParasiteImplanter.SkeletalMeshComponent0.MeshSequenceA'
        ReplacementPrimitive=none
    object end
    // Reference: SkeletalMeshComponent'Default__KFWeapAttach_ParasiteImplanter.SkeletalMeshComponent0'
    WeapMesh=SkeletalMeshComponent0
}