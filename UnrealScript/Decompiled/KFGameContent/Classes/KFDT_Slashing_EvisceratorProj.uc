/*******************************************************************************
 * KFDT_Slashing_EvisceratorProj generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFDT_Slashing_EvisceratorProj extends KFDT_Slashing
    abstract;

static simulated function bool CanDismemberHitZone(name InHitZoneName)
{
    return true;
}

static simulated function KFGame.KFPawn.EPawnOctant GetLastSlashDirection(KFPawn_Monster inPawn, Vector HitDirection)
{
    local Vector SlashPlaneNormal;
    local Rotator InstigatorRotation;
    local Vector InstigatorFaceDir, InstigatorRightDir;
    local float UpDotSlash, RightDotSlash, UpThresholdValue;

    if(inPawn != none)
    {
        HitDirection = Normal(HitDirection);
        InstigatorRotation = inPawn.GetBaseAimRotation();
        InstigatorFaceDir = GetRotatorAxis(InstigatorRotation, 0);
        InstigatorRightDir = GetRotatorAxis(InstigatorRotation, 1);
        SlashPlaneNormal = Normal(InstigatorFaceDir Cross HitDirection);
        UpDotSlash = vect(0, 0, 1) Dot SlashPlaneNormal;
        UpThresholdValue = Abs(UpDotSlash);
        RightDotSlash = InstigatorRightDir Dot SlashPlaneNormal;
        if((UpThresholdValue <= float(1)) && UpThresholdValue >= 0.94)
        {
            if(UpDotSlash > float(0))
            {
                return 3;                
            }
            else
            {
                return 2;
            }            
        }
        else
        {
            if((UpThresholdValue <= 0.94) && UpThresholdValue >= 0.34)
            {
                if((UpDotSlash < float(0)) && RightDotSlash > float(0))
                {
                    return 4;                    
                }
                else
                {
                    if((UpDotSlash > float(0)) && RightDotSlash > float(0))
                    {
                        return 5;                        
                    }
                    else
                    {
                        if((UpDotSlash > float(0)) && RightDotSlash < float(0))
                        {
                            return 7;                            
                        }
                        else
                        {
                            if((UpDotSlash < float(0)) && RightDotSlash < float(0))
                            {
                                return 6;
                            }
                        }
                    }
                }                
            }
            else
            {
                if((UpThresholdValue <= 0.34) && UpThresholdValue >= float(0))
                {
                    if(RightDotSlash > float(0))
                    {
                        return 0;                        
                    }
                    else
                    {
                        return 1;
                    }
                }
            }
        }
    }
    return 8;
}

static simulated function GetBoneToDismember(KFPawn_Monster inPawn, Vector HitDirection, name InHitZoneName, out name OutBoneName)
{
    local KFGame.KFPawn.EPawnOctant SlashDir;
    local MeleeSpecialDismembermentInfo SpecialDismembermentInfo;
    local KFCharacterInfo_Monster MonsterInfo;

    MonsterInfo = inPawn.GetCharacterMonsterInfo();
    if(MonsterInfo != none)
    {
        SpecialDismembermentInfo = MonsterInfo.SpecialMeleeDismemberment;
    }
    SlashDir = GetLastSlashDirection(inPawn, HitDirection);
    if((SlashDir == 0) || SlashDir == 1)
    {
        if((InHitZoneName == 'chest') || InHitZoneName == 'head')
        {
            if(SpecialDismembermentInfo.bAllowVerticalSplit)
            {
                OutBoneName = ((Rand(2) == 0) ? SpecialDismembermentInfo.LeftShoulderBoneName : SpecialDismembermentInfo.RightShoulderBoneName);
            }
        }        
    }
    else
    {
        if((SlashDir == 2) || SlashDir == 3)
        {
            if(((InHitZoneName == 'chest') || InHitZoneName == 'abdomen') || InHitZoneName == 'stomach')
            {
                if(SpecialDismembermentInfo.bAllowHorizontalSplit)
                {
                    OutBoneName = SpecialDismembermentInfo.SpineBoneName;
                }
            }            
        }
        else
        {
            if((SlashDir == 4) || SlashDir == 7)
            {
                if(InHitZoneName == 'chest')
                {
                    if(SpecialDismembermentInfo.bAllowVerticalSplit)
                    {
                        OutBoneName = SpecialDismembermentInfo.RightShoulderBoneName;
                    }                    
                }
                else
                {
                    if(InHitZoneName == 'head')
                    {
                        if(SpecialDismembermentInfo.bAllowVerticalSplit)
                        {
                            if(Rand(2) == 0)
                            {
                                OutBoneName = SpecialDismembermentInfo.RightShoulderBoneName;
                            }
                        }
                    }
                }                
            }
            else
            {
                if((SlashDir == 5) || SlashDir == 6)
                {
                    if(InHitZoneName == 'chest')
                    {
                        if(SpecialDismembermentInfo.bAllowVerticalSplit)
                        {
                            OutBoneName = SpecialDismembermentInfo.LeftShoulderBoneName;
                        }                        
                    }
                    else
                    {
                        if(InHitZoneName == 'head')
                        {
                            if(SpecialDismembermentInfo.bAllowVerticalSplit)
                            {
                                if(Rand(2) == 0)
                                {
                                    OutBoneName = SpecialDismembermentInfo.LeftShoulderBoneName;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

defaultproperties
{
    AARWeaponID=7
    StunPower=42
    StumblePower=60
    LegStumblePower=60
    GunHitPower=150
    bNoInstigatorDamage=true
    ModifierPerkList=/* Array type was not detected. */
    KDamageImpulse=1000
    KDeathVel=135
    KDeathUpKick=800
}