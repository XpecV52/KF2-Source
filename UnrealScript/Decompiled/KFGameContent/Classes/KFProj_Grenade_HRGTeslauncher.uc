/*******************************************************************************
 * KFProj_Grenade_HRGTeslauncher generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFProj_Grenade_HRGTeslauncher extends KFProj_EMPGrenade
    hidecategories(Navigation);

var array<Actor> ImpactList;

simulated function ProcessTouch(Actor Other, Vector HitLocation, Vector HitNormal)
{
    local float TraveledDistance;

    if(Other.IsA('KFTrigger_SirenProjectileShield'))
    {
        return;
    }
    if(Other.GetTeamNum() == GetTeamNum())
    {
        return;
    }
    TraveledDistance = (WorldInfo.TimeSeconds - CreationTime) * Speed;
    TraveledDistance *= TraveledDistance;
    if((Other != Instigator) && !Other.bStatic)
    {
        if(!CheckRepeatingTouch(Other) && Other.GetTeamNum() != GetTeamNum())
        {
            ProcessBulletTouch(Other, HitLocation, HitNormal);
        }
    }
    if((WorldInfo.NetMode == NM_Standalone) || ((WorldInfo.NetMode == NM_ListenServer) && Instigator != none) && Instigator.IsLocallyControlled())
    {
        super(KFProj_Grenade).ProcessTouch(Other, HitLocation, HitNormal);
        if(!bHasExploded && !bHasDisintegrated)
        {
            GetExplodeEffectLocation(HitLocation, HitNormal, Other);
            TriggerExplosion(HitLocation, HitNormal, Other);
        }
        return;
    }
    if(((Owner != none) && KFWeapon(Owner) != none) && Instigator != none)
    {
        if((Instigator.Role < ROLE_Authority) && Instigator.IsLocallyControlled())
        {
            KFWeapon(Owner).HandleClientProjectileExplosion(HitLocation, self);
            super(KFProj_Grenade).ProcessTouch(Other, HitLocation, HitNormal);
            if(!bHasExploded && !bHasDisintegrated)
            {
                GetExplodeEffectLocation(HitLocation, HitNormal, Other);
                TriggerExplosion(HitLocation, HitNormal, Other);
            }
            return;
        }
    }
}

simulated function ProcessBulletTouch(Actor Other, Vector HitLocation, Vector HitNormal)
{
    if(ImpactList.Find(Other != -1)
    {
        return;
    }
    if(Other != none)
    {
        ImpactList.AddItem(Other;
    }
    super(KFProjectile).ProcessBulletTouch(Other, HitLocation, HitNormal);
}

simulated event HitWall(Vector HitNormal, Actor Wall, PrimitiveComponent WallComp)
{
    if((StaticMeshComponent(WallComp) != none) && StaticMeshComponent(WallComp).CanBecomeDynamic())
    {
        return;
    }
    Explode(Location, HitNormal);
}

protected simulated function PrepareExplosionTemplate()
{
    Class'KFPerk_Berserker'.static.PrepareExplosive(Instigator, self);
    super(KFProj_Grenade).PrepareExplosionTemplate();
}

defaultproperties
{
    bSyncToOriginalLocation=true
    bSyncToThirdPersonMuzzleLocation=true
    bWarnAIWhenFired=true
    TossZ=150
    TerminalVelocity=4000
    begin object name=ExploTemplate0 class=KFGameExplosion
        ExplosionEffects=KFImpactEffectInfo'FX_Impacts_ARCH.Explosions.EMPGrenade_Explosion'
        Damage=25
        DamageRadius=350
        MyDamageType=Class'KFDT_EMP_TeslauncherEMPGrenade'
        ExplosionSound=AkEvent'WW_WEP_EXP_Grenade_EMP.Play_WEP_EXP_Grenade_EMP_Explosion'
        ExploLight=PointLightComponent'Default__KFProj_Grenade_HRGTeslauncher.ExplosionPointLight'
        ExploLightFadeOutTime=0.25
        ExploLightStartFadeOutTime=0.5
        ExploLightFlickerIntensity=5
        ExploLightFlickerInterpSpeed=15
        FractureMeshRadius=100
        FracturePartVel=250
        CamShake=KFCameraShake'FX_CameraShake_Arch.Grenades.Default_Grenade'
        CamShakeInnerRadius=100
        CamShakeOuterRadius=450
        CamShakeFalloff=1.5
    object end
    // Reference: KFGameExplosion'Default__KFProj_Grenade_HRGTeslauncher.ExploTemplate0'
    ExplosionTemplate=ExploTemplate0
    ProjFlightTemplate=ParticleSystem'WEP_HRG_Teslauncher_EMIT.FX_Medic_GrenadeLauncher_Projectile'
    ProjFlightTemplateZedTime=ParticleSystem'WEP_HRG_Teslauncher_EMIT.FX_Medic_GrenadeLauncher_Projectile_ZEDTIME'
    Speed=4000
    MaxSpeed=4000
    begin object name=CollisionCylinder class=CylinderComponent
        CollisionHeight=0
        CollisionRadius=0
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__KFProj_Grenade_HRGTeslauncher.CollisionCylinder'
    CylinderComponent=CollisionCylinder
    begin object name=CollisionCylinder class=CylinderComponent
        CollisionHeight=0
        CollisionRadius=0
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__KFProj_Grenade_HRGTeslauncher.CollisionCylinder'
    Components(0)=CollisionCylinder
    begin object name=CollisionCylinder class=CylinderComponent
        CollisionHeight=0
        CollisionRadius=0
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__KFProj_Grenade_HRGTeslauncher.CollisionCylinder'
    CollisionComponent=CollisionCylinder
}