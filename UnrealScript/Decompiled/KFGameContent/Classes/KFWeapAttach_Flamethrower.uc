/*******************************************************************************
 * KFWeapAttach_Flamethrower generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFWeapAttach_Flamethrower extends KFWeapAttach_SprayBase
    hidecategories(Navigation,Object,Movement,Attachment,Collision,Physics,Advanced,Debug,Mobile);

/** Effect for the pilot light. */
var() protected export editinline KFParticleSystemComponent PSC_SpineLights[4];
/** Socket to attach the pilot light to. */
var() name SpineLightSocketNames[4];

protected simulated function TurnOnPilot()
{
    local int I;

    if(bPilotLightOn)
    {
        return;
    }
    I = 0;
    J0x1A:

    if(I < 4)
    {
        if(PSC_SpineLights[I] != none)
        {
            WeapMesh.AttachComponentToSocket(PSC_SpineLights[I], SpineLightSocketNames[I]);
            PSC_SpineLights[I].ActivateSystem();
            PSC_SpineLights[I].SetFloatParameter('Pilotlow', 1);
            PSC_SpineLights[I].SetFloatParameter('Pilothigh', 0);
        }
        ++ I;
        goto J0x1A;
    }
    super.TurnOnPilot();
}

protected simulated function TurnOffPilot()
{
    local int I;

    super.TurnOffPilot();
    I = 0;
    J0x15:

    if(I < 4)
    {
        if(PSC_SpineLights[I] != none)
        {
            PSC_SpineLights[I].DeactivateSystem();
        }
        ++ I;
        goto J0x15;
    }
}

protected simulated function TurnOnFireSpray()
{
    local int I;

    if(!bFireSpraying)
    {
        I = 0;
        J0x1A:

        if(I < 4)
        {
            if(PSC_SpineLights[I] != none)
            {
                PSC_SpineLights[I].SetFloatParameter('Pilotlow', 0);
                PSC_SpineLights[I].SetFloatParameter('Pilothigh', 1);
            }
            ++ I;
            goto J0x1A;
        }
    }
    super.TurnOnFireSpray();
}

protected simulated function TurnOffFireSpray()
{
    local int I;

    I = 0;
    J0x0B:

    if(I < 4)
    {
        if(PSC_SpineLights[I] != none)
        {
            PSC_SpineLights[I].SetFloatParameter('Pilotlow', 1);
            PSC_SpineLights[I].SetFloatParameter('Pilothigh', 0);
        }
        ++ I;
        goto J0x0B;
    }
    super.TurnOffFireSpray();
}

defaultproperties
{
    begin object na[0]me=SpineLight0 class=KFParticleSystemComponent
        Template=ParticleSystem'WEP_Flamethrower_EMIT.FX_pilot_light_01'
        ReplacementPrimitive=none
        TickGroup=ETickingGroup.TG_PostUpdateWork
    object end
    // Reference: KFParticleSystemComponent'Default__KFWeapAttach_Flamethrower.SpineLight0'
    PSC_SpineLights=SpineLight0
    begin object name=SpineLight1 class=KFParticleSystemComponent
        Template=ParticleSystem'WEP_Flamethrower_EMIT.FX_pilot_light_01'
        ReplacementPrimitive=none
        TickGroup=ETickingGroup.TG_PostUpdateWork
    object end
    // Reference: KFParticleSystemComponent'Default__KFWeapAttach_Flamethrower.SpineLight1'
    PSC_SpineLights=SpineLight1
    begin object name=SpineLight2 class=KFParticleSystemComponent
        Template=ParticleSystem'WEP_Flamethrower_EMIT.FX_pilot_light_01'
        ReplacementPrimitive=none
        TickGroup=ETickingGroup.TG_PostUpdateWork
    object end
    // Reference: KFParticleSystemComponent'Default__KFWeapAttach_Flamethrower.SpineLight2'
    PSC_SpineLights=SpineLight2
    begin object name=SpineLight3 class=KFParticleSystemComponent
        Template=ParticleSystem'WEP_Flamethrower_EMIT.FX_pilot_light_01'
        ReplacementPrimitive=none
        TickGroup=ETickingGroup.TG_PostUpdateWork
    object end
    // Reference: KFParticleSystemComponent'Default__KFWeapAttach_Flamethrower.SpineLight3'
    PSC_SpineLights=SpineLight3
    SpineLightSocketNames[0]=FXPilot2
    SpineLightSocketNames[1]=FXPilot3
    SpineLightSocketNames[2]=FXPilot4
    SpineLightSocketNames[3]=FXPilot5
    FlameSprayArchetype=SprayActor_Flame'WEP_Flamethrower_ARCH.WEP_Flamethrower_Flame'
    PilotLightPlayEvent=AkEvent'WW_WEP_SA_Flamethrower.Play_WEP_SA_Flamethrower_PilotLight_Loop'
    PilotLightStopEvent=AkEvent'WW_WEP_SA_Flamethrower.Stop_WEP_SA_Flamethrower_PilotLight_Loop'
    begin object name=PilotLight0 class=KFParticleSystemComponent
        Template=ParticleSystem'WEP_Flamethrower_EMIT.FX_pilot_light_01'
        ReplacementPrimitive=none
    object end
    // Reference: KFParticleSystemComponent'Default__KFWeapAttach_Flamethrower.PilotLight0'
    PSC_PilotLight=PilotLight0
    PilotLightSocketName=FXPilot1
    begin object name=FlameEndSpray0 class=ParticleSystemComponent
        ReplacementPrimitive=none
    object end
    // Reference: ParticleSystemComponent'Default__KFWeapAttach_Flamethrower.FlameEndSpray0'
    PSC_EndSpray=FlameEndSpray0
    PilotLights=/* Array type was not detected. */
    begin object name=SkeletalMeshComponent0 class=SkeletalMeshComponent
        Animations=AnimNodeSequence'Default__KFWeapAttach_Flamethrower.SkeletalMeshComponent0.MeshSequenceA'
        ReplacementPrimitive=none
    object end
    // Reference: SkeletalMeshComponent'Default__KFWeapAttach_Flamethrower.SkeletalMeshComponent0'
    WeapMesh=SkeletalMeshComponent0
}