/*******************************************************************************
 * KFTutorialSectionInfo generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFTutorialSectionInfo extends Object
    hidecategories(Object);

struct STutorialSlide
{
    var() string TitleKey;
    var() string DescriptionKey;
    var() Texture2D UIImage;
    /** Key binds to locate and merge with description text */
    var() array<string> KeyGBAs;
    /** If >= 0, replace this slide from the GamepadSlides array */
    var() int GamepadSlideIndex;

    structdefaultproperties
    {
        TitleKey=""
        DescriptionKey=""
        UIImage=none
        KeyGBAs=none
        GamepadSlideIndex=-1
    }
};

/** Default slides */
var() private array<STutorialSlide> TutorialSlides;
/** Override slides used only for gamepad */
var() private array<STutorialSlide> GamepadReplacementSlides;
var() AkEvent VoiceOverOpenEvent;
var() AkEvent VoiceOverCloseEvent;
/** Delay before this screen opens */
var() float OpenDelay;

function array<STutorialSlide> GetSlides(PlayerController PC)
{
    local array<STutorialSlide> MergedSlides;
    local STutorialSlide NextSlide;

    if(GamepadReplacementSlides.Length > 0)
    {
        if(PC.PlayerInput.bUsingGamepad)
        {
            foreach TutorialSlides(NextSlide,)
            {
                if((NextSlide.GamepadSlideIndex >= 0) && NextSlide.GamepadSlideIndex < GamepadReplacementSlides.Length)
                {
                    MergedSlides.AddItem(GamepadReplacementSlides[NextSlide.GamepadSlideIndex];                    
                }
                else
                {
                    MergedSlides.AddItem(NextSlide;
                }                
            }            
            return MergedSlides;
        }
    }
    return TutorialSlides;
}

function OpenDelayTimer()
{
    local KFGameInfo_Tutorial GI;

    GI = KFGameInfo_Tutorial(Class'WorldInfo'.static.GetWorldInfo().Game);
    if(GI != none)
    {
        GI.CreateTutorialHUD(self, true);
    }
}
