/*******************************************************************************
 * KFWeap_Minigun generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFWeap_Minigun extends KFWeap_MinigunBase
    config(Game)
    hidecategories(Navigation,Advanced,Collision,Mobile,Movement,Object,Physics,Attachment,Debug);

var CameraAnim ShootCameraAnim;
var CameraAnimInst ShootCameraAnimInstance;
var float ShootCameraAnimPlayRate;
var float ShootCameraAnimScale;
var float ShootCameraAnimBlendTime;
var WeaponFireSndInfo BarrelRotationLoopSound;
var bool bPlayingLoopingBarrelSnd;
var bool bPlayingLoopingBarrelStopSnd;
var WeaponFireSndInfo BarrelStopRotationSound;
var transient float CurrentBarrelRotParam;
var transient KFPawn PreviousOwner;

simulated function StartFire(byte FireModeNum)
{
    if(FireModeNum == 1)
    {
        return;
    }
    super(KFWeapon).StartFire(FireModeNum);
}

simulated event Tick(float DeltaTime)
{
    local float NewCurrentBarrelParam;
    local KFPawn KFP;
    local bool bPlaySound;

    super.Tick(DeltaTime);
    KFP = KFPawn(Instigator);
    if((KFP == none) && PreviousOwner != none)
    {
        PreviousOwner.SetSecondaryWeaponComponentRTPCValue("MinigunRotation", 0);
        PreviousOwner.SetSecondaryWeaponAmbientSound(none, none);
        bPlayingLoopingBarrelSnd = false;
        bPlayingLoopingBarrelStopSnd = false;
        CurrentBarrelRotParam = 0;
        WindUpControlTime = 0;
        PreviousOwner = none;
        return;
    }
    bPlaySound = (KFP != none) && (WorldInfo.NetMode != NM_Client) || KFP.IsLocallyControlled();
    NewCurrentBarrelParam = CurrentBarrelRotParam;
    if(((KFP != none) && KFP.IsFirstPerson()) && IsInState('WeaponPuttingDown') || IsInState('Inactive'))
    {
        UpdateBarrelSoundOnForceStop(bPlaySound);
        return;
    }
    if((WindUpControlTime > float(0)) && !bPlayingLoopingBarrelSnd)
    {
        bPlayingLoopingBarrelSnd = true;
        if(bPlaySound)
        {
            KFP.SetSecondaryWeaponAmbientSound(BarrelRotationLoopSound.DefaultCue, BarrelRotationLoopSound.FirstPersonCue);
        }        
    }
    else
    {
        if((WindUpControlTime <= float(0)) && bPlayingLoopingBarrelSnd)
        {
            bPlayingLoopingBarrelSnd = false;
            bPlayingLoopingBarrelStopSnd = false;
            if(bPlaySound)
            {
                KFP.SetSecondaryWeaponAmbientSound(none, none);
            }
        }
    }
    if(WindUpControlTime > float(0))
    {
        NewCurrentBarrelParam = (100 * WindUpControlTime) / WindUpActivationTime;
        if(KFP != none)
        {
            KFP.SetSecondaryWeaponComponentRTPCValue("MinigunRotation", NewCurrentBarrelParam);
        }
        if(((NewCurrentBarrelParam < float(20)) && NewCurrentBarrelParam < CurrentBarrelRotParam) && !bPlayingLoopingBarrelStopSnd)
        {
            bPlayingLoopingBarrelStopSnd = true;
            if(KFP != none)
            {
                KFP.SetWeaponAmbientSound(BarrelStopRotationSound.DefaultCue, BarrelStopRotationSound.FirstPersonCue);
            }
        }
        CurrentBarrelRotParam = NewCurrentBarrelParam;
    }
    PreviousOwner = KFP;
}

simulated function UpdateBarrelSoundOnForceStop(bool bPlaySound)
{
    local KFPawn KFP;

    if(bPlayingLoopingBarrelSnd)
    {
        KFP = KFPawn(Instigator);
        CurrentBarrelRotParam -= float(2);
        if(KFP != none)
        {
            KFP.SetSecondaryWeaponComponentRTPCValue("MinigunRotation", CurrentBarrelRotParam);
        }
        if((CurrentBarrelRotParam > float(20)) && !bPlayingLoopingBarrelStopSnd)
        {
            bPlayingLoopingBarrelStopSnd = true;
            if(KFP != none)
            {
                KFP.SetWeaponAmbientSound(BarrelStopRotationSound.DefaultCue, BarrelStopRotationSound.FirstPersonCue);
            }
        }
        if(CurrentBarrelRotParam < float(0))
        {
            CurrentBarrelRotParam = 0;
            bPlayingLoopingBarrelSnd = false;
            bPlayingLoopingBarrelStopSnd = false;
            if(bPlaySound)
            {
                KFP.SetSecondaryWeaponAmbientSound(none, none);
            }
        }
    }
}

static simulated event KFGame.KFGFxObject_TraderItems.EFilterTypeUI GetTraderFilter()
{
    return 7;
}

simulated state WeaponFiring
{
    simulated function BeginState(name PrevStateName)
    {
        super.BeginState(PrevStateName);
        if(Instigator.IsLocallyControlled())
        {
            ShootCameraAnimInstance = PlayCameraAnim(ShootCameraAnim, ShootCameraAnimScale, ShootCameraAnimPlayRate, ShootCameraAnimBlendTime, ShootCameraAnimBlendTime, true, false);
        }
    }

    simulated function EndState(name NextStateName)
    {
        local PlayerController PC;

        super.EndState(NextStateName);
        if(Instigator.IsLocallyControlled())
        {
            PC = PlayerController(Instigator.Controller);
            if((PC.PlayerCamera != none) && ShootCameraAnimInstance != none)
            {
                PC.PlayerCamera.StopCameraAnim(ShootCameraAnimInstance);
                ShootCameraAnimInstance = none;
            }
        }
    }
    stop;    
}

defaultproperties
{
    ShootCameraAnim=CameraAnim'WEP_1P_Minigun_ANIM.Shoot'
    ShootCameraAnimPlayRate=1
    ShootCameraAnimScale=0.19
    ShootCameraAnimBlendTime=0.1
    BarrelRotationLoopSound=(DefaultCue=AkEvent'WW_WEP_Minigun.Play_WEP_Minigun_Loop_3P',FirstPersonCue=AkEvent'WW_WEP_Minigun.Play_WEP_Minigun_Loop_1P')
    BarrelStopRotationSound=(DefaultCue=AkEvent'WW_WEP_Minigun.Play_WEP_Minigun_Decelerate_3P',FirstPersonCue=AkEvent'WW_WEP_Minigun.Play_WEP_Minigun_Decelerate_1P')
    WindUpActivationTime=0.7
    WindUpRotationSpeed=1200
    WindUpPawnMovementSpeed=0.8
    FiringViewRotationSpeed=320
    FiringPawnMovementSpeed=0.3
    PackageKey="Minigun"
    FirstPersonMeshName="wep_1p_minigun_mesh.Wep_1stP_Minigun_Rig"
    FirstPersonAnimSetNames=/* Array type was not detected. */
    PickupMeshName="WEP_3P_Minigun_MESH.Wep_3rdP_Minigun_LowPoly_Pickup"
    AttachmentArchetypeName="WEP_Minigun_ARCH.Wep_Minigun_3P"
    MuzzleFlashTemplateName="WEP_Minigun_ARCH.Wep_Minigun_MuzzleFlash"
    bCanBeReloaded=true
    bReloadFromMagazine=true
    FireModeIconPaths=/* Array type was not detected. */
    SingleFireSoundIndex=1
    InventorySize=10
    PenetrationPower=/* Array type was not detected. */
    MeshIronSightFOV=82
    PlayerIronSightFOV=82
    IronSightPosition=(X=3,Y=15,Z=15)
    DOF_FG_FocalRadius=85
    DOF_FG_MaxNearBlurSize=2.5
    GroupPriority=130
    WeaponSelectTexture=Texture2D'WEP_UI_Minigun_TEX.UI_WeaponSelect_Minigun'
    MagazineCapacity=90
    SpareAmmoCapacity=540
    InitialSpareMags=1
    AmmoPickupScale=0.67
    bLoopingFireAnim=/* Array type was not detected. */
    bLoopingFireSnd=/* Array type was not detected. */
    WeaponFireSnd=/* Array type was not detected. */
    WeaponFireLoopEndSnd=/* Array type was not detected. */
    WeaponDryFireSnd=/* Array type was not detected. */
    PlayerViewOffset=(X=3,Y=15,Z=15)
    MeleeAttackHelper=KFMeleeHelperWeapon'Default__KFWeap_Minigun.MeleeHelper'
    EjectedShellForegroundDuration=0.8
    maxRecoilPitch=200
    minRecoilPitch=150
    maxRecoilYaw=130
    minRecoilYaw=-130
    RecoilRate=0.085
    RecoilViewRotationScale=0.25
    RecoilMaxYawLimit=500
    RecoilMinYawLimit=65035
    RecoilMaxPitchLimit=900
    RecoilMinPitchLimit=65035
    RecoilISMaxYawLimit=75
    RecoilISMinYawLimit=65460
    RecoilISMaxPitchLimit=375
    RecoilISMinPitchLimit=65460
    HippedRecoilModifier=1.5
    AssociatedPerkClasses=/* Array type was not detected. */
    FiringStatesArray=/* Array type was not detected. */
    WeaponFireTypes=/* Array type was not detected. */
    WeaponProjectiles=/* Array type was not detected. */
    FireInterval=/* Array type was not detected. */
    Spread=/* Array type was not detected. */
    InstantHitDamage=/* Array type was not detected. */
    InstantHitDamageTypes=/* Array type was not detected. */
    FireOffset=(X=30,Y=4.5,Z=-5)
    begin object name=FirstPersonMesh class=KFSkeletalMeshComponent
        AnimTreeTemplate=AnimTree'WEP_Minigun_ARCH.WEP_Animtree_Minigun_1p'
        ReplacementPrimitive=none
    object end
    // Reference: KFSkeletalMeshComponent'Default__KFWeap_Minigun.FirstPersonMesh'
    Mesh=FirstPersonMesh
    ItemName="Minigun"
    begin object name=StaticPickupComponent class=StaticMeshComponent
        ReplacementPrimitive=none
    object end
    // Reference: StaticMeshComponent'Default__KFWeap_Minigun.StaticPickupComponent'
    DroppedPickupMesh=StaticPickupComponent
    begin object name=StaticPickupComponent class=StaticMeshComponent
        ReplacementPrimitive=none
    object end
    // Reference: StaticMeshComponent'Default__KFWeap_Minigun.StaticPickupComponent'
    PickupFactoryMesh=StaticPickupComponent
}