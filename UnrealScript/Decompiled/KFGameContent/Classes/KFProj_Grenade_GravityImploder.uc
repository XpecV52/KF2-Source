/*******************************************************************************
 * KFProj_Grenade_GravityImploder generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class KFProj_Grenade_GravityImploder extends KFProj_BallisticExplosive
    hidecategories(Navigation);

var float DetonationTime;
var float VortexDuration;
var float VortexRadius;
var float VortexImpulseStrength;
var protected transient bool bVortexActive;
var protected export editinline RB_RadialImpulseComponent RadialImpulseComponent;

simulated event PostBeginPlay()
{
    super(KFProjectile).PostBeginPlay();
    AdjustCanDisintigrate();
    GotoState('GrenadeState');
}

simulated function Timer_Detonate()
{
    Detonate();
}

simulated function Detonate()
{
    Explode(Location, vect(0, 0, 1) >> Rotation);
}

simulated function Explode(Vector HitLocation, Vector HitNormal)
{
    super.Explode(HitLocation, HitNormal);
    GotoState('VortexState');
}

simulated function Timer_EndVortex()
{
    bVortexActive = false;
    DeferredDestroy(0.15);
}

simulated function OnInstigatorControllerLeft()
{
    if(WorldInfo.NetMode != NM_Client)
    {
        SetTimer((1 + float(Rand(5))) + FRand(), false, 'Timer_Detonate');
    }
}

simulated state GrenadeState
{
    simulated event BeginState(name PrevStateName)
    {
        super(Object).BeginState(PrevStateName);
        if(Role == ROLE_Authority)
        {
            SetTimer(DetonationTime, false, 'Timer_Detonate');
        }
    }
    stop;    
}

simulated state VortexState
{
    simulated event BeginState(name PrevStateName)
    {
        super(Object).BeginState(PrevStateName);
        ClearTimer('Timer_Detonate');
        bVortexActive = true;
        if(Role == ROLE_Authority)
        {
            SetTimer(VortexDuration, false, 'Timer_EndVortex');
        }
    }

    simulated event Tick(float DeltaTime)
    {
        local float ImpulseModifier;

        if(bVortexActive && (WorldInfo.NetMode == NM_Client) || WorldInfo.NetMode == NM_Standalone)
        {
            ImpulseModifier = 1;
            RadialImpulseComponent.ImpulseRadius = VortexRadius;
            RadialImpulseComponent.ImpulseStrength = VortexImpulseStrength * ImpulseModifier;
            RadialImpulseComponent.bVelChange = true;
            RadialImpulseComponent.ImpulseFalloff = 0;
            RadialImpulseComponent.FireImpulse(Location);
        }
    }
    stop;    
}

defaultproperties
{
    DetonationTime=5
    VortexDuration=0.5
    VortexRadius=450
    VortexImpulseStrength=-100
    begin object name=ImpulseComponent0 class=RB_RadialImpulseComponent
        ReplacementPrimitive=none
    object end
    // Reference: RB_RadialImpulseComponent'Default__KFProj_Grenade_GravityImploder.ImpulseComponent0'
    RadialImpulseComponent=ImpulseComponent0
    GrenadeBounceEffectInfo=KFImpactEffectInfo'FX_Impacts_ARCH.DefaultGrenadeImpacts'
    bWarnAIWhenFired=true
    TouchTimeThreshhold=60
    TerminalVelocity=3200
    begin object name=ImploTemplate0 class=KFGameExplosion
        ExplosionEffects=KFImpactEffectInfo'WEP_Gravity_Imploder_ARCH.Yellow_Explosion'
        Damage=320
        DamageRadius=280
        DamageFalloffExponent=0.2
        MyDamageType=Class'KFDT_Explosive_GravityImploder'
        KnockDownStrength=0
        MomentumTransferScale=-10000
        ExplosionSound=AkEvent'WW_WEP_Gravity_Imploder.Play_WEP_Gravity_Imploder_Grenade_Yellow_Implosion'
        ExploLight=PointLightComponent'Default__KFProj_Grenade_GravityImploder.ExplosionPointLight'
        ExploLightFadeOutTime=0.2
        CamShake=KFCameraShake'FX_CameraShake_Arch.Misc_Explosions.Light_Explosion_Rumble'
        CamShakeInnerRadius=200
        CamShakeFalloff=1.5
    object end
    // Reference: KFGameExplosion'Default__KFProj_Grenade_GravityImploder.ImploTemplate0'
    ExplosionTemplate=ImploTemplate0
    ProjDisintegrateTemplate=ParticleSystem'ZED_Siren_EMIT.FX_Siren_grenade_disable_01'
    AltExploEffects=KFImpactEffectInfo'WEP_Gravity_Imploder_ARCH.Yellow_Explosion_Concussive_Force'
    ProjFlightTemplate=ParticleSystem'WEP_Gravity_Imploder_EMIT.FX_Yellow_Projectile'
    ProjFlightTemplateZedTime=ParticleSystem'WEP_Gravity_Imploder_EMIT.FX_Yellow_Projectile_ZEDTIME'
    AmbientComponent=AkComponent'Default__KFProj_Grenade_GravityImploder.AmbientAkSoundComponent'
    Speed=3200
    MaxSpeed=3200
    begin object name=CollisionCylinder class=CylinderComponent
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__KFProj_Grenade_GravityImploder.CollisionCylinder'
    CylinderComponent=CollisionCylinder
    begin object name=CollisionCylinder class=CylinderComponent
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__KFProj_Grenade_GravityImploder.CollisionCylinder'
    Components(0)=CollisionCylinder
    Components(1)=AkComponent'Default__KFProj_Grenade_GravityImploder.AmbientAkSoundComponent'
    begin object name=ImpulseComponent0 class=RB_RadialImpulseComponent
        ReplacementPrimitive=none
    object end
    // Reference: RB_RadialImpulseComponent'Default__KFProj_Grenade_GravityImploder.ImpulseComponent0'
    Components(2)=ImpulseComponent0
    Physics=EPhysics.PHYS_Falling
    LifeSpan=0
    begin object name=CollisionCylinder class=CylinderComponent
        ReplacementPrimitive=none
    object end
    // Reference: CylinderComponent'Default__KFProj_Grenade_GravityImploder.CollisionCylinder'
    CollisionComponent=CollisionCylinder
}